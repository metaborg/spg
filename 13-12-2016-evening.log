===================================
2016-12-13T20:36:22.278+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s79886", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x79903"), Var("x79904"), TermAppl("Print", List(TermAppl("Int", List(Var("x80816"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x79896"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Method", List(TermAppl("ClassType", List(Var("x80768"))), Var("x79965"), TermAppl("Nil", List()), TermAppl("Nil", List()), TermAppl("Nil", List()), TermAppl("NewObject", List(Var("x80758"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x79955"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s79886", List()), "Class")), CDistinct(Declarations(TermAppl("s79894", List()), "Var")), CDistinct(Declarations(TermAppl("s79894", List()), "Method")), CDistinct(Declarations(TermAppl("s79953", List()), "Var")), CDistinct(Declarations(TermAppl("s79953", List()), "Method")), CDistinct(Declarations(TermAppl("s79962", List()), "Var")), CSubtype(TermAppl("TClass", List(SymbolicName("Class", "x79896"))),TermAppl("TClass", List(SymbolicName("Class", "x79896"))))),List(NewScope(Var("s")), CGDecl(TermAppl("s79886", List()),SymbolicName("Class", "x79896")), CGAssoc(SymbolicName("Class", "x79896"),TermAppl("s79894", List())), CGDecl(TermAppl("s79894", List()),ConcreteName("Implicit", "this", 79901)), CGDirectEdge(TermAppl("s79894", List()),Label('P'),TermAppl("s79886", List())), NewScope(Var("cs")), CGDecl(TermAppl("s79886", List()),SymbolicName("Class", "x79903")), CGDecl(TermAppl("s79886", List()),SymbolicName("Class", "x79955")), CGAssoc(SymbolicName("Class", "x79955"),TermAppl("s79953", List())), CGDecl(TermAppl("s79953", List()),ConcreteName("Implicit", "this", 79960)), CGDirectEdge(TermAppl("s79953", List()),Label('P'),TermAppl("s79886", List())), NewScope(Var("cs")), CGDecl(TermAppl("s79894", List()),SymbolicName("Method", "x79965")), CGDirectEdge(TermAppl("s79962", List()),Label('P'),TermAppl("s79894", List())), NewScope(Var("as")), NewScope(Var("ms")), CGRef(SymbolicName("Class", "x80758"),TermAppl("s79962", List())), CGRef(SymbolicName("Class", "x80768"),TermAppl("s79894", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x79896"), TermAppl("TClass", List(SymbolicName("Class", "x79896")))), Binding(SymbolicName("Class", "x79903"), TermAppl("TMainClass", List())), Binding(ConcreteName("Implicit", "this", 79901), TermAppl("TClass", List(SymbolicName("Class", "x79896")))), Binding(ConcreteName("Implicit", "this", 79960), TermAppl("TClass", List(SymbolicName("Class", "x79955")))), Binding(SymbolicName("Class", "x79955"), TermAppl("TClass", List(SymbolicName("Class", "x79955")))), Binding(SymbolicName("Method", "x79965"), TermAppl("TMethod", List(TermAppl("TClass", List(SymbolicName("Class", "x79896"))), TermAppl("Nil", List())))))),Resolution(Map(Tuple2(SymbolicName("Class", "x80758"), SymbolicName("Class", "x79896")), Tuple2(SymbolicName("Class", "x80768"), SymbolicName("Class", "x79896")))),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] Y) {
    System.out.println(7);
    }
}

class n1 {

  public n1 F856_N() {
  
    return new n1();
  }
}

class n4 {

})
-----------------------------------
===================================
2016-12-13T20:36:25.607+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s154294", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x154303"), Var("x154304"), TermAppl("While", List(TermAppl("False", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s154294", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s154294", List()),SymbolicName("Class", "x154303"))),TypeEnv(Map(Binding(SymbolicName("Class", "x154303"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Sx {
  public static void main (String[] rh) {
    while(false) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:25.687+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s155726", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x155735"), Var("x155736"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s155726", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s155726", List()),SymbolicName("Class", "x155735"))),TypeEnv(Map(Binding(SymbolicName("Class", "x155735"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q__ {
  public static void main (String[] O) {
    {
      {
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:26.59+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s193758", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x193763"), Var("x193764"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s193758", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s193758", List()),SymbolicName("Class", "x193763"))),TypeEnv(Map(Binding(SymbolicName("Class", "x193763"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class V_ {
  public static void main (String[] J) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:29.107+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s259858", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x259867"), Var("x259868"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x260675"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s259858", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s259858", List()),SymbolicName("Class", "x259867"))),TypeEnv(Map(Binding(SymbolicName("Class", "x259867"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class C {
  public static void main (String[] H8) {
    while(true) System.out.println(5);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:29.545+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s271353", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x271358"), Var("x271359"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s271353", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s271353", List()),SymbolicName("Class", "x271358"))),TypeEnv(Map(Binding(SymbolicName("Class", "x271358"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class J_ {
  public static void main (String[] Ig) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:29.586+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s271395", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x271404"), Var("x271405"), TermAppl("Print", List(TermAppl("Int", List(Var("x271526"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x271435"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x271686"), TermAppl("Parent", List(Var("x271694"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s271395", List()), "Class")), CDistinct(Declarations(TermAppl("s271433", List()), "Var")), CDistinct(Declarations(TermAppl("s271433", List()), "Method")), CDistinct(Declarations(TermAppl("s271684", List()), "Var")), CDistinct(Declarations(TermAppl("s271684", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s271395", List()),SymbolicName("Class", "x271404")), CGDecl(TermAppl("s271395", List()),SymbolicName("Class", "x271435")), CGAssoc(SymbolicName("Class", "x271435"),TermAppl("s271433", List())), CGDecl(TermAppl("s271433", List()),ConcreteName("Implicit", "this", 271440)), CGDirectEdge(TermAppl("s271433", List()),Label('P'),TermAppl("s271395", List())), NewScope(Var("cs")), CGDecl(TermAppl("s271395", List()),SymbolicName("Class", "x271686")), CGAssoc(SymbolicName("Class", "x271686"),TermAppl("s271684", List())), CGDecl(TermAppl("s271684", List()),ConcreteName("Implicit", "this", 271691)), CGDirectEdge(TermAppl("s271684", List()),Label('P'),TermAppl("s271395", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x271694"),TermAppl("s271395", List())), CGNamedEdge(Var("x271693"),Label('I'),SymbolicName("Class", "x271694"))),TypeEnv(Map(Binding(SymbolicName("Class", "x271686"), TermAppl("TClass", List(SymbolicName("Class", "x271686")))), Binding(ConcreteName("Implicit", "this", 271440), TermAppl("TClass", List(SymbolicName("Class", "x271435")))), Binding(SymbolicName("Class", "x271435"), TermAppl("TClass", List(SymbolicName("Class", "x271435")))), Binding(ConcreteName("Implicit", "this", 271691), TermAppl("TClass", List(SymbolicName("Class", "x271686")))), Binding(SymbolicName("Class", "x271404"), TermAppl("TMainClass", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x271694"), SymbolicName("Class", "x271435")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x271686"))), TermAppl("TClass", List(SymbolicName("Class", "x271435")))))),List())),class n2 {
  public static void main (String[] C) {
    System.out.println(1);
    }
}

class n1 {

}

class n4 extends n1 {

})
-----------------------------------
===================================
2016-12-13T20:36:29.595+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s271709", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x271714"), Var("x271715"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s271709", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s271709", List()),SymbolicName("Class", "x271714"))),TypeEnv(Map(Binding(SymbolicName("Class", "x271714"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class d {
  public static void main (String[] E5) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:29.713+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s272590", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x272599"), Var("x272600"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s272590", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s272590", List()),SymbolicName("Class", "x272599"))),TypeEnv(Map(Binding(SymbolicName("Class", "x272599"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class e {
  public static void main (String[] e__2D) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:30.23+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s291740", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x291749"), Var("x291750"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x292090"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s291740", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s291740", List()),SymbolicName("Class", "x291749"))),TypeEnv(Map(Binding(SymbolicName("Class", "x291749"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class I {
  public static void main (String[] G) {
    System.out.println(new int[4].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:34.368+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s423721", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x423730"), Var("x423731"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s423721", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s423721", List()),SymbolicName("Class", "x423730"))),TypeEnv(Map(Binding(SymbolicName("Class", "x423730"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] G) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:35.322+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s456805", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x456814"), Var("x456815"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s456805", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s456805", List()),SymbolicName("Class", "x456814"))),TypeEnv(Map(Binding(SymbolicName("Class", "x456814"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class kL9 {
  public static void main (String[] A_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:35.659+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s467442", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x467447"), Var("x467448"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s467442", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s467442", List()),SymbolicName("Class", "x467447"))),TypeEnv(Map(Binding(SymbolicName("Class", "x467447"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class B {
  public static void main (String[] F) {
    while(true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:36.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s508449", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x508454"), Var("x508455"), TermAppl("Print", List(TermAppl("Int", List(Var("x508499"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s508449", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s508449", List()),SymbolicName("Class", "x508454"))),TypeEnv(Map(Binding(SymbolicName("Class", "x508454"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class QhK_w7U_ {
  public static void main (String[] y) {
    System.out.println(998);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:39.07+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s589535", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x589540"), Var("x589541"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s589535", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s589535", List()),SymbolicName("Class", "x589540"))),TypeEnv(Map(Binding(SymbolicName("Class", "x589540"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Lh_Y {
  public static void main (String[] y_VC) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:46.935+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s788459", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x788464"), Var("x788465"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x788477"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x788524"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s788459", List()), "Class")), CDistinct(Declarations(TermAppl("s788475", List()), "Var")), CDistinct(Declarations(TermAppl("s788475", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s788459", List()),SymbolicName("Class", "x788464")), CGDecl(TermAppl("s788459", List()),SymbolicName("Class", "x788477")), CGAssoc(SymbolicName("Class", "x788477"),TermAppl("s788475", List())), CGDecl(TermAppl("s788475", List()),ConcreteName("Implicit", "this", 788482)), CGDirectEdge(TermAppl("s788475", List()),Label('P'),TermAppl("s788459", List())), NewScope(Var("cs")), CGDecl(TermAppl("s788475", List()),SymbolicName("Var", "x788524"))),TypeEnv(Map(Binding(SymbolicName("Class", "x788464"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x788477"), TermAppl("TClass", List(SymbolicName("Class", "x788477")))), Binding(ConcreteName("Implicit", "this", 788482), TermAppl("TClass", List(SymbolicName("Class", "x788477")))), Binding(SymbolicName("Var", "x788524"), TermAppl("TInt", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] J_1_) {
    {
    }
    }
}

class n2 {
  int g0_V1_;

})
-----------------------------------
===================================
2016-12-13T20:36:47.634+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s801561", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x801566"), Var("x801567"), TermAppl("While", List(TermAppl("False", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x801894"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s801561", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s801561", List()),SymbolicName("Class", "x801566"))),TypeEnv(Map(Binding(SymbolicName("Class", "x801566"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class j {
  public static void main (String[] p_4xr) {
    while(false) System.out.println(45);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:47.651+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s802349", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x802354"), Var("x802355"), TermAppl("Print", List(TermAppl("Int", List(Var("x802395"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s802349", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s802349", List()),SymbolicName("Class", "x802354"))),TypeEnv(Map(Binding(SymbolicName("Class", "x802354"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class u {
  public static void main (String[] u) {
    System.out.println(1);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:52.805+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s996320", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x996325"), Var("x996326"), TermAppl("Print", List(TermAppl("Int", List(Var("x996366"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s996320", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s996320", List()),SymbolicName("Class", "x996325"))),TypeEnv(Map(Binding(SymbolicName("Class", "x996325"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Jol {
  public static void main (String[] pQ) {
    System.out.println(93);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:54.233+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1059885", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1059890"), Var("x1059891"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1059885", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1059885", List()),SymbolicName("Class", "x1059890"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1059890"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class TM_ {
  public static void main (String[] d) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:55.781+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1130429", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1130438"), Var("x1130439"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1130429", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1130429", List()),SymbolicName("Class", "x1130438"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1130438"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class cS {
  public static void main (String[] u) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:58.704+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1253018", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1253027"), Var("x1253028"), TermAppl("Print", List(TermAppl("Int", List(Var("x1253068"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1253018", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1253018", List()),SymbolicName("Class", "x1253027"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1253027"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class K {
  public static void main (String[] Y0w) {
    System.out.println(5);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:59.001+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1264166", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1264171"), Var("x1264172"), TermAppl("Print", List(TermAppl("Int", List(Var("x1264212"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1264166", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1264166", List()),SymbolicName("Class", "x1264171"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1264171"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q {
  public static void main (String[] z_xM_w) {
    System.out.println(12878);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:59.052+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1264354", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1264363"), Var("x1264364"), TermAppl("Print", List(TermAppl("Int", List(Var("x1264404"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1264354", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1264354", List()),SymbolicName("Class", "x1264363"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1264363"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Y {
  public static void main (String[] x) {
    System.out.println(0939);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:59.722+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1286181", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1286190"), Var("x1286191"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1286181", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1286181", List()),SymbolicName("Class", "x1286190"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1286190"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] E_6l) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:36:59.729+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1286223", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1286232"), Var("x1286233"), TermAppl("Print", List(TermAppl("Int", List(Var("x1286273"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1286223", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1286223", List()),SymbolicName("Class", "x1286232"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1286232"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class M {
  public static void main (String[] f) {
    System.out.println(734);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:00.804+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1326042", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1326051"), Var("x1326052"), TermAppl("Print", List(TermAppl("Int", List(Var("x1326092"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1326042", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1326042", List()),SymbolicName("Class", "x1326051"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1326051"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class p {
  public static void main (String[] z) {
    System.out.println(022);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:00.813+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1326230", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1326235"), Var("x1326236"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x1326580"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1326230", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1326230", List()),SymbolicName("Class", "x1326235"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1326235"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class C {
  public static void main (String[] F) {
    System.out.println(new int[906540].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:00.861+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1328695", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1328704"), Var("x1328705"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1328695", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1328695", List()),SymbolicName("Class", "x1328704"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1328704"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class z {
  public static void main (String[] hq_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:00.88+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1329572", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1329581"), Var("x1329582"), TermAppl("Print", List(TermAppl("Int", List(Var("x1329622"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1329572", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1329572", List()),SymbolicName("Class", "x1329581"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1329581"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class zUr_j {
  public static void main (String[] Dl) {
    System.out.println(9);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:00.895+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1329760", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1329769"), Var("x1329770"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x1330410"))))))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1329760", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1329760", List()),SymbolicName("Class", "x1329769"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1329769"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q {
  public static void main (String[] Om_) {
    System.out.println(new int[new int[8].length].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:01.918+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1370513", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1370518"), Var("x1370519"), TermAppl("While", List(TermAppl("Not", List(TermAppl("Not", List(TermAppl("True", List()))))), TermAppl("While", List(TermAppl("False", List()), TermAppl("While", List(TermAppl("False", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1370513", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1370513", List()),SymbolicName("Class", "x1370518"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1370518"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class ga {
  public static void main (String[] N) {
    while(!!true) while(false) while(false) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:03.21+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1431898", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1431907"), Var("x1431908"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1431898", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1431898", List()),SymbolicName("Class", "x1431907"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1431907"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class G__ {
  public static void main (String[] T) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:04.423+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1485665", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1485670"), Var("x1485671"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1485665", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1485665", List()),SymbolicName("Class", "x1485670"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1485670"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class v {
  public static void main (String[] b_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:04.536+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1490371", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1490380"), Var("x1490381"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Print", List(TermAppl("Add", List(TermAppl("Int", List(Var("x1491340"))), TermAppl("Int", List(Var("x1491091"))))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1490415"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1490371", List()), "Class")), CDistinct(Declarations(TermAppl("s1490413", List()), "Var")), CDistinct(Declarations(TermAppl("s1490413", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1490371", List()),SymbolicName("Class", "x1490380")), CGDecl(TermAppl("s1490371", List()),SymbolicName("Class", "x1490415")), CGAssoc(SymbolicName("Class", "x1490415"),TermAppl("s1490413", List())), CGDecl(TermAppl("s1490413", List()),ConcreteName("Implicit", "this", 1490420)), CGDirectEdge(TermAppl("s1490413", List()),Label('P'),TermAppl("s1490371", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1490380"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x1490415"), TermAppl("TClass", List(SymbolicName("Class", "x1490415")))), Binding(ConcreteName("Implicit", "this", 1490420), TermAppl("TClass", List(SymbolicName("Class", "x1490415")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] n) {
    {
      System.out.println(5 + 2);
    }
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:37:06.358+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1562642", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1562651"), Var("x1562652"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1562642", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1562642", List()),SymbolicName("Class", "x1562651"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1562651"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class L {
  public static void main (String[] b5zZ) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:07.609+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1623937", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1623946"), Var("x1623947"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1623937", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1623937", List()),SymbolicName("Class", "x1623946"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1623946"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a8 {
  public static void main (String[] h) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:15.119+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1923877", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1923947"), Var("x1923948"), TermAppl("Print", List(TermAppl("Int", List(Var("x1924044"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1923887"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1923920"), TermAppl("Parent", List(Var("x1923952"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1923936"), TermAppl("Parent", List(Var("x1923965"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x1923978"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x1924201"))), Var("x1924192"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s1923877", List()), "Class")), CDistinct(Declarations(TermAppl("s1923885", List()), "Var")), CDistinct(Declarations(TermAppl("s1923885", List()), "Method")), CDistinct(Declarations(TermAppl("s1923918", List()), "Var")), CDistinct(Declarations(TermAppl("s1923918", List()), "Method")), CDistinct(Declarations(TermAppl("s1923934", List()), "Var")), CDistinct(Declarations(TermAppl("s1923934", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1923877", List()),SymbolicName("Class", "x1923887")), CGAssoc(SymbolicName("Class", "x1923887"),TermAppl("s1923885", List())), CGDecl(TermAppl("s1923885", List()),ConcreteName("Implicit", "this", 1923892)), CGDirectEdge(TermAppl("s1923885", List()),Label('P'),TermAppl("s1923877", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1923877", List()),SymbolicName("Class", "x1923920")), CGAssoc(SymbolicName("Class", "x1923920"),TermAppl("s1923918", List())), CGDecl(TermAppl("s1923918", List()),ConcreteName("Implicit", "this", 1923925)), CGDirectEdge(TermAppl("s1923918", List()),Label('P'),TermAppl("s1923877", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1923877", List()),SymbolicName("Class", "x1923936")), CGAssoc(SymbolicName("Class", "x1923936"),TermAppl("s1923934", List())), CGDecl(TermAppl("s1923934", List()),ConcreteName("Implicit", "this", 1923941)), CGDirectEdge(TermAppl("s1923934", List()),Label('P'),TermAppl("s1923877", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1923877", List()),SymbolicName("Class", "x1923947")), CGRef(SymbolicName("Class", "x1923952"),TermAppl("s1923877", List())), CGNamedEdge(Var("x1923951"),Label('I'),SymbolicName("Class", "x1923952")), CGRef(SymbolicName("Class", "x1923965"),TermAppl("s1923877", List())), CGNamedEdge(Var("x1923964"),Label('I'),SymbolicName("Class", "x1923965")), CGDecl(TermAppl("s1923934", List()),SymbolicName("Var", "x1923978")), CGDecl(TermAppl("s1923934", List()),SymbolicName("Var", "x1924192")), CGRef(SymbolicName("Class", "x1924201"),TermAppl("s1923934", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x1923947"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1924192"), TermAppl("TClass", List(SymbolicName("Class", "x1923920")))), Binding(SymbolicName("Class", "x1923920"), TermAppl("TClass", List(SymbolicName("Class", "x1923920")))), Binding(SymbolicName("Class", "x1923887"), TermAppl("TClass", List(SymbolicName("Class", "x1923887")))), Binding(ConcreteName("Implicit", "this", 1923925), TermAppl("TClass", List(SymbolicName("Class", "x1923920")))), Binding(SymbolicName("Var", "x1923978"), TermAppl("TInt", List())), Binding(ConcreteName("Implicit", "this", 1923892), TermAppl("TClass", List(SymbolicName("Class", "x1923887")))), Binding(ConcreteName("Implicit", "this", 1923941), TermAppl("TClass", List(SymbolicName("Class", "x1923936")))), Binding(SymbolicName("Class", "x1923936"), TermAppl("TClass", List(SymbolicName("Class", "x1923936")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x1923952"), SymbolicName("Class", "x1923887")), Tuple2(SymbolicName("Class", "x1923965"), SymbolicName("Class", "x1923920")), Tuple2(SymbolicName("Class", "x1924201"), SymbolicName("Class", "x1923920")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x1923920"))), TermAppl("TClass", List(SymbolicName("Class", "x1923887")))), Binding(TermAppl("TClass", List(SymbolicName("Class", "x1923936"))), TermAppl("TClass", List(SymbolicName("Class", "x1923920")))), Binding(TermAppl("TClass", List(SymbolicName("Class", "x1923936"))), TermAppl("TClass", List(SymbolicName("Class", "x1923887")))))),List())),class n8 {
  public static void main (String[] u) {
    System.out.println(8);
    }
}

class n2 {

}

class n1 extends n2 {

}

class n7 extends n1 {
  int n3;
  n1 n4;

})
-----------------------------------
===================================
2016-12-13T20:37:15.127+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1924204", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1924209"), Var("x1924210"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1924248"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1924204", List()), "Class")), CDistinct(Declarations(TermAppl("s1924246", List()), "Var")), CDistinct(Declarations(TermAppl("s1924246", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1924204", List()),SymbolicName("Class", "x1924209")), CGDecl(TermAppl("s1924204", List()),SymbolicName("Class", "x1924248")), CGAssoc(SymbolicName("Class", "x1924248"),TermAppl("s1924246", List())), CGDecl(TermAppl("s1924246", List()),ConcreteName("Implicit", "this", 1924253)), CGDirectEdge(TermAppl("s1924246", List()),Label('P'),TermAppl("s1924204", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1924209"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x1924248"), TermAppl("TClass", List(SymbolicName("Class", "x1924248")))), Binding(ConcreteName("Implicit", "this", 1924253), TermAppl("TClass", List(SymbolicName("Class", "x1924248")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] a7) {
    {
    }
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:37:18.098+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2050152", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2050161"), Var("x2050162"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2050152", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2050152", List()),SymbolicName("Class", "x2050161"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2050161"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class w_ {
  public static void main (String[] X) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:21.206+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2174265", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2174270"), Var("x2174271"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2174265", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2174265", List()),SymbolicName("Class", "x2174270"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2174270"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class h9 {
  public static void main (String[] v) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:21.268+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2178104", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2178109"), Var("x2178110"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2178104", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2178104", List()),SymbolicName("Class", "x2178109"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2178109"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class p {
  public static void main (String[] yI) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:21.335+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2181477", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2181486"), Var("x2181487"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2181477", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2181477", List()),SymbolicName("Class", "x2181486"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2181486"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class l9 {
  public static void main (String[] L) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:23.239+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2239104", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2239109"), Var("x2239110"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2239104", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2239104", List()),SymbolicName("Class", "x2239109"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2239109"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class u {
  public static void main (String[] Y_G53YK) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:23.327+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2242407", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2242459"), Var("x2242460"), TermAppl("While", List(TermAppl("Not", List(TermAppl("False", List()))), TermAppl("While", List(TermAppl("Not", List(TermAppl("True", List()))), TermAppl("Block", List(TermAppl("Nil", List()))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x2242417"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x2242446"))), Var("x2242429"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x2242468"), TermAppl("Parent", List(Var("x2242484"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x2243198"))), Var("x2242519"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x2242505"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s2242407", List()), "Class")), CDistinct(Declarations(TermAppl("s2242415", List()), "Var")), CDistinct(Declarations(TermAppl("s2242415", List()), "Method")), CDistinct(Declarations(TermAppl("s2242466", List()), "Var")), CDistinct(Declarations(TermAppl("s2242466", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2242407", List()),SymbolicName("Class", "x2242417")), CGAssoc(SymbolicName("Class", "x2242417"),TermAppl("s2242415", List())), CGDecl(TermAppl("s2242415", List()),ConcreteName("Implicit", "this", 2242422)), CGDirectEdge(TermAppl("s2242415", List()),Label('P'),TermAppl("s2242407", List())), NewScope(Var("cs")), CGDecl(TermAppl("s2242415", List()),SymbolicName("Var", "x2242429")), CGRef(SymbolicName("Class", "x2242446"),TermAppl("s2242415", List())), CGDecl(TermAppl("s2242407", List()),SymbolicName("Class", "x2242459")), CGDecl(TermAppl("s2242407", List()),SymbolicName("Class", "x2242468")), CGAssoc(SymbolicName("Class", "x2242468"),TermAppl("s2242466", List())), CGDecl(TermAppl("s2242466", List()),ConcreteName("Implicit", "this", 2242473)), CGDirectEdge(TermAppl("s2242466", List()),Label('P'),TermAppl("s2242407", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x2242484"),TermAppl("s2242407", List())), CGNamedEdge(Var("x2242483"),Label('I'),SymbolicName("Class", "x2242484")), CGDecl(TermAppl("s2242466", List()),SymbolicName("Var", "x2242505")), CGDecl(TermAppl("s2242466", List()),SymbolicName("Var", "x2242519")), CGRef(SymbolicName("Class", "x2243198"),TermAppl("s2242466", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x2242468"), TermAppl("TClass", List(SymbolicName("Class", "x2242468")))), Binding(SymbolicName("Var", "x2242505"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x2242417"), TermAppl("TClass", List(SymbolicName("Class", "x2242417")))), Binding(SymbolicName("Class", "x2242459"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x2242429"), TermAppl("TClass", List(SymbolicName("Class", "x2242417")))), Binding(ConcreteName("Implicit", "this", 2242473), TermAppl("TClass", List(SymbolicName("Class", "x2242468")))), Binding(ConcreteName("Implicit", "this", 2242422), TermAppl("TClass", List(SymbolicName("Class", "x2242417")))), Binding(SymbolicName("Var", "x2242519"), TermAppl("TClass", List(SymbolicName("Class", "x2242417")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x2242446"), SymbolicName("Class", "x2242417")), Tuple2(SymbolicName("Class", "x2242484"), SymbolicName("Class", "x2242417")), Tuple2(SymbolicName("Class", "x2243198"), SymbolicName("Class", "x2242417")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x2242468"))), TermAppl("TClass", List(SymbolicName("Class", "x2242417")))))),List())),class n5 {
  public static void main (String[] cipQ) {
    while(!false) while(!true) {
    }
    }
}

class n1 {
  n1 K_gv9;

}

class n6 extends n1 {
  n1 n3;
  int n2;

})
-----------------------------------
===================================
2016-12-13T20:37:24.421+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2286057", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2286066"), Var("x2286067"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2286057", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2286057", List()),SymbolicName("Class", "x2286066"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2286066"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class R5 {
  public static void main (String[] pO) {
    while(true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:27.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2432755", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2432760"), Var("x2432761"), TermAppl("While", List(TermAppl("And", List(TermAppl("True", List()), TermAppl("And", List(TermAppl("False", List()), TermAppl("And", List(TermAppl("False", List()), TermAppl("True", List()))))))), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x2438356"))))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2432755", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2432755", List()),SymbolicName("Class", "x2432760"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2432760"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Z__ {
  public static void main (String[] Ys) {
    while(true && (false && (false && true))) System.out.println(new int[31].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:30.668+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2494195", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2494200"), Var("x2494201"), TermAppl("While", List(TermAppl("False", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2494195", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2494195", List()),SymbolicName("Class", "x2494200"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2494200"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class qP_ {
  public static void main (String[] F) {
    while(false) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:31.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2541145", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2541154"), Var("x2541155"), TermAppl("While", List(TermAppl("Not", List(TermAppl("Lt", List(TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x2544305"))))), TermAppl("Int", List(Var("x2542567"))))), TermAppl("Int", List(Var("x2544056"))))))), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2541145", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2541145", List()),SymbolicName("Class", "x2541154"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2541154"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class U_D {
  public static void main (String[] Y60iQ) {
    while(!(new int[6][4] < 8)) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:32.054+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2544443", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2544452"), Var("x2544453"), TermAppl("While", List(TermAppl("And", List(TermAppl("And", List(TermAppl("False", List()), TermAppl("Lt", List(TermAppl("Int", List(Var("x2546869"))), TermAppl("Int", List(Var("x2547118"))))))), TermAppl("True", List()))), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2544443", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2544443", List()),SymbolicName("Class", "x2544452"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2544452"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class P_ {
  public static void main (String[] EV_V) {
    while(false && 4778024 < 19 && true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:34.475+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2629005", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2629014"), Var("x2629015"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x2629822"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2629005", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2629005", List()),SymbolicName("Class", "x2629014"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2629014"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] s) {
    while(true) System.out.println(66);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:34.983+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2653840", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2653849"), Var("x2653850"), TermAppl("Print", List(TermAppl("Int", List(Var("x2653890"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2653840", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2653840", List()),SymbolicName("Class", "x2653849"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2653849"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class b3 {
  public static void main (String[] VVl) {
    System.out.println(8832);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:35.372+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2669025", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2669030"), Var("x2669031"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2669025", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2669025", List()),SymbolicName("Class", "x2669030"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2669030"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class w3 {
  public static void main (String[] IBl) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:36.989+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2720859", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2720864"), Var("x2720865"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2720859", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2720859", List()),SymbolicName("Class", "x2720864"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2720864"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class F {
  public static void main (String[] lbI_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:36.993+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2720901", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2720906"), Var("x2720907"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2720901", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2720901", List()),SymbolicName("Class", "x2720906"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2720906"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class c {
  public static void main (String[] d) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:37.025+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2721360", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2721381"), Var("x2721382"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x2721374"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x2721433"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x2721445"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x2721473"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x2721491"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s2721360", List()), "Class")), CDistinct(Declarations(TermAppl("s2721372", List()), "Var")), CDistinct(Declarations(TermAppl("s2721372", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2721360", List()),SymbolicName("Class", "x2721374")), CGAssoc(SymbolicName("Class", "x2721374"),TermAppl("s2721372", List())), CGDecl(TermAppl("s2721372", List()),ConcreteName("Implicit", "this", 2721379)), CGDirectEdge(TermAppl("s2721372", List()),Label('P'),TermAppl("s2721360", List())), NewScope(Var("cs")), CGDecl(TermAppl("s2721360", List()),SymbolicName("Class", "x2721381")), CGDecl(TermAppl("s2721372", List()),SymbolicName("Var", "x2721433")), CGDecl(TermAppl("s2721372", List()),SymbolicName("Var", "x2721445")), CGDecl(TermAppl("s2721372", List()),SymbolicName("Var", "x2721473")), CGDecl(TermAppl("s2721372", List()),SymbolicName("Var", "x2721491"))),TypeEnv(Map(Binding(SymbolicName("Var", "x2721433"), TermAppl("TBool", List())), Binding(ConcreteName("Implicit", "this", 2721379), TermAppl("TClass", List(SymbolicName("Class", "x2721374")))), Binding(SymbolicName("Class", "x2721374"), TermAppl("TClass", List(SymbolicName("Class", "x2721374")))), Binding(SymbolicName("Var", "x2721491"), TermAppl("TIntArray", List())), Binding(SymbolicName("Class", "x2721381"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x2721473"), TermAppl("TInt", List())), Binding(SymbolicName("Var", "x2721445"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n6 {
  public static void main (String[] g) {
    {
    }
    }
}

class n5 {
  boolean n1;
  boolean n2;
  int n3;
  int[] n4;

})
-----------------------------------
===================================
2016-12-13T20:37:39.004+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2786368", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2786377"), Var("x2786378"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2786368", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2786368", List()),SymbolicName("Class", "x2786377"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2786377"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class d {
  public static void main (String[] Ui) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:39.249+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2796396", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2796401"), Var("x2796402"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2796396", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2796396", List()),SymbolicName("Class", "x2796401"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2796401"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class o {
  public static void main (String[] b) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:40.294+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2839966", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2839975"), Var("x2839976"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2839966", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2839966", List()),SymbolicName("Class", "x2839975"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2839975"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class V {
  public static void main (String[] U_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:40.6+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2851383", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2851392"), Var("x2851393"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2851383", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2851383", List()),SymbolicName("Class", "x2851392"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2851392"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class O {
  public static void main (String[] Rb) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:40.698+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2857508", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2857517"), Var("x2857518"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2857508", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2857508", List()),SymbolicName("Class", "x2857517"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2857517"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class xnQf9ovJ7 {
  public static void main (String[] t) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:45.57+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s2959012", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x2959017"), Var("x2959018"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s2959012", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2959012", List()),SymbolicName("Class", "x2959017"))),TypeEnv(Map(Binding(SymbolicName("Class", "x2959017"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class iV {
  public static void main (String[] l) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:48.205+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3046817", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3046822"), Var("x3046823"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3046831"), TermAppl("Parent", List(Var("x3046851"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3046864"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3046817", List()), "Class")), CDistinct(Declarations(TermAppl("s3046829", List()), "Var")), CDistinct(Declarations(TermAppl("s3046829", List()), "Method")), CDistinct(Declarations(TermAppl("s3046862", List()), "Var")), CDistinct(Declarations(TermAppl("s3046862", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3046817", List()),SymbolicName("Class", "x3046822")), CGDecl(TermAppl("s3046817", List()),SymbolicName("Class", "x3046831")), CGAssoc(SymbolicName("Class", "x3046831"),TermAppl("s3046829", List())), CGDecl(TermAppl("s3046829", List()),ConcreteName("Implicit", "this", 3046836)), CGDirectEdge(TermAppl("s3046829", List()),Label('P'),TermAppl("s3046817", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x3046851"),TermAppl("s3046817", List())), CGNamedEdge(Var("x3046850"),Label('I'),SymbolicName("Class", "x3046851")), CGDecl(TermAppl("s3046817", List()),SymbolicName("Class", "x3046864")), CGAssoc(SymbolicName("Class", "x3046864"),TermAppl("s3046862", List())), CGDecl(TermAppl("s3046862", List()),ConcreteName("Implicit", "this", 3046869)), CGDirectEdge(TermAppl("s3046862", List()),Label('P'),TermAppl("s3046817", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3046831"), TermAppl("TClass", List(SymbolicName("Class", "x3046831")))), Binding(ConcreteName("Implicit", "this", 3046836), TermAppl("TClass", List(SymbolicName("Class", "x3046831")))), Binding(ConcreteName("Implicit", "this", 3046869), TermAppl("TClass", List(SymbolicName("Class", "x3046864")))), Binding(SymbolicName("Class", "x3046864"), TermAppl("TClass", List(SymbolicName("Class", "x3046864")))), Binding(SymbolicName("Class", "x3046822"), TermAppl("TMainClass", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x3046851"), SymbolicName("Class", "x3046864")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x3046831"))), TermAppl("TClass", List(SymbolicName("Class", "x3046864")))))),List())),class n2 {
  public static void main (String[] U) {
    {
    }
    }
}

class n3 extends n1 {

}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:37:48.352+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3053707", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3053792"), Var("x3053793"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3053721"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3053746"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x3053771"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3053707", List()), "Class")), CDistinct(Declarations(TermAppl("s3053719", List()), "Var")), CDistinct(Declarations(TermAppl("s3053719", List()), "Method")), CDistinct(Declarations(TermAppl("s3053744", List()), "Var")), CDistinct(Declarations(TermAppl("s3053744", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3053707", List()),SymbolicName("Class", "x3053721")), CGAssoc(SymbolicName("Class", "x3053721"),TermAppl("s3053719", List())), CGDecl(TermAppl("s3053719", List()),ConcreteName("Implicit", "this", 3053726)), CGDirectEdge(TermAppl("s3053719", List()),Label('P'),TermAppl("s3053707", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3053707", List()),SymbolicName("Class", "x3053746")), CGAssoc(SymbolicName("Class", "x3053746"),TermAppl("s3053744", List())), CGDecl(TermAppl("s3053744", List()),ConcreteName("Implicit", "this", 3053751)), CGDirectEdge(TermAppl("s3053744", List()),Label('P'),TermAppl("s3053707", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3053744", List()),SymbolicName("Var", "x3053771")), CGDecl(TermAppl("s3053707", List()),SymbolicName("Class", "x3053792"))),TypeEnv(Map(Binding(ConcreteName("Implicit", "this", 3053751), TermAppl("TClass", List(SymbolicName("Class", "x3053746")))), Binding(SymbolicName("Class", "x3053721"), TermAppl("TClass", List(SymbolicName("Class", "x3053721")))), Binding(SymbolicName("Var", "x3053771"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x3053746"), TermAppl("TClass", List(SymbolicName("Class", "x3053746")))), Binding(ConcreteName("Implicit", "this", 3053726), TermAppl("TClass", List(SymbolicName("Class", "x3053721")))), Binding(SymbolicName("Class", "x3053792"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] fh__) {
    {
    }
    }
}

class n1 {

}

class n2 {
  int vL;

})
-----------------------------------
===================================
2016-12-13T20:37:48.79+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3067899", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3067908"), Var("x3067909"), TermAppl("Print", List(TermAppl("Int", List(Var("x3067949"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3067899", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3067899", List()),SymbolicName("Class", "x3067908"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3067908"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class xW71 {
  public static void main (String[] gC) {
    System.out.println(4);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:49.884+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3100798", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3100807"), Var("x3100808"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x3101148"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3100798", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3100798", List()),SymbolicName("Class", "x3100807"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3100807"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class v {
  public static void main (String[] S___) {
    System.out.println(new int[39168].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:49.887+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3101286", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3101295"), Var("x3101296"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3101286", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3101286", List()),SymbolicName("Class", "x3101295"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3101295"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Y {
  public static void main (String[] Y) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:50.441+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3130233", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3130238"), Var("x3130239"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3130277"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3130233", List()), "Class")), CDistinct(Declarations(TermAppl("s3130275", List()), "Var")), CDistinct(Declarations(TermAppl("s3130275", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3130233", List()),SymbolicName("Class", "x3130238")), CGDecl(TermAppl("s3130233", List()),SymbolicName("Class", "x3130277")), CGAssoc(SymbolicName("Class", "x3130277"),TermAppl("s3130275", List())), CGDecl(TermAppl("s3130275", List()),ConcreteName("Implicit", "this", 3130282)), CGDirectEdge(TermAppl("s3130275", List()),Label('P'),TermAppl("s3130233", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3130238"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x3130277"), TermAppl("TClass", List(SymbolicName("Class", "x3130277")))), Binding(ConcreteName("Implicit", "this", 3130282), TermAppl("TClass", List(SymbolicName("Class", "x3130277")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] rP0g9) {
    {
    }
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:37:50.849+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3142132", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3142158"), Var("x3142159"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3142142"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x3142201"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3142132", List()), "Class")), CDistinct(Declarations(TermAppl("s3142140", List()), "Var")), CDistinct(Declarations(TermAppl("s3142140", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3142132", List()),SymbolicName("Class", "x3142142")), CGAssoc(SymbolicName("Class", "x3142142"),TermAppl("s3142140", List())), CGDecl(TermAppl("s3142140", List()),ConcreteName("Implicit", "this", 3142147)), CGDirectEdge(TermAppl("s3142140", List()),Label('P'),TermAppl("s3142132", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3142132", List()),SymbolicName("Class", "x3142158")), CGDecl(TermAppl("s3142140", List()),SymbolicName("Var", "x3142201"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3142142"), TermAppl("TClass", List(SymbolicName("Class", "x3142142")))), Binding(ConcreteName("Implicit", "this", 3142147), TermAppl("TClass", List(SymbolicName("Class", "x3142142")))), Binding(SymbolicName("Class", "x3142158"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x3142201"), TermAppl("TIntArray", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] O) {
    {
    }
    }
}

class n1 {
  int[] K;

})
-----------------------------------
===================================
2016-12-13T20:37:53.548+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3225917", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3225926"), Var("x3225927"), TermAppl("While", List(TermAppl("And", List(TermAppl("False", List()), TermAppl("False", List()))), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3225917", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3225917", List()),SymbolicName("Class", "x3225926"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3225926"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class P {
  public static void main (String[] y) {
    while(false && false) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:53.792+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3235774", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3235779"), Var("x3235780"), TermAppl("Print", List(TermAppl("Int", List(Var("x3235824"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3235774", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3235774", List()),SymbolicName("Class", "x3235779"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3235779"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class M {
  public static void main (String[] t0) {
    System.out.println(0);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:55.374+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3288083", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3288088"), Var("x3288089"), TermAppl("Print", List(TermAppl("Int", List(Var("x3288133"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3288083", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3288083", List()),SymbolicName("Class", "x3288088"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3288088"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class v48d_1 {
  public static void main (String[] b6) {
    System.out.println(80);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:37:59.926+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3443296", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3443309"), Var("x3443310"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3443314"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3443296", List()), "Class")), CDistinct(Declarations(TermAppl("s3443312", List()), "Var")), CDistinct(Declarations(TermAppl("s3443312", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3443296", List()),SymbolicName("Class", "x3443309")), CGDecl(TermAppl("s3443296", List()),SymbolicName("Class", "x3443314")), CGAssoc(SymbolicName("Class", "x3443314"),TermAppl("s3443312", List())), CGDecl(TermAppl("s3443312", List()),ConcreteName("Implicit", "this", 3443319)), CGDirectEdge(TermAppl("s3443312", List()),Label('P'),TermAppl("s3443296", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3443309"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x3443314"), TermAppl("TClass", List(SymbolicName("Class", "x3443314")))), Binding(ConcreteName("Implicit", "this", 3443319), TermAppl("TClass", List(SymbolicName("Class", "x3443314")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] g_L) {
    {
    }
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:38:01.091+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3483831", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3483836"), Var("x3483837"), TermAppl("Print", List(TermAppl("Int", List(Var("x3483881"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3483831", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3483831", List()),SymbolicName("Class", "x3483836"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3483836"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class b {
  public static void main (String[] B) {
    System.out.println(8);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:01.262+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3487420", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3487425"), Var("x3487426"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3487420", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3487420", List()),SymbolicName("Class", "x3487425"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3487425"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class k {
  public static void main (String[] sc_On1_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:02.488+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3514938", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3514947"), Var("x3514948"), TermAppl("Print", List(TermAppl("Add", List(TermAppl("Int", List(Var("x3515595"))), TermAppl("Int", List(Var("x3515844"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3514938", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3514938", List()),SymbolicName("Class", "x3514947"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3514947"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class eFox {
  public static void main (String[] d7_) {
    System.out.println(8 + 55);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:04.86+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3584986", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3584991"), Var("x3584992"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3584986", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3584986", List()),SymbolicName("Class", "x3584991"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3584991"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class S {
  public static void main (String[] o) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:07.875+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3688577", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3688582"), Var("x3688583"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Print", List(TermAppl("Add", List(TermAppl("Int", List(Var("x3689875"))), TermAppl("Mul", List(TermAppl("Int", List(Var("x3690680"))), TermAppl("Sub", List(TermAppl("Int", List(Var("x3691536"))), TermAppl("Int", List(Var("x3691785"))))))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3688577", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3688577", List()),SymbolicName("Class", "x3688582"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3688582"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class xJ_Ce8 {
  public static void main (String[] o) {
    {
      System.out.println(5 + 9 * (2 - 0025));
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:07.884+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3692374", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3692379"), Var("x3692380"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3692374", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3692374", List()),SymbolicName("Class", "x3692379"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3692379"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class OEJ_D {
  public static void main (String[] E) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:10.765+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3796685", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3796694"), Var("x3796695"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3796685", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3796685", List()),SymbolicName("Class", "x3796694"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3796694"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class t {
  public static void main (String[] H8) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:11.029+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3806162", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3806175"), Var("x3806176"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3806206"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x3806235"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3806162", List()), "Class")), CDistinct(Declarations(TermAppl("s3806204", List()), "Var")), CDistinct(Declarations(TermAppl("s3806204", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3806162", List()),SymbolicName("Class", "x3806175")), CGDecl(TermAppl("s3806162", List()),SymbolicName("Class", "x3806206")), CGAssoc(SymbolicName("Class", "x3806206"),TermAppl("s3806204", List())), CGDecl(TermAppl("s3806204", List()),ConcreteName("Implicit", "this", 3806211)), CGDirectEdge(TermAppl("s3806204", List()),Label('P'),TermAppl("s3806162", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3806204", List()),SymbolicName("Var", "x3806235"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3806175"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x3806206"), TermAppl("TClass", List(SymbolicName("Class", "x3806206")))), Binding(ConcreteName("Implicit", "this", 3806211), TermAppl("TClass", List(SymbolicName("Class", "x3806206")))), Binding(SymbolicName("Var", "x3806235"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] Ad75) {
    {
    }
    }
}

class n2 {
  boolean T;

})
-----------------------------------
===================================
2016-12-13T20:38:11.042+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3806251", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3806327"), Var("x3806328"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3806265"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x3806289"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x3806324"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x3806306"))), Var("x3806293"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x3806342"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3806251", List()), "Class")), CDistinct(Declarations(TermAppl("s3806263", List()), "Var")), CDistinct(Declarations(TermAppl("s3806263", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3806251", List()),SymbolicName("Class", "x3806265")), CGAssoc(SymbolicName("Class", "x3806265"),TermAppl("s3806263", List())), CGDecl(TermAppl("s3806263", List()),ConcreteName("Implicit", "this", 3806270)), CGDirectEdge(TermAppl("s3806263", List()),Label('P'),TermAppl("s3806251", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3806263", List()),SymbolicName("Var", "x3806289")), CGDecl(TermAppl("s3806263", List()),SymbolicName("Var", "x3806293")), CGRef(SymbolicName("Class", "x3806306"),TermAppl("s3806263", List())), CGDecl(TermAppl("s3806263", List()),SymbolicName("Var", "x3806324")), CGDecl(TermAppl("s3806251", List()),SymbolicName("Class", "x3806327")), CGDecl(TermAppl("s3806263", List()),SymbolicName("Var", "x3806342"))),TypeEnv(Map(Binding(ConcreteName("Implicit", "this", 3806270), TermAppl("TClass", List(SymbolicName("Class", "x3806265")))), Binding(SymbolicName("Var", "x3806289"), TermAppl("TInt", List())), Binding(SymbolicName("Var", "x3806342"), TermAppl("TInt", List())), Binding(SymbolicName("Var", "x3806293"), TermAppl("TClass", List(SymbolicName("Class", "x3806265")))), Binding(SymbolicName("Var", "x3806324"), TermAppl("TBool", List())), Binding(SymbolicName("Class", "x3806327"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x3806265"), TermAppl("TClass", List(SymbolicName("Class", "x3806265")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x3806306"), SymbolicName("Class", "x3806265")))),SubtypeRelation(List()),List())),class n7 {
  public static void main (String[] R) {
    {
    }
    }
}

class n1 {
  int n2;
  boolean n4;
  n1 n3;
  int n5;

})
-----------------------------------
===================================
2016-12-13T20:38:12.105+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3844263", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3844268"), Var("x3844269"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3844263", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3844263", List()),SymbolicName("Class", "x3844268"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3844268"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class S {
  public static void main (String[] M) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:13.399+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3883827", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3883836"), Var("x3883837"), TermAppl("Print", List(TermAppl("Int", List(Var("x3883877"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3883827", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3883827", List()),SymbolicName("Class", "x3883836"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3883836"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class e_ {
  public static void main (String[] q) {
    System.out.println(9);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:13.428+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3885113", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3885118"), Var("x3885119"), TermAppl("Print", List(TermAppl("Int", List(Var("x3885163"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3885113", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3885113", List()),SymbolicName("Class", "x3885118"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3885118"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n {
  public static void main (String[] Y4n) {
    System.out.println(1);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:14.009+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3912659", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3912664"), Var("x3912665"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3912659", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3912659", List()),SymbolicName("Class", "x3912664"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3912664"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class G4_e {
  public static void main (String[] T84) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:15.31+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3958835", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3958881"), Var("x3958882"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3958865"), TermAppl("Parent", List(Var("x3958886"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x3958908"))), Var("x3958899"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x3958853"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3958835", List()), "Class")), CDistinct(Declarations(TermAppl("s3958851", List()), "Var")), CDistinct(Declarations(TermAppl("s3958851", List()), "Method")), CDistinct(Declarations(TermAppl("s3958863", List()), "Var")), CDistinct(Declarations(TermAppl("s3958863", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3958835", List()),SymbolicName("Class", "x3958853")), CGAssoc(SymbolicName("Class", "x3958853"),TermAppl("s3958851", List())), CGDecl(TermAppl("s3958851", List()),ConcreteName("Implicit", "this", 3958858)), CGDirectEdge(TermAppl("s3958851", List()),Label('P'),TermAppl("s3958835", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3958835", List()),SymbolicName("Class", "x3958865")), CGAssoc(SymbolicName("Class", "x3958865"),TermAppl("s3958863", List())), CGDecl(TermAppl("s3958863", List()),ConcreteName("Implicit", "this", 3958870)), CGDirectEdge(TermAppl("s3958863", List()),Label('P'),TermAppl("s3958835", List())), NewScope(Var("cs")), CGDecl(TermAppl("s3958835", List()),SymbolicName("Class", "x3958881")), CGRef(SymbolicName("Class", "x3958886"),TermAppl("s3958835", List())), CGNamedEdge(Var("x3958885"),Label('I'),SymbolicName("Class", "x3958886")), CGDecl(TermAppl("s3958863", List()),SymbolicName("Var", "x3958899")), CGRef(SymbolicName("Class", "x3958908"),TermAppl("s3958863", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x3958853"), TermAppl("TClass", List(SymbolicName("Class", "x3958853")))), Binding(SymbolicName("Class", "x3958881"), TermAppl("TMainClass", List())), Binding(ConcreteName("Implicit", "this", 3958858), TermAppl("TClass", List(SymbolicName("Class", "x3958853")))), Binding(ConcreteName("Implicit", "this", 3958870), TermAppl("TClass", List(SymbolicName("Class", "x3958865")))), Binding(SymbolicName("Var", "x3958899"), TermAppl("TClass", List(SymbolicName("Class", "x3958853")))), Binding(SymbolicName("Class", "x3958865"), TermAppl("TClass", List(SymbolicName("Class", "x3958865")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x3958886"), SymbolicName("Class", "x3958853")), Tuple2(SymbolicName("Class", "x3958908"), SymbolicName("Class", "x3958853")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x3958865"))), TermAppl("TClass", List(SymbolicName("Class", "x3958853")))))),List())),class n4 {
  public static void main (String[] J) {
    {
    }
    }
}

class n3 extends n1 {
  n1 P;

}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:38:18.599+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s3983951", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x3983960"), Var("x3983961"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s3983951", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3983951", List()),SymbolicName("Class", "x3983960"))),TypeEnv(Map(Binding(SymbolicName("Class", "x3983960"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class L7_ {
  public static void main (String[] dFT__) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:23.854+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4082446", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4082451"), Var("x4082452"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4082446", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4082446", List()),SymbolicName("Class", "x4082451"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4082451"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class H {
  public static void main (String[] lo) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:26.358+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4168368", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4168377"), Var("x4168378"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("While", List(TermAppl("False", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x4169287"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4168368", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4168368", List()),SymbolicName("Class", "x4168377"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4168377"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] w3) {
    {
      {
        {
        }
        while(false) System.out.println(72);
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:26.969+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4181283", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4181288"), Var("x4181289"), TermAppl("Print", List(TermAppl("Int", List(Var("x4181333"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4181283", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4181283", List()),SymbolicName("Class", "x4181288"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4181288"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class c {
  public static void main (String[] L) {
    System.out.println(2);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:26.992+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4181843", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4181852"), Var("x4181853"), TermAppl("Print", List(TermAppl("Int", List(Var("x4181893"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4181843", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4181843", List()),SymbolicName("Class", "x4181852"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4181852"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class f__BM {
  public static void main (String[] a) {
    System.out.println(7444);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:29.381+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4275319", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4275328"), Var("x4275329"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4275319", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4275319", List()),SymbolicName("Class", "x4275328"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4275328"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class H {
  public static void main (String[] u) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:29.385+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4275361", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4275366"), Var("x4275367"), TermAppl("Print", List(TermAppl("Int", List(Var("x4275411"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4275361", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4275361", List()),SymbolicName("Class", "x4275366"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4275366"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class P7Tr {
  public static void main (String[] U_) {
    System.out.println(689);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:30.536+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4313850", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4313859"), Var("x4313860"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4313850", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4313850", List()),SymbolicName("Class", "x4313859"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4313859"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Q8 {
  public static void main (String[] Quk) {
    {
      {
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:30.832+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4315923", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4315928"), Var("x4315929"), TermAppl("Print", List(TermAppl("Mul", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Add", List(TermAppl("Sub", List(TermAppl("Int", List(Var("x4320615"))), TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Add", List(TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x4328772"))))), TermAppl("Int", List(Var("x4329299"))))), TermAppl("Int", List(Var("x4325851"))))))), TermAppl("Int", List(Var("x4325090"))))))), TermAppl("Int", List(Var("x4319126"))))))), TermAppl("Sub", List(TermAppl("Int", List(Var("x4323049"))), TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x4329149"))))))))))))))))))), TermAppl("Int", List(Var("x4316576"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4315923", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4315923", List()),SymbolicName("Class", "x4315928"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4315928"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class A {
  public static void main (String[] T) {
    System.out.println(new int[3 - new int[new int[new int[64][9] + 09][48]][1] + (9 - new int[new int[175].length].length)].length * 70);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:31.74+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4337088", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4337097"), Var("x4337098"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4337088", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4337088", List()),SymbolicName("Class", "x4337097"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4337097"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class B {
  public static void main (String[] q) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:33.198+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4388852", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4388857"), Var("x4388858"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4388852", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4388852", List()),SymbolicName("Class", "x4388857"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4388857"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class R {
  public static void main (String[] q8) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:34.707+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4439055", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4439064"), Var("x4439065"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4439055", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4439055", List()),SymbolicName("Class", "x4439064"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4439064"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q {
  public static void main (String[] iZzp_4) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:36.256+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4494893", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4494902"), Var("x4494903"), TermAppl("Print", List(TermAppl("Int", List(Var("x4494943"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4494893", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4494893", List()),SymbolicName("Class", "x4494902"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4494902"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class S41T {
  public static void main (String[] y) {
    System.out.println(4);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:36.352+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4497356", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4497361"), Var("x4497362"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4497356", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4497356", List()),SymbolicName("Class", "x4497361"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4497361"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class B_ {
  public static void main (String[] d) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:36.654+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4507156", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4507165"), Var("x4507166"), TermAppl("Print", List(TermAppl("Int", List(Var("x4507206"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4507156", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4507156", List()),SymbolicName("Class", "x4507165"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4507165"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class k {
  public static void main (String[] DadMC) {
    System.out.println(1792);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:36.71+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4508794", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4508815"), Var("x4508816"), TermAppl("While", List(TermAppl("False", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x4508808"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x4509604"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s4508794", List()), "Class")), CDistinct(Declarations(TermAppl("s4508806", List()), "Var")), CDistinct(Declarations(TermAppl("s4508806", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4508794", List()),SymbolicName("Class", "x4508808")), CGAssoc(SymbolicName("Class", "x4508808"),TermAppl("s4508806", List())), CGDecl(TermAppl("s4508806", List()),ConcreteName("Implicit", "this", 4508813)), CGDirectEdge(TermAppl("s4508806", List()),Label('P'),TermAppl("s4508794", List())), NewScope(Var("cs")), CGDecl(TermAppl("s4508794", List()),SymbolicName("Class", "x4508815")), CGDecl(TermAppl("s4508806", List()),SymbolicName("Var", "x4509604"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4508808"), TermAppl("TClass", List(SymbolicName("Class", "x4508808")))), Binding(ConcreteName("Implicit", "this", 4508813), TermAppl("TClass", List(SymbolicName("Class", "x4508808")))), Binding(SymbolicName("Class", "x4508815"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x4509604"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] N) {
    while(false) {
    }
    }
}

class n1 {
  boolean W_;

})
-----------------------------------
===================================
2016-12-13T20:38:36.958+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4518052", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4518057"), Var("x4518058"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4518052", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4518052", List()),SymbolicName("Class", "x4518057"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4518057"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class x {
  public static void main (String[] RGWl) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:36.97+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4518094", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4518099"), Var("x4518100"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x4518509"))))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x4518112"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x4518124"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x4518185"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s4518094", List()), "Class")), CDistinct(Declarations(TermAppl("s4518110", List()), "Var")), CDistinct(Declarations(TermAppl("s4518110", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4518094", List()),SymbolicName("Class", "x4518099")), CGDecl(TermAppl("s4518094", List()),SymbolicName("Class", "x4518112")), CGAssoc(SymbolicName("Class", "x4518112"),TermAppl("s4518110", List())), CGDecl(TermAppl("s4518110", List()),ConcreteName("Implicit", "this", 4518117)), CGDirectEdge(TermAppl("s4518110", List()),Label('P'),TermAppl("s4518094", List())), NewScope(Var("cs")), CGDecl(TermAppl("s4518110", List()),SymbolicName("Var", "x4518124")), CGDecl(TermAppl("s4518110", List()),SymbolicName("Var", "x4518185"))),TypeEnv(Map(Binding(SymbolicName("Var", "x4518124"), TermAppl("TInt", List())), Binding(ConcreteName("Implicit", "this", 4518117), TermAppl("TClass", List(SymbolicName("Class", "x4518112")))), Binding(SymbolicName("Class", "x4518099"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x4518185"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x4518112"), TermAppl("TClass", List(SymbolicName("Class", "x4518112")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] p_B) {
    System.out.println(new int[8].length);
    }
}

class n4 {
  int n1;
  int n2;

})
-----------------------------------
===================================
2016-12-13T20:38:37.987+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4555563", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4555568"), Var("x4555569"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4555563", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4555563", List()),SymbolicName("Class", "x4555568"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4555568"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class F {
  public static void main (String[] k) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:38.09+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4562450", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4562459"), Var("x4562460"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4562450", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4562450", List()),SymbolicName("Class", "x4562459"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4562459"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Anr {
  public static void main (String[] B_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:38.401+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4579042", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4579047"), Var("x4579048"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4579042", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4579042", List()),SymbolicName("Class", "x4579047"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4579047"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class y {
  public static void main (String[] y) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:39.649+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4607558", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4607563"), Var("x4607564"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x4607598"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Method", List(TermAppl("IntType", List()), Var("x4607629"), TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(TermAppl("IntArrayType", List()), Var("x4607671"))), TermAppl("Cons", List(TermAppl("Var", List(TermAppl("ClassType", List(Var("x4608058"))), Var("x4608039"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()), TermAppl("Length", List(TermAppl("VarRef", List(Var("x4607860"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s4607558", List()), "Class")), CDistinct(Declarations(TermAppl("s4607596", List()), "Var")), CDistinct(Declarations(TermAppl("s4607596", List()), "Method")), CDistinct(Declarations(TermAppl("s4607626", List()), "Var")), CSubtype(TermAppl("TInt", List()),TermAppl("TInt", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s4607558", List()),SymbolicName("Class", "x4607563")), CGDecl(TermAppl("s4607558", List()),SymbolicName("Class", "x4607598")), CGAssoc(SymbolicName("Class", "x4607598"),TermAppl("s4607596", List())), CGDecl(TermAppl("s4607596", List()),ConcreteName("Implicit", "this", 4607603)), CGDirectEdge(TermAppl("s4607596", List()),Label('P'),TermAppl("s4607558", List())), NewScope(Var("cs")), CGDecl(TermAppl("s4607596", List()),SymbolicName("Method", "x4607629")), CGDirectEdge(TermAppl("s4607626", List()),Label('P'),TermAppl("s4607596", List())), NewScope(Var("as")), NewScope(Var("ms")), CGDecl(TermAppl("s4607626", List()),SymbolicName("Var", "x4607671")), CGRef(SymbolicName("Var", "x4607860"),TermAppl("s4607626", List())), CGDecl(TermAppl("s4607626", List()),SymbolicName("Var", "x4608039")), CGRef(SymbolicName("Class", "x4608058"),TermAppl("s4607626", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x4607671"), TermAppl("TIntArray", List())), Binding(ConcreteName("Implicit", "this", 4607603), TermAppl("TClass", List(SymbolicName("Class", "x4607598")))), Binding(SymbolicName("Var", "x4608039"), TermAppl("TClass", List(SymbolicName("Class", "x4607598")))), Binding(SymbolicName("Method", "x4607629"), TermAppl("TMethod", List(TermAppl("TInt", List()), TermAppl("Nil", List())))), Binding(SymbolicName("Class", "x4607598"), TermAppl("TClass", List(SymbolicName("Class", "x4607598")))), Binding(SymbolicName("Class", "x4607563"), TermAppl("TMainClass", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4607860"), SymbolicName("Var", "x4607671")), Tuple2(SymbolicName("Class", "x4608058"), SymbolicName("Class", "x4607598")))),SubtypeRelation(List()),List())),class n5 {
  public static void main (String[] xh_) {
    {
    }
    }
}

class n1 {

  public int E() {
    int[] n2;
    n1 n4;
  
    return n2.length;
  }
})
-----------------------------------
===================================
2016-12-13T20:38:45.485+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s4814585", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x4814590"), Var("x4814591"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s4814585", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4814585", List()),SymbolicName("Class", "x4814590"))),TypeEnv(Map(Binding(SymbolicName("Class", "x4814590"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class LLu_ {
  public static void main (String[] oYn) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:58.407+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s5042946", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x5042955"), Var("x5042956"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s5042946", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5042946", List()),SymbolicName("Class", "x5042955"))),TypeEnv(Map(Binding(SymbolicName("Class", "x5042955"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class UUXP {
  public static void main (String[] f) {
    {
      {
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:38:58.449+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s5043422", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x5043439"), Var("x5043440"), TermAppl("Print", List(TermAppl("Mul", List(TermAppl("Int", List(Var("x5043978"))), TermAppl("Int", List(Var("x5044267"))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x5043432"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x5043452"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s5043422", List()), "Class")), CDistinct(Declarations(TermAppl("s5043430", List()), "Var")), CDistinct(Declarations(TermAppl("s5043430", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5043422", List()),SymbolicName("Class", "x5043432")), CGAssoc(SymbolicName("Class", "x5043432"),TermAppl("s5043430", List())), CGDecl(TermAppl("s5043430", List()),ConcreteName("Implicit", "this", 5043437)), CGDirectEdge(TermAppl("s5043430", List()),Label('P'),TermAppl("s5043422", List())), NewScope(Var("cs")), CGDecl(TermAppl("s5043422", List()),SymbolicName("Class", "x5043439")), CGDecl(TermAppl("s5043430", List()),SymbolicName("Var", "x5043452"))),TypeEnv(Map(Binding(SymbolicName("Class", "x5043432"), TermAppl("TClass", List(SymbolicName("Class", "x5043432")))), Binding(ConcreteName("Implicit", "this", 5043437), TermAppl("TClass", List(SymbolicName("Class", "x5043432")))), Binding(SymbolicName("Class", "x5043439"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x5043452"), TermAppl("TInt", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] E) {
    System.out.println(2 * 4);
    }
}

class n1 {
  int C_;

})
-----------------------------------
===================================
2016-12-13T20:39:01.561+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s5129817", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x5129826"), Var("x5129827"), TermAppl("Print", List(TermAppl("Int", List(Var("x5129867"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s5129817", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5129817", List()),SymbolicName("Class", "x5129826"))),TypeEnv(Map(Binding(SymbolicName("Class", "x5129826"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class t4 {
  public static void main (String[] o8T) {
    System.out.println(5);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:55.858+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s200699", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x200708"), Var("x200709"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s200699", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s200699", List()),SymbolicName("Class", "x200708"))),TypeEnv(Map(Binding(SymbolicName("Class", "x200708"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class tV {
  public static void main (String[] xG) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:56.786+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s227435", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x227440"), Var("x227441"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x227785"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s227435", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s227435", List()),SymbolicName("Class", "x227440"))),TypeEnv(Map(Binding(SymbolicName("Class", "x227440"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Q_ {
  public static void main (String[] B) {
    System.out.println(new int[99].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:56.81+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s227923", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x227932"), Var("x227933"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x228260"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s227923", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s227923", List()),SymbolicName("Class", "x227932"))),TypeEnv(Map(Binding(SymbolicName("Class", "x227932"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class h {
  public static void main (String[] k) {
    while(true) System.out.println(66);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:57.62+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s261309", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x261318"), Var("x261319"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s261309", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s261309", List()),SymbolicName("Class", "x261318"))),TypeEnv(Map(Binding(SymbolicName("Class", "x261318"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a {
  public static void main (String[] z_PZ1) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:57.996+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s269861", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x269870"), Var("x269871"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s269861", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s269861", List()),SymbolicName("Class", "x269870"))),TypeEnv(Map(Binding(SymbolicName("Class", "x269870"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class K {
  public static void main (String[] q) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:58.18+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s273259", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x273268"), Var("x273269"), TermAppl("Print", List(TermAppl("Int", List(Var("x273309"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s273259", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s273259", List()),SymbolicName("Class", "x273268"))),TypeEnv(Map(Binding(SymbolicName("Class", "x273268"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class h {
  public static void main (String[] Pug5) {
    System.out.println(0);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:58.189+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s273447", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x273452"), Var("x273453"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s273447", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s273447", List()),SymbolicName("Class", "x273452"))),TypeEnv(Map(Binding(SymbolicName("Class", "x273452"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Q {
  public static void main (String[] xH__) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:39:58.203+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s273489", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x273498"), Var("x273499"), TermAppl("Print", List(TermAppl("Int", List(Var("x273539"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s273489", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s273489", List()),SymbolicName("Class", "x273498"))),TypeEnv(Map(Binding(SymbolicName("Class", "x273498"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class D {
  public static void main (String[] v) {
    System.out.println(098);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:01.681+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s342330", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x342335"), Var("x342336"), TermAppl("Print", List(TermAppl("Add", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x345811"))))))))))), TermAppl("Int", List(Var("x346060"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s342330", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s342330", List()),SymbolicName("Class", "x342335"))),TypeEnv(Map(Binding(SymbolicName("Class", "x342335"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class V {
  public static void main (String[] Y_) {
    System.out.println(new int[new int[3].length].length + 0);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:10.954+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s488206", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x488211"), Var("x488212"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s488206", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s488206", List()),SymbolicName("Class", "x488211"))),TypeEnv(Map(Binding(SymbolicName("Class", "x488211"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class z {
  public static void main (String[] B) {
    while(true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:15.791+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s565881", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x565890"), Var("x565891"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s565881", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s565881", List()),SymbolicName("Class", "x565890"))),TypeEnv(Map(Binding(SymbolicName("Class", "x565890"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Eh {
  public static void main (String[] K) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:19.788+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s636524", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x636533"), Var("x636534"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s636524", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s636524", List()),SymbolicName("Class", "x636533"))),TypeEnv(Map(Binding(SymbolicName("Class", "x636533"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class z {
  public static void main (String[] un) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:38.222+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s413", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x422"), Var("x423"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s413", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s413", List()),SymbolicName("Class", "x422"))),TypeEnv(Map(Binding(SymbolicName("Class", "x422"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class W {
  public static void main (String[] aB0_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:39.497+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s12751", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x12756"), Var("x12757"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s12751", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s12751", List()),SymbolicName("Class", "x12756"))),TypeEnv(Map(Binding(SymbolicName("Class", "x12756"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class cm {
  public static void main (String[] d) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:43.556+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s63049", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x63058"), Var("x63059"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s63049", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s63049", List()),SymbolicName("Class", "x63058"))),TypeEnv(Map(Binding(SymbolicName("Class", "x63058"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class e_ {
  public static void main (String[] H) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:44.045+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s75343", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x75348"), Var("x75349"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s75343", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s75343", List()),SymbolicName("Class", "x75348"))),TypeEnv(Map(Binding(SymbolicName("Class", "x75348"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class I {
  public static void main (String[] A_F) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:44.108+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s77099", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x77104"), Var("x77105"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x77147"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s77099", List()), "Class")), CDistinct(Declarations(TermAppl("s77145", List()), "Var")), CDistinct(Declarations(TermAppl("s77145", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s77099", List()),SymbolicName("Class", "x77104")), CGDecl(TermAppl("s77099", List()),SymbolicName("Class", "x77147")), CGAssoc(SymbolicName("Class", "x77147"),TermAppl("s77145", List())), CGDecl(TermAppl("s77145", List()),ConcreteName("Implicit", "this", 77152)), CGDirectEdge(TermAppl("s77145", List()),Label('P'),TermAppl("s77099", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x77104"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x77147"), TermAppl("TClass", List(SymbolicName("Class", "x77147")))), Binding(ConcreteName("Implicit", "this", 77152), TermAppl("TClass", List(SymbolicName("Class", "x77147")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] s_) {
    {
    }
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:40:44.796+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s91839", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x91848"), Var("x91849"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s91839", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s91839", List()),SymbolicName("Class", "x91848"))),TypeEnv(Map(Binding(SymbolicName("Class", "x91848"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class b {
  public static void main (String[] t) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:44.871+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s94440", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x94445"), Var("x94446"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s94440", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s94440", List()),SymbolicName("Class", "x94445"))),TypeEnv(Map(Binding(SymbolicName("Class", "x94445"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class M {
  public static void main (String[] p8) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:45.774+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s114009", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x114018"), Var("x114019"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s114009", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s114009", List()),SymbolicName("Class", "x114018"))),TypeEnv(Map(Binding(SymbolicName("Class", "x114018"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class F30Ar {
  public static void main (String[] z) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:48.162+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s148236", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x148245"), Var("x148246"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s148236", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s148236", List()),SymbolicName("Class", "x148245"))),TypeEnv(Map(Binding(SymbolicName("Class", "x148245"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class J {
  public static void main (String[] l) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:48.17+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s148278", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x148287"), Var("x148288"), TermAppl("Print", List(TermAppl("Int", List(Var("x148328"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s148278", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s148278", List()),SymbolicName("Class", "x148287"))),TypeEnv(Map(Binding(SymbolicName("Class", "x148287"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Y {
  public static void main (String[] X) {
    System.out.println(41);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:40:48.182+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s148512", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x148517"), Var("x148518"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s148512", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s148512", List()),SymbolicName("Class", "x148517"))),TypeEnv(Map(Binding(SymbolicName("Class", "x148517"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class J_9g {
  public static void main (String[] T40) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:09.664+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s5108", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x5117"), Var("x5118"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s5108", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5108", List()),SymbolicName("Class", "x5117"))),TypeEnv(Map(Binding(SymbolicName("Class", "x5117"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class r {
  public static void main (String[] cU) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:17.786+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s107692", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x107701"), Var("x107702"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s107692", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s107692", List()),SymbolicName("Class", "x107701"))),TypeEnv(Map(Binding(SymbolicName("Class", "x107701"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class I {
  public static void main (String[] f_f) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:18.717+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s123020", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x123029"), Var("x123030"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s123020", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s123020", List()),SymbolicName("Class", "x123029"))),TypeEnv(Map(Binding(SymbolicName("Class", "x123029"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Y {
  public static void main (String[] j) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:18.824+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s123216", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x123225"), Var("x123226"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Add", List(TermAppl("Int", List(Var("x124523"))), TermAppl("Int", List(Var("x124274"))))))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x123256"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s123216", List()), "Class")), CDistinct(Declarations(TermAppl("s123254", List()), "Var")), CDistinct(Declarations(TermAppl("s123254", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s123216", List()),SymbolicName("Class", "x123225")), CGDecl(TermAppl("s123216", List()),SymbolicName("Class", "x123256")), CGAssoc(SymbolicName("Class", "x123256"),TermAppl("s123254", List())), CGDecl(TermAppl("s123254", List()),ConcreteName("Implicit", "this", 123261)), CGDirectEdge(TermAppl("s123254", List()),Label('P'),TermAppl("s123216", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x123225"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x123256"), TermAppl("TClass", List(SymbolicName("Class", "x123256")))), Binding(ConcreteName("Implicit", "this", 123261), TermAppl("TClass", List(SymbolicName("Class", "x123256")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] k) {
    System.out.println(new int[7 + 19].length);
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:41:23.317+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s244256", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x244302"), Var("x244303"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x244270"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x244854"))), Var("x244282"))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Method", List(TermAppl("BoolType", List()), Var("x244309"), TermAppl("Nil", List()), TermAppl("Nil", List()), TermAppl("Nil", List()), TermAppl("Not", List(TermAppl("And", List(TermAppl("And", List(TermAppl("And", List(TermAppl("Not", List(TermAppl("False", List()))), TermAppl("And", List(TermAppl("True", List()), TermAppl("Not", List(TermAppl("False", List()))))))), TermAppl("False", List()))), TermAppl("And", List(TermAppl("False", List()), TermAppl("True", List()))))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s244256", List()), "Class")), CDistinct(Declarations(TermAppl("s244268", List()), "Var")), CDistinct(Declarations(TermAppl("s244268", List()), "Method")), CDistinct(Declarations(TermAppl("s244306", List()), "Var")), CSubtype(TermAppl("TBool", List()),TermAppl("TBool", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s244256", List()),SymbolicName("Class", "x244270")), CGAssoc(SymbolicName("Class", "x244270"),TermAppl("s244268", List())), CGDecl(TermAppl("s244268", List()),ConcreteName("Implicit", "this", 244275)), CGDirectEdge(TermAppl("s244268", List()),Label('P'),TermAppl("s244256", List())), NewScope(Var("cs")), CGDecl(TermAppl("s244268", List()),SymbolicName("Var", "x244282")), CGDecl(TermAppl("s244256", List()),SymbolicName("Class", "x244302")), CGDecl(TermAppl("s244268", List()),SymbolicName("Method", "x244309")), CGDirectEdge(TermAppl("s244306", List()),Label('P'),TermAppl("s244268", List())), NewScope(Var("as")), NewScope(Var("ms")), CGRef(SymbolicName("Class", "x244854"),TermAppl("s244268", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x244282"), TermAppl("TClass", List(SymbolicName("Class", "x244270")))), Binding(SymbolicName("Method", "x244309"), TermAppl("TMethod", List(TermAppl("TBool", List()), TermAppl("Nil", List())))), Binding(ConcreteName("Implicit", "this", 244275), TermAppl("TClass", List(SymbolicName("Class", "x244270")))), Binding(SymbolicName("Class", "x244302"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x244270"), TermAppl("TClass", List(SymbolicName("Class", "x244270")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x244854"), SymbolicName("Class", "x244270")))),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] Z) {
    {
    }
    }
}

class n1 {
  n1 O;

  public boolean Ard__6_() {
  
    return !(!false && (true && !false) && false && (false && true));
  }
})
-----------------------------------
===================================
2016-12-13T20:41:23.692+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s265500", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x265509"), Var("x265510"), TermAppl("If", List(TermAppl("Not", List(TermAppl("Not", List(TermAppl("And", List(TermAppl("Not", List(TermAppl("True", List()))), TermAppl("False", List()))))))), TermAppl("Print", List(TermAppl("Int", List(Var("x266204"))))), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s265500", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s265500", List()),SymbolicName("Class", "x265509"))),TypeEnv(Map(Binding(SymbolicName("Class", "x265509"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class E1 {
  public static void main (String[] iHpT) {
    if(!!(!true && false)) System.out.println(337);
    else {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:24.783+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s296531", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x296536"), Var("x296537"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x296571"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x296600"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s296531", List()), "Class")), CDistinct(Declarations(TermAppl("s296569", List()), "Var")), CDistinct(Declarations(TermAppl("s296569", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s296531", List()),SymbolicName("Class", "x296536")), CGDecl(TermAppl("s296531", List()),SymbolicName("Class", "x296571")), CGAssoc(SymbolicName("Class", "x296571"),TermAppl("s296569", List())), CGDecl(TermAppl("s296569", List()),ConcreteName("Implicit", "this", 296576)), CGDirectEdge(TermAppl("s296569", List()),Label('P'),TermAppl("s296531", List())), NewScope(Var("cs")), CGDecl(TermAppl("s296569", List()),SymbolicName("Var", "x296600"))),TypeEnv(Map(Binding(SymbolicName("Class", "x296536"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x296571"), TermAppl("TClass", List(SymbolicName("Class", "x296571")))), Binding(ConcreteName("Implicit", "this", 296576), TermAppl("TClass", List(SymbolicName("Class", "x296571")))), Binding(SymbolicName("Var", "x296600"), TermAppl("TIntArray", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] Vv__1D_T) {
    {
    }
    }
}

class n2 {
  int[] HH;

})
-----------------------------------
===================================
2016-12-13T20:41:24.808+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s297120", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x297125"), Var("x297126"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s297120", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s297120", List()),SymbolicName("Class", "x297125"))),TypeEnv(Map(Binding(SymbolicName("Class", "x297125"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class jF {
  public static void main (String[] p4) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:24.826+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s297484", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x297489"), Var("x297490"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s297484", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s297484", List()),SymbolicName("Class", "x297489"))),TypeEnv(Map(Binding(SymbolicName("Class", "x297489"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class BLe8M_0y {
  public static void main (String[] f) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:25.606+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s313541", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x313546"), Var("x313547"), TermAppl("Print", List(TermAppl("Sub", List(TermAppl("Int", List(Var("x314120"))), TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x314820"))))))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x314387"), TermAppl("Parent", List(Var("x314978"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x314379"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s313541", List()), "Class")), CDistinct(Declarations(TermAppl("s314377", List()), "Var")), CDistinct(Declarations(TermAppl("s314377", List()), "Method")), CDistinct(Declarations(TermAppl("s314385", List()), "Var")), CDistinct(Declarations(TermAppl("s314385", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s313541", List()),SymbolicName("Class", "x313546")), CGDecl(TermAppl("s313541", List()),SymbolicName("Class", "x314379")), CGAssoc(SymbolicName("Class", "x314379"),TermAppl("s314377", List())), CGDecl(TermAppl("s314377", List()),ConcreteName("Implicit", "this", 314384)), CGDirectEdge(TermAppl("s314377", List()),Label('P'),TermAppl("s313541", List())), NewScope(Var("cs")), CGDecl(TermAppl("s313541", List()),SymbolicName("Class", "x314387")), CGAssoc(SymbolicName("Class", "x314387"),TermAppl("s314385", List())), CGDecl(TermAppl("s314385", List()),ConcreteName("Implicit", "this", 314392)), CGDirectEdge(TermAppl("s314385", List()),Label('P'),TermAppl("s313541", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x314978"),TermAppl("s313541", List())), CGNamedEdge(Var("x314977"),Label('I'),SymbolicName("Class", "x314978"))),TypeEnv(Map(Binding(SymbolicName("Class", "x313546"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x314387"), TermAppl("TClass", List(SymbolicName("Class", "x314387")))), Binding(SymbolicName("Class", "x314379"), TermAppl("TClass", List(SymbolicName("Class", "x314379")))), Binding(ConcreteName("Implicit", "this", 314392), TermAppl("TClass", List(SymbolicName("Class", "x314387")))), Binding(ConcreteName("Implicit", "this", 314384), TermAppl("TClass", List(SymbolicName("Class", "x314379")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x314978"), SymbolicName("Class", "x314379")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x314387"))), TermAppl("TClass", List(SymbolicName("Class", "x314379")))))),List())),class n2 {
  public static void main (String[] b) {
    System.out.println(969328 - new int[6930].length);
    }
}

class n4 extends n1 {

}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:41:26.097+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s328958", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x328975"), Var("x328976"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x328968"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s328958", List()), "Class")), CDistinct(Declarations(TermAppl("s328966", List()), "Var")), CDistinct(Declarations(TermAppl("s328966", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s328958", List()),SymbolicName("Class", "x328968")), CGAssoc(SymbolicName("Class", "x328968"),TermAppl("s328966", List())), CGDecl(TermAppl("s328966", List()),ConcreteName("Implicit", "this", 328973)), CGDirectEdge(TermAppl("s328966", List()),Label('P'),TermAppl("s328958", List())), NewScope(Var("cs")), CGDecl(TermAppl("s328958", List()),SymbolicName("Class", "x328975"))),TypeEnv(Map(Binding(SymbolicName("Class", "x328968"), TermAppl("TClass", List(SymbolicName("Class", "x328968")))), Binding(ConcreteName("Implicit", "this", 328973), TermAppl("TClass", List(SymbolicName("Class", "x328968")))), Binding(SymbolicName("Class", "x328975"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] D) {
    {
    }
    }
}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:41:26.889+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s364416", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x364425"), Var("x364426"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x364430"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x364502"))), Var("x364450"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s364416", List()), "Class")), CDistinct(Declarations(TermAppl("s364428", List()), "Var")), CDistinct(Declarations(TermAppl("s364428", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s364416", List()),SymbolicName("Class", "x364425")), CGDecl(TermAppl("s364416", List()),SymbolicName("Class", "x364430")), CGAssoc(SymbolicName("Class", "x364430"),TermAppl("s364428", List())), CGDecl(TermAppl("s364428", List()),ConcreteName("Implicit", "this", 364435)), CGDirectEdge(TermAppl("s364428", List()),Label('P'),TermAppl("s364416", List())), NewScope(Var("cs")), CGDecl(TermAppl("s364428", List()),SymbolicName("Var", "x364450")), CGRef(SymbolicName("Class", "x364502"),TermAppl("s364428", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x364425"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x364430"), TermAppl("TClass", List(SymbolicName("Class", "x364430")))), Binding(ConcreteName("Implicit", "this", 364435), TermAppl("TClass", List(SymbolicName("Class", "x364430")))), Binding(SymbolicName("Var", "x364450"), TermAppl("TClass", List(SymbolicName("Class", "x364430")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x364502"), SymbolicName("Class", "x364430")))),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] x) {
    {
    }
    }
}

class n1 {
  n1 Dcs;

})
-----------------------------------
===================================
2016-12-13T20:41:27.172+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s368969", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x368974"), Var("x368975"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s368969", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s368969", List()),SymbolicName("Class", "x368974"))),TypeEnv(Map(Binding(SymbolicName("Class", "x368974"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class X {
  public static void main (String[] F) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:28.335+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s414754", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x414763"), Var("x414764"), TermAppl("Print", List(TermAppl("Int", List(Var("x414804"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s414754", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s414754", List()),SymbolicName("Class", "x414763"))),TypeEnv(Map(Binding(SymbolicName("Class", "x414763"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class EZWf_ {
  public static void main (String[] m_) {
    System.out.println(59);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:30.205+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s471982", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x471991"), Var("x471992"), TermAppl("Print", List(TermAppl("Int", List(Var("x472032"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s471982", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s471982", List()),SymbolicName("Class", "x471991"))),TypeEnv(Map(Binding(SymbolicName("Class", "x471991"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class j_5 {
  public static void main (String[] l) {
    System.out.println(88);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:33.473+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s523040", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x523049"), Var("x523050"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s523040", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s523040", List()),SymbolicName("Class", "x523049"))),TypeEnv(Map(Binding(SymbolicName("Class", "x523049"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q6T_ {
  public static void main (String[] L_) {
    {
      {
      }
      {
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:38.7+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s597889", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x597898"), Var("x597899"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s597889", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s597889", List()),SymbolicName("Class", "x597898"))),TypeEnv(Map(Binding(SymbolicName("Class", "x597898"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Roc4J {
  public static void main (String[] p__) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:40.551+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s639835", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x639844"), Var("x639845"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s639835", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s639835", List()),SymbolicName("Class", "x639844"))),TypeEnv(Map(Binding(SymbolicName("Class", "x639844"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a6 {
  public static void main (String[] m4_fS7) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:45.171+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s799121", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x799130"), Var("x799131"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s799121", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s799121", List()),SymbolicName("Class", "x799130"))),TypeEnv(Map(Binding(SymbolicName("Class", "x799130"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class H_5 {
  public static void main (String[] x) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:47.057+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s853825", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x853830"), Var("x853831"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Block", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s853825", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s853825", List()),SymbolicName("Class", "x853830"))),TypeEnv(Map(Binding(SymbolicName("Class", "x853830"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class V {
  public static void main (String[] v) {
    {
      {
      }
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:49.141+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s927791", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x927829"), Var("x927830"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x927805"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x927868"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s927791", List()), "Class")), CDistinct(Declarations(TermAppl("s927803", List()), "Var")), CDistinct(Declarations(TermAppl("s927803", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s927791", List()),SymbolicName("Class", "x927805")), CGAssoc(SymbolicName("Class", "x927805"),TermAppl("s927803", List())), CGDecl(TermAppl("s927803", List()),ConcreteName("Implicit", "this", 927810)), CGDirectEdge(TermAppl("s927803", List()),Label('P'),TermAppl("s927791", List())), NewScope(Var("cs")), CGDecl(TermAppl("s927791", List()),SymbolicName("Class", "x927829")), CGDecl(TermAppl("s927803", List()),SymbolicName("Var", "x927868"))),TypeEnv(Map(Binding(SymbolicName("Class", "x927805"), TermAppl("TClass", List(SymbolicName("Class", "x927805")))), Binding(ConcreteName("Implicit", "this", 927810), TermAppl("TClass", List(SymbolicName("Class", "x927805")))), Binding(SymbolicName("Class", "x927829"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x927868"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] n) {
    {
    }
    }
}

class n1 {
  boolean Js;

})
-----------------------------------
===================================
2016-12-13T20:41:51.376+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1015456", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1015465"), Var("x1015466"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1015456", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1015456", List()),SymbolicName("Class", "x1015465"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1015465"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class f {
  public static void main (String[] n) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:41:55.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1134332", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1134353"), Var("x1134354"), TermAppl("Print", List(TermAppl("Int", List(Var("x1134435"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1134346"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x1134375"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1134332", List()), "Class")), CDistinct(Declarations(TermAppl("s1134344", List()), "Var")), CDistinct(Declarations(TermAppl("s1134344", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1134332", List()),SymbolicName("Class", "x1134346")), CGAssoc(SymbolicName("Class", "x1134346"),TermAppl("s1134344", List())), CGDecl(TermAppl("s1134344", List()),ConcreteName("Implicit", "this", 1134351)), CGDirectEdge(TermAppl("s1134344", List()),Label('P'),TermAppl("s1134332", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1134332", List()),SymbolicName("Class", "x1134353")), CGDecl(TermAppl("s1134344", List()),SymbolicName("Var", "x1134375"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1134346"), TermAppl("TClass", List(SymbolicName("Class", "x1134346")))), Binding(ConcreteName("Implicit", "this", 1134351), TermAppl("TClass", List(SymbolicName("Class", "x1134346")))), Binding(SymbolicName("Class", "x1134353"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1134375"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] t) {
    System.out.println(11);
    }
}

class n1 {
  boolean I_BCs;

})
-----------------------------------
===================================
2016-12-13T20:41:56.6+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1146398", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1146415"), Var("x1146416"), TermAppl("Print", List(TermAppl("Int", List(Var("x1146501"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1146408"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x1146662"))), Var("x1146653"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x1146671"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1146398", List()), "Class")), CDistinct(Declarations(TermAppl("s1146406", List()), "Var")), CDistinct(Declarations(TermAppl("s1146406", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1146398", List()),SymbolicName("Class", "x1146408")), CGAssoc(SymbolicName("Class", "x1146408"),TermAppl("s1146406", List())), CGDecl(TermAppl("s1146406", List()),ConcreteName("Implicit", "this", 1146413)), CGDirectEdge(TermAppl("s1146406", List()),Label('P'),TermAppl("s1146398", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1146398", List()),SymbolicName("Class", "x1146415")), CGDecl(TermAppl("s1146406", List()),SymbolicName("Var", "x1146653")), CGRef(SymbolicName("Class", "x1146662"),TermAppl("s1146406", List())), CGDecl(TermAppl("s1146406", List()),SymbolicName("Var", "x1146671"))),TypeEnv(Map(Binding(ConcreteName("Implicit", "this", 1146413), TermAppl("TClass", List(SymbolicName("Class", "x1146408")))), Binding(SymbolicName("Class", "x1146415"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1146671"), TermAppl("TBool", List())), Binding(SymbolicName("Class", "x1146408"), TermAppl("TClass", List(SymbolicName("Class", "x1146408")))), Binding(SymbolicName("Var", "x1146653"), TermAppl("TClass", List(SymbolicName("Class", "x1146408")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x1146662"), SymbolicName("Class", "x1146408")))),SubtypeRelation(List()),List())),class n5 {
  public static void main (String[] y4) {
    System.out.println(85);
    }
}

class n1 {
  n1 n2;
  boolean n3;

})
-----------------------------------
===================================
2016-12-13T20:41:58.946+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1210480", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1210493"), Var("x1210494"), TermAppl("Print", List(TermAppl("Int", List(Var("x1210626"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1210506"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1210498"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x1210799"))), Var("x1210588"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x1210574"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s1210480", List()), "Class")), CDistinct(Declarations(TermAppl("s1210496", List()), "Var")), CDistinct(Declarations(TermAppl("s1210496", List()), "Method")), CDistinct(Declarations(TermAppl("s1210504", List()), "Var")), CDistinct(Declarations(TermAppl("s1210504", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1210480", List()),SymbolicName("Class", "x1210493")), CGDecl(TermAppl("s1210480", List()),SymbolicName("Class", "x1210498")), CGAssoc(SymbolicName("Class", "x1210498"),TermAppl("s1210496", List())), CGDecl(TermAppl("s1210496", List()),ConcreteName("Implicit", "this", 1210503)), CGDirectEdge(TermAppl("s1210496", List()),Label('P'),TermAppl("s1210480", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1210480", List()),SymbolicName("Class", "x1210506")), CGAssoc(SymbolicName("Class", "x1210506"),TermAppl("s1210504", List())), CGDecl(TermAppl("s1210504", List()),ConcreteName("Implicit", "this", 1210511)), CGDirectEdge(TermAppl("s1210504", List()),Label('P'),TermAppl("s1210480", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1210496", List()),SymbolicName("Var", "x1210574")), CGDecl(TermAppl("s1210496", List()),SymbolicName("Var", "x1210588")), CGRef(SymbolicName("Class", "x1210799"),TermAppl("s1210496", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x1210574"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x1210498"), TermAppl("TClass", List(SymbolicName("Class", "x1210498")))), Binding(ConcreteName("Implicit", "this", 1210503), TermAppl("TClass", List(SymbolicName("Class", "x1210498")))), Binding(SymbolicName("Var", "x1210588"), TermAppl("TClass", List(SymbolicName("Class", "x1210498")))), Binding(ConcreteName("Implicit", "this", 1210511), TermAppl("TClass", List(SymbolicName("Class", "x1210506")))), Binding(SymbolicName("Class", "x1210506"), TermAppl("TClass", List(SymbolicName("Class", "x1210506")))), Binding(SymbolicName("Class", "x1210493"), TermAppl("TMainClass", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x1210799"), SymbolicName("Class", "x1210498")))),SubtypeRelation(List()),List())),class n4 {
  public static void main (String[] Y) {
    System.out.println(96);
    }
}

class n6 {

}

class n1 {
  n1 n3;
  int n2;

})
-----------------------------------
===================================
2016-12-13T20:42:01.359+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1282471", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1282480"), Var("x1282481"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("Print", List(TermAppl("Int", List(Var("x1282551"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1282471", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1282471", List()),SymbolicName("Class", "x1282480"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1282480"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class B_ {
  public static void main (String[] VWk) {
    {
      System.out.println(4);
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:01.371+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1283253", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1283262"), Var("x1283263"), TermAppl("Print", List(TermAppl("Int", List(Var("x1283303"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1283253", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1283253", List()),SymbolicName("Class", "x1283262"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1283262"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class G {
  public static void main (String[] a) {
    System.out.println(36);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:02.13+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1312066", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1312075"), Var("x1312076"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1312066", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1312066", List()),SymbolicName("Class", "x1312075"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1312075"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class MOO {
  public static void main (String[] B) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:02.538+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1325320", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1325358"), Var("x1325359"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Sub", List(TermAppl("Int", List(Var("x1326324"))), TermAppl("Int", List(Var("x1326573"))))))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1325330"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x1325376"))), Var("x1325367"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1325320", List()), "Class")), CDistinct(Declarations(TermAppl("s1325328", List()), "Var")), CDistinct(Declarations(TermAppl("s1325328", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1325320", List()),SymbolicName("Class", "x1325330")), CGAssoc(SymbolicName("Class", "x1325330"),TermAppl("s1325328", List())), CGDecl(TermAppl("s1325328", List()),ConcreteName("Implicit", "this", 1325335)), CGDirectEdge(TermAppl("s1325328", List()),Label('P'),TermAppl("s1325320", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1325320", List()),SymbolicName("Class", "x1325358")), CGDecl(TermAppl("s1325328", List()),SymbolicName("Var", "x1325367")), CGRef(SymbolicName("Class", "x1325376"),TermAppl("s1325328", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x1325330"), TermAppl("TClass", List(SymbolicName("Class", "x1325330")))), Binding(ConcreteName("Implicit", "this", 1325335), TermAppl("TClass", List(SymbolicName("Class", "x1325330")))), Binding(SymbolicName("Class", "x1325358"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1325367"), TermAppl("TClass", List(SymbolicName("Class", "x1325330")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x1325376"), SymbolicName("Class", "x1325330")))),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] Yy) {
    System.out.println(new int[0 - 935].length);
    }
}

class n1 {
  n1 q;

})
-----------------------------------
===================================
2016-12-13T20:42:04.241+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1360682", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1360687"), Var("x1360688"), TermAppl("Print", List(TermAppl("Int", List(Var("x1360732"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1360682", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1360682", List()),SymbolicName("Class", "x1360687"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1360687"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class aQZ {
  public static void main (String[] f1) {
    System.out.println(0300);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:04.244+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1360886", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1360895"), Var("x1360896"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1360886", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1360886", List()),SymbolicName("Class", "x1360895"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1360895"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n {
  public static void main (String[] Sg3N_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:07.035+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1445098", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1445103"), Var("x1445104"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Print", List(TermAppl("Sub", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x1452252"))))))), TermAppl("Mul", List(TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Mul", List(TermAppl("Int", List(Var("x1451198"))), TermAppl("Int", List(Var("x1452003"))))))), TermAppl("Int", List(Var("x1448890"))))), TermAppl("Int", List(Var("x1447129"))))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1445098", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1445098", List()),SymbolicName("Class", "x1445103"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1445103"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class v {
  public static void main (String[] C) {
    while(true) System.out.println(new int[3].length - new int[6 * 0210][0] * 4);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:07.74+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1473698", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1473707"), Var("x1473708"), TermAppl("Print", List(TermAppl("Int", List(Var("x1473748"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1473698", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1473698", List()),SymbolicName("Class", "x1473707"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1473707"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class wfd6 {
  public static void main (String[] s31) {
    System.out.println(0);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:07.744+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1473978", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1473987"), Var("x1473988"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1473978", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1473978", List()),SymbolicName("Class", "x1473987"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1473987"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class l {
  public static void main (String[] t6U5) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:07.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1483480", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1483485"), Var("x1483486"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1483524"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x1483561"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x1483575"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1483589"), TermAppl("Parent", List(Var("x1483605"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s1483480", List()), "Class")), CDistinct(Declarations(TermAppl("s1483522", List()), "Var")), CDistinct(Declarations(TermAppl("s1483522", List()), "Method")), CDistinct(Declarations(TermAppl("s1483587", List()), "Var")), CDistinct(Declarations(TermAppl("s1483587", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1483480", List()),SymbolicName("Class", "x1483485")), CGDecl(TermAppl("s1483480", List()),SymbolicName("Class", "x1483524")), CGAssoc(SymbolicName("Class", "x1483524"),TermAppl("s1483522", List())), CGDecl(TermAppl("s1483522", List()),ConcreteName("Implicit", "this", 1483529)), CGDirectEdge(TermAppl("s1483522", List()),Label('P'),TermAppl("s1483480", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1483522", List()),SymbolicName("Var", "x1483561")), CGDecl(TermAppl("s1483522", List()),SymbolicName("Var", "x1483575")), CGDecl(TermAppl("s1483480", List()),SymbolicName("Class", "x1483589")), CGAssoc(SymbolicName("Class", "x1483589"),TermAppl("s1483587", List())), CGDecl(TermAppl("s1483587", List()),ConcreteName("Implicit", "this", 1483594)), CGDirectEdge(TermAppl("s1483587", List()),Label('P'),TermAppl("s1483480", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x1483605"),TermAppl("s1483480", List())), CGNamedEdge(Var("x1483604"),Label('I'),SymbolicName("Class", "x1483605"))),TypeEnv(Map(Binding(SymbolicName("Var", "x1483561"), TermAppl("TIntArray", List())), Binding(SymbolicName("Class", "x1483589"), TermAppl("TClass", List(SymbolicName("Class", "x1483589")))), Binding(ConcreteName("Implicit", "this", 1483529), TermAppl("TClass", List(SymbolicName("Class", "x1483524")))), Binding(SymbolicName("Class", "x1483524"), TermAppl("TClass", List(SymbolicName("Class", "x1483524")))), Binding(ConcreteName("Implicit", "this", 1483594), TermAppl("TClass", List(SymbolicName("Class", "x1483589")))), Binding(SymbolicName("Class", "x1483485"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1483575"), TermAppl("TInt", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x1483605"), SymbolicName("Class", "x1483524")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x1483589"))), TermAppl("TClass", List(SymbolicName("Class", "x1483524")))))),List())),class n4 {
  public static void main (String[] i) {
    {
    }
    }
}

class n1 {
  int[] n2;
  int n3;

}

class n6 extends n1 {

})
-----------------------------------
===================================
2016-12-13T20:42:09.82+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1545047", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1545056"), Var("x1545057"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1545047", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1545047", List()),SymbolicName("Class", "x1545056"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1545056"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class e {
  public static void main (String[] T_A) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:10.206+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1558483", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1558488"), Var("x1558489"), TermAppl("Print", List(TermAppl("Int", List(Var("x1558533"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1558483", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1558483", List()),SymbolicName("Class", "x1558488"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1558488"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class I {
  public static void main (String[] j) {
    System.out.println(475);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:16.241+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1751859", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1751868"), Var("x1751869"), TermAppl("While", List(TermAppl("Not", List(TermAppl("And", List(TermAppl("True", List()), TermAppl("True", List()))))), TermAppl("Print", List(TermAppl("Add", List(TermAppl("Int", List(Var("x1755767"))), TermAppl("Int", List(Var("x1755168"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1751859", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1751859", List()),SymbolicName("Class", "x1751868"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1751868"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a {
  public static void main (String[] J) {
    while(!(true && true)) System.out.println(081 + 60);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:18.322+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1838612", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1838617"), Var("x1838618"), TermAppl("Print", List(TermAppl("Int", List(Var("x1838658"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1838612", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1838612", List()),SymbolicName("Class", "x1838617"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1838617"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class eiH_ {
  public static void main (String[] O_) {
    System.out.println(114);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:19.357+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1884568", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1884577"), Var("x1884578"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1884568", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1884568", List()),SymbolicName("Class", "x1884577"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1884577"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class V {
  public static void main (String[] Q_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:19.451+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1885261", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1885270"), Var("x1885271"), TermAppl("Print", List(TermAppl("Mul", List(TermAppl("Add", List(TermAppl("Int", List(Var("x1886856"))), TermAppl("Int", List(Var("x1887139"))))), TermAppl("Int", List(Var("x1885972"))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1885275"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1885304"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x1886365"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s1885261", List()), "Class")), CDistinct(Declarations(TermAppl("s1885273", List()), "Var")), CDistinct(Declarations(TermAppl("s1885273", List()), "Method")), CDistinct(Declarations(TermAppl("s1885302", List()), "Var")), CDistinct(Declarations(TermAppl("s1885302", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1885261", List()),SymbolicName("Class", "x1885270")), CGDecl(TermAppl("s1885261", List()),SymbolicName("Class", "x1885275")), CGAssoc(SymbolicName("Class", "x1885275"),TermAppl("s1885273", List())), CGDecl(TermAppl("s1885273", List()),ConcreteName("Implicit", "this", 1885280)), CGDirectEdge(TermAppl("s1885273", List()),Label('P'),TermAppl("s1885261", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1885261", List()),SymbolicName("Class", "x1885304")), CGAssoc(SymbolicName("Class", "x1885304"),TermAppl("s1885302", List())), CGDecl(TermAppl("s1885302", List()),ConcreteName("Implicit", "this", 1885309)), CGDirectEdge(TermAppl("s1885302", List()),Label('P'),TermAppl("s1885261", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1885302", List()),SymbolicName("Var", "x1886365"))),TypeEnv(Map(Binding(SymbolicName("Var", "x1886365"), TermAppl("TBool", List())), Binding(ConcreteName("Implicit", "this", 1885309), TermAppl("TClass", List(SymbolicName("Class", "x1885304")))), Binding(SymbolicName("Class", "x1885270"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x1885304"), TermAppl("TClass", List(SymbolicName("Class", "x1885304")))), Binding(ConcreteName("Implicit", "this", 1885280), TermAppl("TClass", List(SymbolicName("Class", "x1885275")))), Binding(SymbolicName("Class", "x1885275"), TermAppl("TClass", List(SymbolicName("Class", "x1885275")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] m) {
    System.out.println((53 + 2) * 4451);
    }
}

class n2 {

}

class n3 {
  boolean m;

})
-----------------------------------
===================================
2016-12-13T20:42:19.581+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1890472", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1890477"), Var("x1890478"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1890512"), TermAppl("Parent", List(Var("x1890540"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x1890592"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x1890528"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x1890587"))), Var("x1890574"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s1890472", List()), "Class")), CDistinct(Declarations(TermAppl("s1890510", List()), "Var")), CDistinct(Declarations(TermAppl("s1890510", List()), "Method")), CDistinct(Declarations(TermAppl("s1890526", List()), "Var")), CDistinct(Declarations(TermAppl("s1890526", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1890472", List()),SymbolicName("Class", "x1890477")), CGDecl(TermAppl("s1890472", List()),SymbolicName("Class", "x1890512")), CGAssoc(SymbolicName("Class", "x1890512"),TermAppl("s1890510", List())), CGDecl(TermAppl("s1890510", List()),ConcreteName("Implicit", "this", 1890517)), CGDirectEdge(TermAppl("s1890510", List()),Label('P'),TermAppl("s1890472", List())), NewScope(Var("cs")), CGDecl(TermAppl("s1890472", List()),SymbolicName("Class", "x1890528")), CGAssoc(SymbolicName("Class", "x1890528"),TermAppl("s1890526", List())), CGDecl(TermAppl("s1890526", List()),ConcreteName("Implicit", "this", 1890533)), CGDirectEdge(TermAppl("s1890526", List()),Label('P'),TermAppl("s1890472", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x1890540"),TermAppl("s1890472", List())), CGNamedEdge(Var("x1890539"),Label('I'),SymbolicName("Class", "x1890540")), CGDecl(TermAppl("s1890526", List()),SymbolicName("Var", "x1890574")), CGRef(SymbolicName("Class", "x1890587"),TermAppl("s1890526", List())), CGDecl(TermAppl("s1890510", List()),SymbolicName("Var", "x1890592"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1890477"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x1890592"), TermAppl("TBool", List())), Binding(SymbolicName("Class", "x1890528"), TermAppl("TClass", List(SymbolicName("Class", "x1890528")))), Binding(SymbolicName("Var", "x1890574"), TermAppl("TClass", List(SymbolicName("Class", "x1890512")))), Binding(ConcreteName("Implicit", "this", 1890533), TermAppl("TClass", List(SymbolicName("Class", "x1890528")))), Binding(SymbolicName("Class", "x1890512"), TermAppl("TClass", List(SymbolicName("Class", "x1890512")))), Binding(ConcreteName("Implicit", "this", 1890517), TermAppl("TClass", List(SymbolicName("Class", "x1890512")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x1890540"), SymbolicName("Class", "x1890528")), Tuple2(SymbolicName("Class", "x1890587"), SymbolicName("Class", "x1890512")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x1890512"))), TermAppl("TClass", List(SymbolicName("Class", "x1890528")))))),List())),class n3 {
  public static void main (String[] D) {
    {
    }
    }
}

class n1 extends n2 {
  boolean c;

}

class n2 {
  n1 S;

})
-----------------------------------
===================================
2016-12-13T20:42:22.283+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1953579", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1953588"), Var("x1953589"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x1953929"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1953579", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1953579", List()),SymbolicName("Class", "x1953588"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1953588"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class b {
  public static void main (String[] S7) {
    System.out.println(new int[30].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:23.031+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s1964260", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x1964265"), Var("x1964266"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s1964260", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1964260", List()),SymbolicName("Class", "x1964265"))),TypeEnv(Map(Binding(SymbolicName("Class", "x1964265"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class T {
  public static void main (String[] s) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:57.237+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s16986", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x16995"), Var("x16996"), TermAppl("Block", List(TermAppl("Cons", List(TermAppl("While", List(TermAppl("True", List()), TermAppl("While", List(TermAppl("Not", List(TermAppl("False", List()))), TermAppl("Print", List(TermAppl("Int", List(Var("x19345"))))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s16986", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s16986", List()),SymbolicName("Class", "x16995"))),TypeEnv(Map(Binding(SymbolicName("Class", "x16995"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class ug {
  public static void main (String[] E__) {
    {
      while(true) while(!false) System.out.println(2);
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:58.821+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s54688", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x54697"), Var("x54698"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x54702"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x54748"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s54688", List()), "Class")), CDistinct(Declarations(TermAppl("s54700", List()), "Var")), CDistinct(Declarations(TermAppl("s54700", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s54688", List()),SymbolicName("Class", "x54697")), CGDecl(TermAppl("s54688", List()),SymbolicName("Class", "x54702")), CGAssoc(SymbolicName("Class", "x54702"),TermAppl("s54700", List())), CGDecl(TermAppl("s54700", List()),ConcreteName("Implicit", "this", 54707)), CGDirectEdge(TermAppl("s54700", List()),Label('P'),TermAppl("s54688", List())), NewScope(Var("cs")), CGDecl(TermAppl("s54700", List()),SymbolicName("Var", "x54748"))),TypeEnv(Map(Binding(SymbolicName("Class", "x54697"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x54702"), TermAppl("TClass", List(SymbolicName("Class", "x54702")))), Binding(ConcreteName("Implicit", "this", 54707), TermAppl("TClass", List(SymbolicName("Class", "x54702")))), Binding(SymbolicName("Var", "x54748"), TermAppl("TIntArray", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] j) {
    {
    }
    }
}

class n2 {
  int[] Uu;

})
-----------------------------------
===================================
2016-12-13T20:42:58.856+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s55616", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x55621"), Var("x55622"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s55616", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s55616", List()),SymbolicName("Class", "x55621"))),TypeEnv(Map(Binding(SymbolicName("Class", "x55621"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class w_p {
  public static void main (String[] S17) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:58.868+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s55658", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x55667"), Var("x55668"), TermAppl("Print", List(TermAppl("Int", List(Var("x55708"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s55658", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s55658", List()),SymbolicName("Class", "x55667"))),TypeEnv(Map(Binding(SymbolicName("Class", "x55667"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class uI {
  public static void main (String[] Ut) {
    System.out.println(72908);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:58.888+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s55846", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x55855"), Var("x55856"), TermAppl("Print", List(TermAppl("Int", List(Var("x55896"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s55846", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s55846", List()),SymbolicName("Class", "x55855"))),TypeEnv(Map(Binding(SymbolicName("Class", "x55855"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class L {
  public static void main (String[] u) {
    System.out.println(8);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:42:58.913+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s56203", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x56212"), Var("x56213"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s56203", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s56203", List()),SymbolicName("Class", "x56212"))),TypeEnv(Map(Binding(SymbolicName("Class", "x56212"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Z {
  public static void main (String[] MF) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:02.319+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s143467", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x143472"), Var("x143473"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x143515"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x143548"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x143544"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s143467", List()), "Class")), CDistinct(Declarations(TermAppl("s143513", List()), "Var")), CDistinct(Declarations(TermAppl("s143513", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s143467", List()),SymbolicName("Class", "x143472")), CGDecl(TermAppl("s143467", List()),SymbolicName("Class", "x143515")), CGAssoc(SymbolicName("Class", "x143515"),TermAppl("s143513", List())), CGDecl(TermAppl("s143513", List()),ConcreteName("Implicit", "this", 143520)), CGDirectEdge(TermAppl("s143513", List()),Label('P'),TermAppl("s143467", List())), NewScope(Var("cs")), CGDecl(TermAppl("s143513", List()),SymbolicName("Var", "x143544")), CGDecl(TermAppl("s143513", List()),SymbolicName("Var", "x143548"))),TypeEnv(Map(Binding(ConcreteName("Implicit", "this", 143520), TermAppl("TClass", List(SymbolicName("Class", "x143515")))), Binding(SymbolicName("Var", "x143548"), TermAppl("TBool", List())), Binding(SymbolicName("Class", "x143515"), TermAppl("TClass", List(SymbolicName("Class", "x143515")))), Binding(SymbolicName("Var", "x143544"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x143472"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n3 {
  public static void main (String[] G) {
    {
    }
    }
}

class n4 {
  boolean n2;
  int n1;

})
-----------------------------------
===================================
2016-12-13T20:43:04.744+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s214098", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x214107"), Var("x214108"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s214098", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s214098", List()),SymbolicName("Class", "x214107"))),TypeEnv(Map(Binding(SymbolicName("Class", "x214107"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class UScv {
  public static void main (String[] B) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:06.4+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s286359", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x286368"), Var("x286369"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s286359", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s286359", List()),SymbolicName("Class", "x286368"))),TypeEnv(Map(Binding(SymbolicName("Class", "x286368"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class L {
  public static void main (String[] jl) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:10.442+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s417638", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x417651"), Var("x417652"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x417686"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x417698"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s417638", List()), "Class")), CDistinct(Declarations(TermAppl("s417684", List()), "Var")), CDistinct(Declarations(TermAppl("s417684", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s417638", List()),SymbolicName("Class", "x417651")), CGDecl(TermAppl("s417638", List()),SymbolicName("Class", "x417686")), CGAssoc(SymbolicName("Class", "x417686"),TermAppl("s417684", List())), CGDecl(TermAppl("s417684", List()),ConcreteName("Implicit", "this", 417691)), CGDirectEdge(TermAppl("s417684", List()),Label('P'),TermAppl("s417638", List())), NewScope(Var("cs")), CGDecl(TermAppl("s417684", List()),SymbolicName("Var", "x417698"))),TypeEnv(Map(Binding(SymbolicName("Class", "x417651"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x417686"), TermAppl("TClass", List(SymbolicName("Class", "x417686")))), Binding(ConcreteName("Implicit", "this", 417691), TermAppl("TClass", List(SymbolicName("Class", "x417686")))), Binding(SymbolicName("Var", "x417698"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] d) {
    {
    }
    }
}

class n2 {
  boolean V;

})
-----------------------------------
===================================
2016-12-13T20:43:11.197+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s444236", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x444241"), Var("x444242"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s444236", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s444236", List()),SymbolicName("Class", "x444241"))),TypeEnv(Map(Binding(SymbolicName("Class", "x444241"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Duq {
  public static void main (String[] oz) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:12.787+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s487549", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x487558"), Var("x487559"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x487563"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x487630"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x487671"))), Var("x487662"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x487644"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s487549", List()), "Class")), CDistinct(Declarations(TermAppl("s487561", List()), "Var")), CDistinct(Declarations(TermAppl("s487561", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s487549", List()),SymbolicName("Class", "x487558")), CGDecl(TermAppl("s487549", List()),SymbolicName("Class", "x487563")), CGAssoc(SymbolicName("Class", "x487563"),TermAppl("s487561", List())), CGDecl(TermAppl("s487561", List()),ConcreteName("Implicit", "this", 487568)), CGDirectEdge(TermAppl("s487561", List()),Label('P'),TermAppl("s487549", List())), NewScope(Var("cs")), CGDecl(TermAppl("s487561", List()),SymbolicName("Var", "x487630")), CGDecl(TermAppl("s487561", List()),SymbolicName("Var", "x487644")), CGDecl(TermAppl("s487561", List()),SymbolicName("Var", "x487662")), CGRef(SymbolicName("Class", "x487671"),TermAppl("s487561", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x487662"), TermAppl("TClass", List(SymbolicName("Class", "x487563")))), Binding(ConcreteName("Implicit", "this", 487568), TermAppl("TClass", List(SymbolicName("Class", "x487563")))), Binding(SymbolicName("Var", "x487644"), TermAppl("TIntArray", List())), Binding(SymbolicName("Var", "x487630"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x487558"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x487563"), TermAppl("TClass", List(SymbolicName("Class", "x487563")))))),Resolution(Map(Tuple2(SymbolicName("Class", "x487671"), SymbolicName("Class", "x487563")))),SubtypeRelation(List()),List())),class n5 {
  public static void main (String[] Zy_) {
    {
    }
    }
}

class n1 {
  int n2;
  n1 n4;
  int[] n3;

})
-----------------------------------
===================================
2016-12-13T20:43:14.538+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s534553", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x534562"), Var("x534563"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s534553", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s534553", List()),SymbolicName("Class", "x534562"))),TypeEnv(Map(Binding(SymbolicName("Class", "x534562"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class l {
  public static void main (String[] PO_yQ) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:15.371+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s560218", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x560227"), Var("x560228"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s560218", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s560218", List()),SymbolicName("Class", "x560227"))),TypeEnv(Map(Binding(SymbolicName("Class", "x560227"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class h {
  public static void main (String[] O) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:16.1+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s582473", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x582478"), Var("x582479"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x582521"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x582546"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x582589"))), Var("x582568"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x582603"))), Var("x582576"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x582580"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s582473", List()), "Class")), CDistinct(Declarations(TermAppl("s582519", List()), "Var")), CDistinct(Declarations(TermAppl("s582519", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s582473", List()),SymbolicName("Class", "x582478")), CGDecl(TermAppl("s582473", List()),SymbolicName("Class", "x582521")), CGAssoc(SymbolicName("Class", "x582521"),TermAppl("s582519", List())), CGDecl(TermAppl("s582519", List()),ConcreteName("Implicit", "this", 582526)), CGDirectEdge(TermAppl("s582519", List()),Label('P'),TermAppl("s582473", List())), NewScope(Var("cs")), CGDecl(TermAppl("s582519", List()),SymbolicName("Var", "x582546")), CGDecl(TermAppl("s582519", List()),SymbolicName("Var", "x582568")), CGDecl(TermAppl("s582519", List()),SymbolicName("Var", "x582576")), CGDecl(TermAppl("s582519", List()),SymbolicName("Var", "x582580")), CGRef(SymbolicName("Class", "x582589"),TermAppl("s582519", List())), CGRef(SymbolicName("Class", "x582603"),TermAppl("s582519", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x582478"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x582580"), TermAppl("TInt", List())), Binding(SymbolicName("Var", "x582576"), TermAppl("TClass", List(SymbolicName("Class", "x582521")))), Binding(SymbolicName("Var", "x582568"), TermAppl("TClass", List(SymbolicName("Class", "x582521")))), Binding(SymbolicName("Class", "x582521"), TermAppl("TClass", List(SymbolicName("Class", "x582521")))), Binding(ConcreteName("Implicit", "this", 582526), TermAppl("TClass", List(SymbolicName("Class", "x582521")))), Binding(SymbolicName("Var", "x582546"), TermAppl("TInt", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x582589"), SymbolicName("Class", "x582521")), Tuple2(SymbolicName("Class", "x582603"), SymbolicName("Class", "x582521")))),SubtypeRelation(List()),List())),class n6 {
  public static void main (String[] G) {
    {
    }
    }
}

class n1 {
  int n2;
  n1 n3;
  n1 n4;
  int n5;

})
-----------------------------------
===================================
2016-12-13T20:43:21.804+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s719205", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x719214"), Var("x719215"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s719205", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s719205", List()),SymbolicName("Class", "x719214"))),TypeEnv(Map(Binding(SymbolicName("Class", "x719214"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] yPQ) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:21.975+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s720242", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x720247"), Var("x720248"), TermAppl("While", List(TermAppl("Not", List(TermAppl("Not", List(TermAppl("True", List()))))), TermAppl("While", List(TermAppl("False", List()), TermAppl("Print", List(TermAppl("Int", List(Var("x721993"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s720242", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s720242", List()),SymbolicName("Class", "x720247"))),TypeEnv(Map(Binding(SymbolicName("Class", "x720247"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class A_c_cf {
  public static void main (String[] O) {
    while(!!true) while(false) System.out.println(690);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:23.61+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s747370", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x747375"), Var("x747376"), TermAppl("While", List(TermAppl("Not", List(TermAppl("True", List()))), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s747370", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s747370", List()),SymbolicName("Class", "x747375"))),TypeEnv(Map(Binding(SymbolicName("Class", "x747375"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Uo8 {
  public static void main (String[] Y) {
    while(!true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:23.615+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s747738", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x747743"), Var("x747744"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s747738", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s747738", List()),SymbolicName("Class", "x747743"))),TypeEnv(Map(Binding(SymbolicName("Class", "x747743"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Bg3 {
  public static void main (String[] m22) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:25.89+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s785264", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x785269"), Var("x785270"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x785308"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x785341"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s785264", List()), "Class")), CDistinct(Declarations(TermAppl("s785306", List()), "Var")), CDistinct(Declarations(TermAppl("s785306", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s785264", List()),SymbolicName("Class", "x785269")), CGDecl(TermAppl("s785264", List()),SymbolicName("Class", "x785308")), CGAssoc(SymbolicName("Class", "x785308"),TermAppl("s785306", List())), CGDecl(TermAppl("s785306", List()),ConcreteName("Implicit", "this", 785313)), CGDirectEdge(TermAppl("s785306", List()),Label('P'),TermAppl("s785264", List())), NewScope(Var("cs")), CGDecl(TermAppl("s785306", List()),SymbolicName("Var", "x785341"))),TypeEnv(Map(Binding(SymbolicName("Class", "x785269"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x785308"), TermAppl("TClass", List(SymbolicName("Class", "x785308")))), Binding(ConcreteName("Implicit", "this", 785313), TermAppl("TClass", List(SymbolicName("Class", "x785308")))), Binding(SymbolicName("Var", "x785341"), TermAppl("TInt", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] I) {
    {
    }
    }
}

class n2 {
  int q;

})
-----------------------------------
===================================
2016-12-13T20:43:26.429+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s794019", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x794028"), Var("x794029"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s794019", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s794019", List()),SymbolicName("Class", "x794028"))),TypeEnv(Map(Binding(SymbolicName("Class", "x794028"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class H {
  public static void main (String[] V) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:43:26.526+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s794061", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x794107"), Var("x794108"), TermAppl("Print", List(TermAppl("Int", List(Var("x794213"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x794096"), TermAppl("Parent", List(Var("x794128"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x794141"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntType", List()), Var("x794137"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x794361"))), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("ClassType", List(Var("x794392"))), Var("x794379"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x794075"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s794061", List()), "Class")), CDistinct(Declarations(TermAppl("s794073", List()), "Var")), CDistinct(Declarations(TermAppl("s794073", List()), "Method")), CDistinct(Declarations(TermAppl("s794094", List()), "Var")), CDistinct(Declarations(TermAppl("s794094", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s794061", List()),SymbolicName("Class", "x794075")), CGAssoc(SymbolicName("Class", "x794075"),TermAppl("s794073", List())), CGDecl(TermAppl("s794073", List()),ConcreteName("Implicit", "this", 794080)), CGDirectEdge(TermAppl("s794073", List()),Label('P'),TermAppl("s794061", List())), NewScope(Var("cs")), CGDecl(TermAppl("s794061", List()),SymbolicName("Class", "x794096")), CGAssoc(SymbolicName("Class", "x794096"),TermAppl("s794094", List())), CGDecl(TermAppl("s794094", List()),ConcreteName("Implicit", "this", 794101)), CGDirectEdge(TermAppl("s794094", List()),Label('P'),TermAppl("s794061", List())), NewScope(Var("cs")), CGDecl(TermAppl("s794061", List()),SymbolicName("Class", "x794107")), CGRef(SymbolicName("Class", "x794128"),TermAppl("s794061", List())), CGNamedEdge(Var("x794127"),Label('I'),SymbolicName("Class", "x794128")), CGDecl(TermAppl("s794094", List()),SymbolicName("Var", "x794137")), CGDecl(TermAppl("s794094", List()),SymbolicName("Var", "x794141")), CGDecl(TermAppl("s794094", List()),SymbolicName("Var", "x794361")), CGDecl(TermAppl("s794094", List()),SymbolicName("Var", "x794379")), CGRef(SymbolicName("Class", "x794392"),TermAppl("s794094", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x794107"), TermAppl("TMainClass", List())), Binding(SymbolicName("Var", "x794361"), TermAppl("TBool", List())), Binding(SymbolicName("Class", "x794096"), TermAppl("TClass", List(SymbolicName("Class", "x794096")))), Binding(SymbolicName("Var", "x794137"), TermAppl("TInt", List())), Binding(SymbolicName("Class", "x794075"), TermAppl("TClass", List(SymbolicName("Class", "x794075")))), Binding(ConcreteName("Implicit", "this", 794101), TermAppl("TClass", List(SymbolicName("Class", "x794096")))), Binding(SymbolicName("Var", "x794379"), TermAppl("TClass", List(SymbolicName("Class", "x794075")))), Binding(ConcreteName("Implicit", "this", 794080), TermAppl("TClass", List(SymbolicName("Class", "x794075")))), Binding(SymbolicName("Var", "x794141"), TermAppl("TBool", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x794128"), SymbolicName("Class", "x794075")), Tuple2(SymbolicName("Class", "x794392"), SymbolicName("Class", "x794075")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x794096"))), TermAppl("TClass", List(SymbolicName("Class", "x794075")))))),List())),class n8 {
  public static void main (String[] h) {
    System.out.println(60);
    }
}

class n7 extends n1 {
  boolean n3;
  int n2;
  boolean n4;
  n1 n5;

}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:44:05.757+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s98520", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x98525"), Var("x98526"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s98520", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s98520", List()),SymbolicName("Class", "x98525"))),TypeEnv(Map(Binding(SymbolicName("Class", "x98525"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class C {
  public static void main (String[] c) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:05.82+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s98962", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x98967"), Var("x98968"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s98962", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s98962", List()),SymbolicName("Class", "x98967"))),TypeEnv(Map(Binding(SymbolicName("Class", "x98967"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class o {
  public static void main (String[] X) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:10.359+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s178755", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x178789"), Var("x178790"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x178769"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s178755", List()), "Class")), CDistinct(Declarations(TermAppl("s178767", List()), "Var")), CDistinct(Declarations(TermAppl("s178767", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s178755", List()),SymbolicName("Class", "x178769")), CGAssoc(SymbolicName("Class", "x178769"),TermAppl("s178767", List())), CGDecl(TermAppl("s178767", List()),ConcreteName("Implicit", "this", 178774)), CGDirectEdge(TermAppl("s178767", List()),Label('P'),TermAppl("s178755", List())), NewScope(Var("cs")), CGDecl(TermAppl("s178755", List()),SymbolicName("Class", "x178789"))),TypeEnv(Map(Binding(SymbolicName("Class", "x178769"), TermAppl("TClass", List(SymbolicName("Class", "x178769")))), Binding(ConcreteName("Implicit", "this", 178774), TermAppl("TClass", List(SymbolicName("Class", "x178769")))), Binding(SymbolicName("Class", "x178789"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] K_T) {
    {
    }
    }
}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:44:14.057+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s292785", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x292790"), Var("x292791"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s292785", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s292785", List()),SymbolicName("Class", "x292790"))),TypeEnv(Map(Binding(SymbolicName("Class", "x292790"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class i {
  public static void main (String[] S) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:14.461+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s308296", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x308301"), Var("x308302"), TermAppl("Print", List(TermAppl("Int", List(Var("x308346"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s308296", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s308296", List()),SymbolicName("Class", "x308301"))),TypeEnv(Map(Binding(SymbolicName("Class", "x308301"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class R {
  public static void main (String[] x) {
    System.out.println(9);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:15.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s373027", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x373036"), Var("x373037"), TermAppl("Print", List(TermAppl("Int", List(Var("x373077"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s373027", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s373027", List()),SymbolicName("Class", "x373036"))),TypeEnv(Map(Binding(SymbolicName("Class", "x373036"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a {
  public static void main (String[] u) {
    System.out.println(127140);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:18.431+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s414027", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x414032"), Var("x414033"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x414377"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s414027", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s414027", List()),SymbolicName("Class", "x414032"))),TypeEnv(Map(Binding(SymbolicName("Class", "x414032"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class a_ {
  public static void main (String[] g) {
    System.out.println(new int[296].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:18.617+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s416985", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x416990"), Var("x416991"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x417335"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s416985", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s416985", List()),SymbolicName("Class", "x416990"))),TypeEnv(Map(Binding(SymbolicName("Class", "x416990"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class S {
  public static void main (String[] t) {
    System.out.println(new int[231].length);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:21.407+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s471284", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x471293"), Var("x471294"), TermAppl("Print", List(TermAppl("Add", List(TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x479229"))))))))), TermAppl("Subscript", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x481519"))))))))), TermAppl("Int", List(Var("x481270"))))))), TermAppl("Add", List(TermAppl("Mul", List(TermAppl("Int", List(Var("x476724"))), TermAppl("Int", List(Var("x480564"))))), TermAppl("Int", List(Var("x472548"))))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s471284", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s471284", List()),SymbolicName("Class", "x471293"))),TypeEnv(Map(Binding(SymbolicName("Class", "x471293"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class qG {
  public static void main (String[] N) {
    System.out.println(new int[new int[9].length][new int[new int[17].length][59]] + (08 * 60 + 90815));
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:26.392+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s645855", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x645864"), Var("x645865"), TermAppl("Print", List(TermAppl("Int", List(Var("x645905"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s645855", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s645855", List()),SymbolicName("Class", "x645864"))),TypeEnv(Map(Binding(SymbolicName("Class", "x645864"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class g {
  public static void main (String[] N) {
    System.out.println(73);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:26.777+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s658736", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x658741"), Var("x658742"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s658736", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s658736", List()),SymbolicName("Class", "x658741"))),TypeEnv(Map(Binding(SymbolicName("Class", "x658741"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class q {
  public static void main (String[] w) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:26.786+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s658778", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x658783"), Var("x658784"), TermAppl("Print", List(TermAppl("Int", List(Var("x658828"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s658778", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s658778", List()),SymbolicName("Class", "x658783"))),TypeEnv(Map(Binding(SymbolicName("Class", "x658783"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class X {
  public static void main (String[] W) {
    System.out.println(0022);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:28.768+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s724582", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x724591"), Var("x724592"), TermAppl("Print", List(TermAppl("Add", List(TermAppl("Int", List(Var("x725488"))), TermAppl("Int", List(Var("x725239"))))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s724582", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s724582", List()),SymbolicName("Class", "x724591"))),TypeEnv(Map(Binding(SymbolicName("Class", "x724591"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class Y__ {
  public static void main (String[] x) {
    System.out.println(09405 + 2);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:28.829+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s727521", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x727538"), Var("x727539"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x727569"), TermAppl("Parent", List(Var("x727601"))), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Class", List(Var("x727581"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s727521", List()), "Class")), CDistinct(Declarations(TermAppl("s727567", List()), "Var")), CDistinct(Declarations(TermAppl("s727567", List()), "Method")), CDistinct(Declarations(TermAppl("s727579", List()), "Var")), CDistinct(Declarations(TermAppl("s727579", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s727521", List()),SymbolicName("Class", "x727538")), CGDecl(TermAppl("s727521", List()),SymbolicName("Class", "x727569")), CGAssoc(SymbolicName("Class", "x727569"),TermAppl("s727567", List())), CGDecl(TermAppl("s727567", List()),ConcreteName("Implicit", "this", 727574)), CGDirectEdge(TermAppl("s727567", List()),Label('P'),TermAppl("s727521", List())), NewScope(Var("cs")), CGDecl(TermAppl("s727521", List()),SymbolicName("Class", "x727581")), CGAssoc(SymbolicName("Class", "x727581"),TermAppl("s727579", List())), CGDecl(TermAppl("s727579", List()),ConcreteName("Implicit", "this", 727586)), CGDirectEdge(TermAppl("s727579", List()),Label('P'),TermAppl("s727521", List())), NewScope(Var("cs")), CGRef(SymbolicName("Class", "x727601"),TermAppl("s727521", List())), CGNamedEdge(Var("x727600"),Label('I'),SymbolicName("Class", "x727601"))),TypeEnv(Map(Binding(ConcreteName("Implicit", "this", 727586), TermAppl("TClass", List(SymbolicName("Class", "x727581")))), Binding(ConcreteName("Implicit", "this", 727574), TermAppl("TClass", List(SymbolicName("Class", "x727569")))), Binding(SymbolicName("Class", "x727569"), TermAppl("TClass", List(SymbolicName("Class", "x727569")))), Binding(SymbolicName("Class", "x727581"), TermAppl("TClass", List(SymbolicName("Class", "x727581")))), Binding(SymbolicName("Class", "x727538"), TermAppl("TMainClass", List())))),Resolution(Map(Tuple2(SymbolicName("Class", "x727601"), SymbolicName("Class", "x727581")))),SubtypeRelation(List(Binding(TermAppl("TClass", List(SymbolicName("Class", "x727569"))), TermAppl("TClass", List(SymbolicName("Class", "x727581")))))),List())),class n2 {
  public static void main (String[] A) {
    {
    }
    }
}

class n3 extends n1 {

}

class n1 {

})
-----------------------------------
===================================
2016-12-13T20:44:31.676+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s806803", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x806812"), Var("x806813"), TermAppl("Print", List(TermAppl("Int", List(Var("x806853"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s806803", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s806803", List()),SymbolicName("Class", "x806812"))),TypeEnv(Map(Binding(SymbolicName("Class", "x806812"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class W {
  public static void main (String[] h) {
    System.out.println(98);
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:35.782+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s937614", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x937623"), Var("x937624"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s937614", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s937614", List()),SymbolicName("Class", "x937623"))),TypeEnv(Map(Binding(SymbolicName("Class", "x937623"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class R {
  public static void main (String[] o) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-13T20:44:37.99+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s984631", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x984636"), Var("x984637"), TermAppl("Print", List(TermAppl("Int", List(Var("x984702"))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x984645"), TermAppl("NoParent", List()), TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s984631", List()), "Class")), CDistinct(Declarations(TermAppl("s984643", List()), "Var")), CDistinct(Declarations(TermAppl("s984643", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s984631", List()),SymbolicName("Class", "x984636")), CGDecl(TermAppl("s984631", List()),SymbolicName("Class", "x984645")), CGAssoc(SymbolicName("Class", "x984645"),TermAppl("s984643", List())), CGDecl(TermAppl("s984643", List()),ConcreteName("Implicit", "this", 984650)), CGDirectEdge(TermAppl("s984643", List()),Label('P'),TermAppl("s984631", List())), NewScope(Var("cs"))),TypeEnv(Map(Binding(SymbolicName("Class", "x984636"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x984645"), TermAppl("TClass", List(SymbolicName("Class", "x984645")))), Binding(ConcreteName("Implicit", "this", 984650), TermAppl("TClass", List(SymbolicName("Class", "x984645")))))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] F_w) {
    System.out.println(31081);
    }
}

class n2 {

})
-----------------------------------
===================================
2016-12-13T20:45:19.092+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s101", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x259"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\"\t[")
-----------------------------------
===================================
2016-12-13T20:45:19.293+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s269", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x427"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s269", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s269", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\t\"\^M\257")
-----------------------------------
===================================
2016-12-13T20:45:19.454+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x599")), List(TermAppl("s437", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x597"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s437", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s437", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x597"),TermAppl("s437", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x597"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:19.525+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x767")), List(TermAppl("s605", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x765"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s605", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s605", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x765"),TermAppl("s605", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x765"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:19.575+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x935")), List(TermAppl("s773", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x933"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s773", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s773", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x933"),TermAppl("s773", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x933"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:19.622+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s941", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x1099"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s941", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s941", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:19.693+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s1109", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1109", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1109", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:19.728+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1439")), List(TermAppl("s1277", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x1437"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1277", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1277", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1437"),TermAppl("s1277", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1437"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:19.778+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1607")), List(TermAppl("s1445", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x1605"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1445", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1445", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1605"),TermAppl("s1445", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1605"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:19.807+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1775")), List(TermAppl("s1613", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x1773"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1613", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1613", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1773"),TermAppl("s1613", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1773"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:19.833+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1943")), List(TermAppl("s1781", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x1941"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1781", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1781", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1941"),TermAppl("s1781", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1941"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:19.859+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2111")), List(TermAppl("s1949", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x2109"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1949", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1949", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2109"),TermAppl("s1949", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2109"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:19.886+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2279")), List(TermAppl("s2117", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x2277"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2117", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2117", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2277"),TermAppl("s2117", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2277"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:19.933+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2447")), List(TermAppl("s2285", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x2445"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2285", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2285", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2445"),TermAppl("s2285", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2445"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:19.975+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s2453", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2453", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2453", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:20.008+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2783")), List(TermAppl("s2621", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x2781"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2621", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2621", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2781"),TermAppl("s2621", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2781"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:20.07+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s2789", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x2848"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2789", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2789", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),8)
-----------------------------------
===================================
2016-12-13T20:45:20.099+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s2957", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2957", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2957", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:20.149+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3287")), List(TermAppl("s3125", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x3285"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3125", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3125", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3285"),TermAppl("s3125", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3285"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:20.188+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3455")), List(TermAppl("s3293", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x3453"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3293", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3293", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3453"),TermAppl("s3293", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3453"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:20.225+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3623")), List(TermAppl("s3461", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x3621"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3461", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3461", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3621"),TermAppl("s3461", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3621"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:20.254+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s3629", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x3787"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3629", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3629", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\"\n")
-----------------------------------
===================================
2016-12-13T20:45:20.276+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3797", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x3856"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3797", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3797", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),7727)
-----------------------------------
===================================
2016-12-13T20:45:20.317+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3965", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x4024"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3965", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3965", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),2)
-----------------------------------
===================================
2016-12-13T20:45:20.337+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4295")), List(TermAppl("s4133", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x4293"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4133", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4133", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4293"),TermAppl("s4133", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4293"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:20.371+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4463")), List(TermAppl("s4301", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x4461"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4301", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4301", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4461"),TermAppl("s4301", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4461"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:20.402+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4631")), List(TermAppl("s4469", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x4629"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4469", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4469", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4629"),TermAppl("s4469", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4629"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:20.431+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4799")), List(TermAppl("s4637", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x4797"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4637", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4637", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4797"),TermAppl("s4637", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4797"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:20.456+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4967")), List(TermAppl("s4805", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x4965"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4805", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4805", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4965"),TermAppl("s4805", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4965"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:20.482+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s4973", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4973", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4973", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:20.538+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x5303")), List(TermAppl("s5141", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x5301"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5141", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5141", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x5301"),TermAppl("s5141", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x5301"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:20.601+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x5471")), List(TermAppl("s5309", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x5469"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5309", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5309", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x5469"),TermAppl("s5309", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x5469"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:20.732+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x5639")), List(TermAppl("s5477", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x5637"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5477", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5477", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x5637"),TermAppl("s5477", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x5637"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:20.759+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s5645", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5645", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5645", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:20.78+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s5813", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x5971"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5813", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5813", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\^J\^T\"\t")
-----------------------------------
===================================
2016-12-13T20:45:20.848+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6143")), List(TermAppl("s5981", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x6141"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5981", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5981", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6141"),TermAppl("s5981", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6141"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:20.937+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6311")), List(TermAppl("s6149", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x6309"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6149", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6149", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6309"),TermAppl("s6149", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6309"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:20.958+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6479")), List(TermAppl("s6317", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x6477"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6317", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6317", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6477"),TermAppl("s6317", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6477"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:20.988+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s6485", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x6643"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6485", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6485", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:21.04+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6815")), List(TermAppl("s6653", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x6813"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6653", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6653", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6813"),TermAppl("s6653", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6813"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.058+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s6821", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x6880"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6821", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6821", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),1)
-----------------------------------
===================================
2016-12-13T20:45:21.113+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7151")), List(TermAppl("s6989", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7149"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6989", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6989", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7149"),TermAppl("s6989", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7149"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:21.162+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7319")), List(TermAppl("s7157", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7317"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7157", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7157", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7317"),TermAppl("s7157", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7317"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:21.205+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7487")), List(TermAppl("s7325", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7485"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7325", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7325", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7485"),TermAppl("s7325", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7485"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.229+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7655")), List(TermAppl("s7493", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7653"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7493", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7493", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7653"),TermAppl("s7493", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7653"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.249+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7823")), List(TermAppl("s7661", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7821"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7661", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7661", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7821"),TermAppl("s7661", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7821"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:21.292+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x7991")), List(TermAppl("s7829", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x7989"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7829", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7829", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7989"),TermAppl("s7829", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7989"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.317+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8159")), List(TermAppl("s7997", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x8157"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7997", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7997", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8157"),TermAppl("s7997", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8157"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.338+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8327")), List(TermAppl("s8165", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x8325"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s8165", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8165", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8325"),TermAppl("s8165", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8325"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:21.356+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8495")), List(TermAppl("s8333", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x8493"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s8333", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8333", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8493"),TermAppl("s8333", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8493"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:21.39+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8663")), List(TermAppl("s8501", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x8661"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s8501", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8501", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8661"),TermAppl("s8501", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8661"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:21.403+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8831")), List(TermAppl("s8669", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x8829"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s8669", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8669", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8829"),TermAppl("s8669", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8829"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.416+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s8837", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x8896"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s8837", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8837", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),4)
-----------------------------------
===================================
2016-12-13T20:45:21.43+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x9167")), List(TermAppl("s9005", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x9165"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9005", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9005", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9165"),TermAppl("s9005", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9165"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:21.445+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9173", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x9232"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9173", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9173", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),2471123)
-----------------------------------
===================================
2016-12-13T20:45:21.458+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x9503")), List(TermAppl("s9341", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x9501"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9341", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9341", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9501"),TermAppl("s9341", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9501"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:21.47+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x9671")), List(TermAppl("s9509", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x9669"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9509", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9509", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9669"),TermAppl("s9509", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9669"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.484+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x9839")), List(TermAppl("s9677", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x9837"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9677", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9677", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9837"),TermAppl("s9677", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9837"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:21.498+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10007")), List(TermAppl("s9845", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x10005"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9845", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9845", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10005"),TermAppl("s9845", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10005"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:21.586+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10175")), List(TermAppl("s10013", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x10173"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10013", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10013", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10173"),TermAppl("s10013", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10173"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.608+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s10181", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x10240"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10181", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10181", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),5)
-----------------------------------
===================================
2016-12-13T20:45:21.632+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10511")), List(TermAppl("s10349", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x10509"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10349", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10349", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10509"),TermAppl("s10349", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10509"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:21.643+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10679")), List(TermAppl("s10517", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x10677"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10517", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10517", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10677"),TermAppl("s10517", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10677"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.658+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10847")), List(TermAppl("s10685", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x10845"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10685", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10685", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10845"),TermAppl("s10685", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10845"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:21.677+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s10853", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x11011"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10853", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10853", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:21.695+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x11183")), List(TermAppl("s11021", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x11181"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11021", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11021", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11181"),TermAppl("s11021", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11181"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:21.726+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x11351")), List(TermAppl("s11189", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x11349"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11189", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11189", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11349"),TermAppl("s11189", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11349"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:21.74+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x11519")), List(TermAppl("s11357", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x11517"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11357", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11357", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11517"),TermAppl("s11357", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11517"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:21.755+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x11687")), List(TermAppl("s11525", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x11685"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11525", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11525", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11685"),TermAppl("s11525", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11685"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.771+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x11855")), List(TermAppl("s11693", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x11853"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11693", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11693", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11853"),TermAppl("s11693", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11853"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:21.784+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s11861", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x11920"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11861", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11861", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),98)
-----------------------------------
===================================
2016-12-13T20:45:21.808+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s12029", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x12187"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12029", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12029", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\  \")
-----------------------------------
===================================
2016-12-13T20:45:21.837+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x12359")), List(TermAppl("s12197", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x12357"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12197", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12197", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12357"),TermAppl("s12197", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12357"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:21.927+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x12527")), List(TermAppl("s12365", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x12525"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12365", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12365", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12525"),TermAppl("s12365", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12525"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:21.949+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x12695")), List(TermAppl("s12533", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x12693"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12533", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12533", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12693"),TermAppl("s12533", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12693"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:21.967+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x12863")), List(TermAppl("s12701", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x12861"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12701", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12701", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12861"),TermAppl("s12701", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12861"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:21.982+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x13031")), List(TermAppl("s12869", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x13029"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s12869", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12869", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x13029"),TermAppl("s12869", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13029"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:21.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s13037", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13037", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13037", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:22.049+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x13367")), List(TermAppl("s13205", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x13365"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13205", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13205", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x13365"),TermAppl("s13205", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13365"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:22.073+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s13373", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x13432"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13373", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13373", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),7)
-----------------------------------
===================================
2016-12-13T20:45:22.089+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x13703")), List(TermAppl("s13541", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x13701"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13541", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13541", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x13701"),TermAppl("s13541", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13701"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:22.106+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x13871")), List(TermAppl("s13709", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x13869"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13709", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13709", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x13869"),TermAppl("s13709", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13869"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:22.125+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14039")), List(TermAppl("s13877", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14037"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13877", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13877", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14037"),TermAppl("s13877", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14037"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:22.159+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14207")), List(TermAppl("s14045", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14205"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14045", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14045", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14205"),TermAppl("s14045", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14205"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:22.175+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14375")), List(TermAppl("s14213", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14373"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14213", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14213", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14373"),TermAppl("s14213", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14373"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:22.194+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14543")), List(TermAppl("s14381", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14541"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14381", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14381", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14541"),TermAppl("s14381", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14541"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:22.207+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14711")), List(TermAppl("s14549", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14709"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14549", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14549", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14709"),TermAppl("s14549", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14709"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:22.219+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14879")), List(TermAppl("s14717", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x14877"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14717", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14717", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14877"),TermAppl("s14717", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14877"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:22.235+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s14885", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14885", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14885", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:22.249+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s15053", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x15211"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15053", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15053", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:22.277+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x15383")), List(TermAppl("s15221", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x15381"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15221", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15221", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x15381"),TermAppl("s15221", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15381"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:22.296+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s15389", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15389", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15389", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:22.318+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x15719")), List(TermAppl("s15557", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x15717"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15557", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15557", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x15717"),TermAppl("s15557", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15717"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:22.337+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x15887")), List(TermAppl("s15725", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x15885"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15725", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15725", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x15885"),TermAppl("s15725", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15885"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:22.355+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16055")), List(TermAppl("s15893", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x16053"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15893", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15893", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16053"),TermAppl("s15893", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16053"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:22.377+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16223")), List(TermAppl("s16061", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x16221"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16061", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16061", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16221"),TermAppl("s16061", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16221"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:22.393+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16391")), List(TermAppl("s16229", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x16389"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16229", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16229", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16389"),TermAppl("s16229", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16389"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:22.407+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s16397", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x16456"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16397", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16397", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),9963)
-----------------------------------
===================================
2016-12-13T20:45:22.424+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16727")), List(TermAppl("s16565", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x16725"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16565", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16565", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16725"),TermAppl("s16565", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16725"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:22.44+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16895")), List(TermAppl("s16733", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x16893"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16733", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16733", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16893"),TermAppl("s16733", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16893"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:22.532+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s16901", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x17059"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s16901", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16901", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\n\t\n")
-----------------------------------
===================================
2016-12-13T20:45:22.583+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x17231")), List(TermAppl("s17069", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x17229"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17069", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17069", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x17229"),TermAppl("s17069", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17229"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:22.603+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x17399")), List(TermAppl("s17237", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x17397"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17237", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17237", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x17397"),TermAppl("s17237", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17397"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:22.628+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x17567")), List(TermAppl("s17405", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x17565"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17405", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17405", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x17565"),TermAppl("s17405", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17565"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:22.644+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x17735")), List(TermAppl("s17573", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x17733"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17573", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17573", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x17733"),TermAppl("s17573", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17733"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:22.658+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s17741", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x17899"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17741", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17741", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:22.677+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s17909", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x18067"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17909", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17909", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:22.721+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s18077", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18077", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18077", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:22.759+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x18407")), List(TermAppl("s18245", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x18405"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18245", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18245", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x18405"),TermAppl("s18245", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18405"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:22.804+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x18575")), List(TermAppl("s18413", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x18573"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18413", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18413", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x18573"),TermAppl("s18413", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18573"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:22.841+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x18743")), List(TermAppl("s18581", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x18741"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18581", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18581", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x18741"),TermAppl("s18581", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18741"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:22.921+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x18911")), List(TermAppl("s18749", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x18909"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18749", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18749", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x18909"),TermAppl("s18749", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18909"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:22.965+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19079")), List(TermAppl("s18917", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x19077"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18917", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18917", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19077"),TermAppl("s18917", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19077"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:22.993+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19247")), List(TermAppl("s19085", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x19245"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19085", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19085", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19245"),TermAppl("s19085", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19245"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:23.169+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19415")), List(TermAppl("s19253", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x19413"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19253", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19253", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19413"),TermAppl("s19253", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19413"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:23.37+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19583")), List(TermAppl("s19421", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x19581"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19421", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19421", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19581"),TermAppl("s19421", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19581"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:23.426+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s19589", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x19747"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19589", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19589", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:23.509+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19919")), List(TermAppl("s19757", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x19917"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19757", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19757", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19917"),TermAppl("s19757", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19917"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:23.586+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20087")), List(TermAppl("s19925", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20085"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s19925", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19925", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20085"),TermAppl("s19925", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20085"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:23.644+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20255")), List(TermAppl("s20093", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20253"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20093", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20093", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20253"),TermAppl("s20093", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20253"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:23.669+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20423")), List(TermAppl("s20261", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20421"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20261", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20261", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20421"),TermAppl("s20261", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20421"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:23.687+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20591")), List(TermAppl("s20429", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20589"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20429", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20429", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20589"),TermAppl("s20429", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20589"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:23.707+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20759")), List(TermAppl("s20597", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20757"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20597", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20597", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20757"),TermAppl("s20597", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20757"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:23.745+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20927")), List(TermAppl("s20765", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x20925"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20765", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20765", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20925"),TermAppl("s20765", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20925"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:23.807+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21095")), List(TermAppl("s20933", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x21093"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20933", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20933", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x21093"),TermAppl("s20933", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21093"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:23.832+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21263")), List(TermAppl("s21101", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x21261"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21101", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x21261"),TermAppl("s21101", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21261"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:23.846+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s21269", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21269", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21269", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:23.879+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21599")), List(TermAppl("s21437", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x21597"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21437", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21437", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x21597"),TermAppl("s21437", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21597"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:23.914+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21767")), List(TermAppl("s21605", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x21765"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21605", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21605", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x21765"),TermAppl("s21605", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21765"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:23.934+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21935")), List(TermAppl("s21773", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x21933"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21773", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21773", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x21933"),TermAppl("s21773", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21933"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:23.961+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22103")), List(TermAppl("s21941", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x22101"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21941", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21941", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x22101"),TermAppl("s21941", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22101"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:23.976+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22271")), List(TermAppl("s22109", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x22269"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22109", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22109", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x22269"),TermAppl("s22109", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22269"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:24.04+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22439")), List(TermAppl("s22277", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x22437"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22277", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22277", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x22437"),TermAppl("s22277", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22437"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:24.058+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s22445", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22445", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22445", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:24.176+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22775")), List(TermAppl("s22613", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x22773"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22613", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22613", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x22773"),TermAppl("s22613", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22773"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:24.192+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s22781", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x22939"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22781", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22781", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\671\329\n")
-----------------------------------
===================================
2016-12-13T20:45:24.213+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23111")), List(TermAppl("s22949", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x23109"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22949", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22949", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23109"),TermAppl("s22949", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23109"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:24.227+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23279")), List(TermAppl("s23117", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x23277"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23117", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23117", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23277"),TermAppl("s23117", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23277"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:24.252+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23447")), List(TermAppl("s23285", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x23445"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23285", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23285", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23445"),TermAppl("s23285", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23445"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:24.293+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23615")), List(TermAppl("s23453", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x23613"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23453", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23453", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23613"),TermAppl("s23453", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23613"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:24.323+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23783")), List(TermAppl("s23621", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x23781"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23621", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23621", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23781"),TermAppl("s23621", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23781"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:24.366+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s23789", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x23947"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23789", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23789", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:24.384+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24119")), List(TermAppl("s23957", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24117"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23957", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23957", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24117"),TermAppl("s23957", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24117"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:24.401+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24287")), List(TermAppl("s24125", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24285"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24125", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24125", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24285"),TermAppl("s24125", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24285"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:24.427+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24455")), List(TermAppl("s24293", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24453"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24293", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24293", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24453"),TermAppl("s24293", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24453"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:24.474+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24623")), List(TermAppl("s24461", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24621"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24461", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24461", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24621"),TermAppl("s24461", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24621"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:24.517+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24791")), List(TermAppl("s24629", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24789"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24629", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24629", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24789"),TermAppl("s24629", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24789"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:24.533+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24959")), List(TermAppl("s24797", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x24957"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24797", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24797", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x24957"),TermAppl("s24797", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24957"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:24.562+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25127")), List(TermAppl("s24965", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x25125"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s24965", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24965", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x25125"),TermAppl("s24965", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25125"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:24.59+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25295")), List(TermAppl("s25133", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x25293"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25133", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25133", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x25293"),TermAppl("s25133", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25293"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:24.614+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s25301", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x25459"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25301", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25301", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:24.633+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s25469", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x25627"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25469", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25469", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\n")
-----------------------------------
===================================
2016-12-13T20:45:24.646+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25799")), List(TermAppl("s25637", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x25797"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25637", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25637", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x25797"),TermAppl("s25637", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25797"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:24.682+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25967")), List(TermAppl("s25805", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x25965"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25805", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25805", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x25965"),TermAppl("s25805", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25965"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:24.726+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26135")), List(TermAppl("s25973", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x26133"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25973", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25973", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x26133"),TermAppl("s25973", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26133"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:24.757+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26303")), List(TermAppl("s26141", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x26301"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26141", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26141", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x26301"),TermAppl("s26141", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26301"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:24.81+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s26309", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x26368"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26309", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26309", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),8)
-----------------------------------
===================================
2016-12-13T20:45:24.832+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26639")), List(TermAppl("s26477", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x26637"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26477", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26477", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x26637"),TermAppl("s26477", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26637"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:24.85+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26807")), List(TermAppl("s26645", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x26805"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26645", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26645", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x26805"),TermAppl("s26645", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26805"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:24.873+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26975")), List(TermAppl("s26813", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x26973"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26813", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26813", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x26973"),TermAppl("s26813", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26973"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:24.886+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27143")), List(TermAppl("s26981", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27141"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s26981", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26981", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27141"),TermAppl("s26981", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27141"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:24.95+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27311")), List(TermAppl("s27149", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27309"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27149", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27149", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27309"),TermAppl("s27149", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27309"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:24.968+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27479")), List(TermAppl("s27317", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27477"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27317", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27317", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27477"),TermAppl("s27317", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27477"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:25.034+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27647")), List(TermAppl("s27485", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27645"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27485", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27485", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27645"),TermAppl("s27485", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27645"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:25.055+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27815")), List(TermAppl("s27653", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27813"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27653", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27653", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27813"),TermAppl("s27653", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27813"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:25.077+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27983")), List(TermAppl("s27821", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x27981"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27821", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27821", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27981"),TermAppl("s27821", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27981"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:25.092+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s27989", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x28048"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27989", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27989", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),8)
-----------------------------------
===================================
2016-12-13T20:45:25.169+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x28319")), List(TermAppl("s28157", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x28317"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28157", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28157", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28317"),TermAppl("s28157", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28317"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:25.191+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x28487")), List(TermAppl("s28325", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x28485"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28325", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28325", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28485"),TermAppl("s28325", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28485"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:25.231+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x28655")), List(TermAppl("s28493", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x28653"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28493", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28493", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28653"),TermAppl("s28493", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28653"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:25.262+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x28823")), List(TermAppl("s28661", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x28821"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28661", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28661", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28821"),TermAppl("s28661", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28821"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:25.305+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x28991")), List(TermAppl("s28829", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x28989"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28829", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28829", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28989"),TermAppl("s28829", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28989"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:25.333+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29159")), List(TermAppl("s28997", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29157"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28997", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28997", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29157"),TermAppl("s28997", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29157"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:25.441+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29327")), List(TermAppl("s29165", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29325"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s29165", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29165", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29325"),TermAppl("s29165", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29325"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:25.48+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29495")), List(TermAppl("s29333", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29493"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s29333", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29333", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29493"),TermAppl("s29333", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29493"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:25.512+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29663")), List(TermAppl("s29501", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29661"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s29501", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29501", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29661"),TermAppl("s29501", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29661"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:25.562+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29831")), List(TermAppl("s29669", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29829"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s29669", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29669", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29829"),TermAppl("s29669", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29829"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:25.589+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29999")), List(TermAppl("s29837", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x29997"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s29837", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29837", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x29997"),TermAppl("s29837", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29997"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:25.606+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x30167")), List(TermAppl("s30005", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x30165"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30005", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30005", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x30165"),TermAppl("s30005", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x30165"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:25.632+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x30335")), List(TermAppl("s30173", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x30333"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30173", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30173", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x30333"),TermAppl("s30173", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x30333"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),chr)
-----------------------------------
===================================
2016-12-13T20:45:25.646+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x30503")), List(TermAppl("s30341", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x30501"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30341", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30341", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x30501"),TermAppl("s30341", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x30501"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:25.667+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s30509", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x30667"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30509", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30509", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:25.693+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s30677", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x30835"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30677", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30677", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\367")
-----------------------------------
===================================
2016-12-13T20:45:25.711+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s30845", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x30904"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s30845", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30845", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),4)
-----------------------------------
===================================
2016-12-13T20:45:25.761+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x31175")), List(TermAppl("s31013", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x31173"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31013", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31013", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x31173"),TermAppl("s31013", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31173"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:25.782+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x31343")), List(TermAppl("s31181", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x31341"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31181", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31181", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x31341"),TermAppl("s31181", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31341"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar)
-----------------------------------
===================================
2016-12-13T20:45:25.822+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x31511")), List(TermAppl("s31349", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x31509"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31349", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31349", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x31509"),TermAppl("s31349", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31509"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:25.841+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s31517", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x31675"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31517", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31517", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"\n")
-----------------------------------
===================================
2016-12-13T20:45:25.86+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x31847")), List(TermAppl("s31685", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x31845"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31685", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31685", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x31845"),TermAppl("s31685", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31845"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:25.877+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s31853", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x31912"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31853", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31853", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),6)
-----------------------------------
===================================
2016-12-13T20:45:25.91+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x32183")), List(TermAppl("s32021", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x32181"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32021", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32021", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x32181"),TermAppl("s32021", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x32181"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:25.955+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x32351")), List(TermAppl("s32189", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x32349"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32189", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32189", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x32349"),TermAppl("s32189", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x32349"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:26.018+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x32519")), List(TermAppl("s32357", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x32517"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32357", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32357", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x32517"),TermAppl("s32357", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x32517"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:26.039+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x32687")), List(TermAppl("s32525", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x32685"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32525", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32525", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x32685"),TermAppl("s32525", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x32685"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:26.08+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s32693", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32693", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32693", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:26.107+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x33023")), List(TermAppl("s32861", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x33021"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32861", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32861", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33021"),TermAppl("s32861", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33021"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:26.178+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x33191")), List(TermAppl("s33029", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x33189"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33029", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33029", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33189"),TermAppl("s33029", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33189"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:26.209+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x33359")), List(TermAppl("s33197", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x33357"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33197", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33197", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33357"),TermAppl("s33197", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33357"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:26.223+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x33527")), List(TermAppl("s33365", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x33525"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33365", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33365", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33525"),TermAppl("s33365", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33525"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:26.238+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s33533", List())), State(TermAppl("Mod", List(TermAppl("Int", List(Var("x33592"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33533", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33533", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),9)
-----------------------------------
===================================
2016-12-13T20:45:26.26+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x33863")), List(TermAppl("s33701", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x33861"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33701", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33701", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33861"),TermAppl("s33701", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33861"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:26.325+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34031")), List(TermAppl("s33869", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34029"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33869", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33869", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34029"),TermAppl("s33869", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34029"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:26.444+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34199")), List(TermAppl("s34037", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34197"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34037", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34037", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34197"),TermAppl("s34037", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34197"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),concat)
-----------------------------------
===================================
2016-12-13T20:45:26.537+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34367")), List(TermAppl("s34205", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34365"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34205", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34205", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34365"),TermAppl("s34205", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34365"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:26.654+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34535")), List(TermAppl("s34373", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34533"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34373", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34373", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34533"),TermAppl("s34373", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34533"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush)
-----------------------------------
===================================
2016-12-13T20:45:26.672+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34703")), List(TermAppl("s34541", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34701"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34541", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34541", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34701"),TermAppl("s34541", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34701"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:26.784+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34871")), List(TermAppl("s34709", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x34869"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34709", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34709", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34869"),TermAppl("s34709", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34869"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:26.845+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35039")), List(TermAppl("s34877", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35037"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34877", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34877", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35037"),TermAppl("s34877", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35037"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),substring)
-----------------------------------
===================================
2016-12-13T20:45:26.894+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35207")), List(TermAppl("s35045", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35205"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35045", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35045", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35205"),TermAppl("s35045", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35205"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not)
-----------------------------------
===================================
2016-12-13T20:45:26.951+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35375")), List(TermAppl("s35213", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35373"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35213", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35213", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35373"),TermAppl("s35213", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35373"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:26.996+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35543")), List(TermAppl("s35381", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35541"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35381", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35381", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35541"),TermAppl("s35381", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35541"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size)
-----------------------------------
===================================
2016-12-13T20:45:27.068+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35711")), List(TermAppl("s35549", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35709"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35549", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35549", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35709"),TermAppl("s35549", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35709"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:27.1+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35879")), List(TermAppl("s35717", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x35877"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35717", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35717", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35877"),TermAppl("s35717", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35877"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:45:27.241+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s35885", List())), State(TermAppl("Mod", List(TermAppl("NilExp", List()))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35885", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35885", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),nil)
-----------------------------------
===================================
2016-12-13T20:45:27.26+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x36215")), List(TermAppl("s36053", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x36213"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36053", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36053", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x36213"),TermAppl("s36053", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36213"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit)
-----------------------------------
===================================
2016-12-13T20:45:27.3+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x36383")), List(TermAppl("s36221", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x36381"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36221", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36221", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x36381"),TermAppl("s36221", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36381"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:27.33+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s36389", List())), State(TermAppl("Mod", List(TermAppl("String", List(Var("x36547"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36389", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36389", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),"")
-----------------------------------
===================================
2016-12-13T20:45:27.353+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x36719")), List(TermAppl("s36557", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x36717"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36557", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36557", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x36717"),TermAppl("s36557", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36717"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord)
-----------------------------------
===================================
2016-12-13T20:45:27.394+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x36887")), List(TermAppl("s36725", List())), State(TermAppl("Mod", List(TermAppl("Var", List(Var("x36885"))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36725", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36725", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x36885"),TermAppl("s36725", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36885"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print)
-----------------------------------
===================================
2016-12-13T20:46:26.299+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s257579", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s257597", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s257579", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s257579", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s257597", List()),Label('P'),TermAppl("s257579", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-13T20:46:26.336+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s257784", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s257802", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s257784", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s257784", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s257802", List()),Label('P'),TermAppl("s257784", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-13T20:47:01.35+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1292458", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1292476", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1292458", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1292458", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1292476", List()),Label('P'),TermAppl("s1292458", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-13T20:47:32.676+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s131631", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x135314"), TermAppl("Var", List(Var("x135861"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x134483"))), TermAppl("Cons", List(TermAppl("Times", List(TermAppl("Int", List(Var("x136446"))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x136804"))))))), TermAppl("Nil", List()))))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x134126"))), TermAppl("Var", List(Var("x135291"))))))))),List(CDistinct(Declarations(TermAppl("s131813", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s131631", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131631", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x134126"),TermAppl("s131631", List())), CGDirectEdge(TermAppl("s131813", List()),Label('P'),TermAppl("s131631", List())), CGRef(SymbolicName("Var", "x135291"),TermAppl("s131631", List())), CGDecl(TermAppl("s131813", List()),SymbolicName("Var", "x135314")), CGRef(SymbolicName("Var", "x135861"),TermAppl("s131631", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x135314"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x134126"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x135291"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x135861"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
  var m := exit
 in
  7;
  9 * - 9
end + (substring >= substring))
-----------------------------------
===================================
2016-12-13T20:47:44.015+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s486594", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s486612", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s486594", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s486594", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s486612", List()),Label('P'),TermAppl("s486594", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-14T09:01:14.22+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s632740", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x640059"))), TermAppl("Var", List(Var("x639593"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x638024"))), TermAppl("Var", List(Var("x639895"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s632740", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s632740", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x638024"),TermAppl("s632740", List())), CGRef(SymbolicName("Var", "x639593"),TermAppl("s632740", List())), CGRef(SymbolicName("Var", "x639895"),TermAppl("s632740", List())), CGRef(SymbolicName("Var", "x640059"),TermAppl("s632740", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x638024"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x639593"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x639895"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x640059"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush > flush | ord > size)
-----------------------------------
===================================
2016-12-14T09:01:18.059+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x742348")), List(TermAppl("s739981", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x742182"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x742346"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s739999", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s739981", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s739981", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s739999", List()),Label('P'),TermAppl("s739981", List())), CGRef(SymbolicName("Var", "x742182"),TermAppl("s739999", List())), CGRef(SymbolicName("Var", "x742346"),TermAppl("s739999", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x742182"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x742346"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  flush;
  print
end)
-----------------------------------
===================================
2016-12-14T09:01:43.824+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1422007")), List(TermAppl("s1421997", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x1427141"))), TermAppl("And", List(TermAppl("Var", List(Var("x1427300"))), TermAppl("Var", List(Var("x1425964"))))), TermAppl("Plus", List(TermAppl("Int", List(Var("x1426885"))), TermAppl("Call", List(Var("x1423924"), TermAppl("Cons", List(TermAppl("Int", List(Var("x1426381"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s1421997", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1421997", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1423924"),TermAppl("s1421997", List())), CGRef(SymbolicName("Var", "x1425964"),TermAppl("s1421997", List())), CGRef(SymbolicName("Type", "x1427141"),TermAppl("s1421997", List())), CGRef(SymbolicName("Var", "x1427300"),TermAppl("s1421997", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1423924"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x1425964"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x1427141"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x1427300"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),int[size & ord] of 5 + not(7))
-----------------------------------
===================================
2016-12-14T09:02:07.408+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s2033487", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x2035527"), TermAppl("Tid", List(Var("x2035760"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x2036158"), TermAppl("Tid", List(Var("x2036373"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x2036141"), TermAppl("Tid", List(Var("x2036154"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x2036360"), TermAppl("Tid", List(Var("x2036608"))))), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("While", List(TermAppl("Call", List(Var("x2036218"), TermAppl("Cons", List(TermAppl("String", List(Var("x2036581"))), TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x2035812"), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s2033669", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2033487", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2033487", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2033669", List()),Label('P'),TermAppl("s2033487", List())), CGDecl(TermAppl("s2033669", List()),SymbolicName("Type", "x2035527")), NewScope(Var("s'")), CGDirectEdge(TermAppl("s2035565", List()),Label('P'),TermAppl("s2033487", List())), CGDecl(TermAppl("s2035565", List()),ConcreteName("Loop", "", 2035569)), CGRef(SymbolicName("Type", "x2035760"),TermAppl("s2033669", List())), CGRef(SymbolicName("Var", "x2035812"),TermAppl("s2035565", List())), CGDecl(TermAppl("s2033669", List()),SymbolicName("Type", "x2036141")), CGRef(SymbolicName("Type", "x2036154"),TermAppl("s2033669", List())), CGDecl(TermAppl("s2033669", List()),SymbolicName("Type", "x2036158")), CGRef(SymbolicName("Var", "x2036218"),TermAppl("s2033487", List())), CGDecl(TermAppl("s2033669", List()),SymbolicName("Type", "x2036360")), CGRef(SymbolicName("Type", "x2036373"),TermAppl("s2033669", List())), CGRef(SymbolicName("Type", "x2036608"),TermAppl("s2033669", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x2036141"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x2036360"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x2036158"), Var("x2036375")), Binding(SymbolicName("Type", "x2035527"), Var("x2036375")), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2036218"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x2036608"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x2035812"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x2036154"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x2036373"), SymbolicName("Type", "x2035527")), Tuple2(SymbolicName("Type", "x2035760"), SymbolicName("Type", "x2035527")))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type o = n1
  type I = string
  type Li_X = int
 in
end <= (while ord("") do
  flush()))
-----------------------------------
===================================
2016-12-14T09:02:29.072+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s2518918", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Or", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x2525558"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s2518936", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2518918", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2518918", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2518936", List()),Label('P'),TermAppl("s2518918", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  nil | nil;
  ""
end)
-----------------------------------
===================================
2016-12-14T09:02:30.16+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2554659")), List(TermAppl("s2554649", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x2554818"))), TermAppl("And", List(TermAppl("Var", List(Var("x2558490"))), TermAppl("Var", List(Var("x2557416"))))), TermAppl("String", List(Var("x2558324"))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2554649", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2554649", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x2554818"),TermAppl("s2554649", List())), CGRef(SymbolicName("Var", "x2557416"),TermAppl("s2554649", List())), CGRef(SymbolicName("Var", "x2558490"),TermAppl("s2554649", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x2554818"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x2557416"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2558490"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),string[size & ord] of "%")
-----------------------------------
===================================
2016-12-14T09:43:04.131+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x134778")), List(TermAppl("s129951", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x132570"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132408"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x132936"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x134940"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x134776"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s129969", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s129951", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129951", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s129969", List()),Label('P'),TermAppl("s129951", List())), CGRef(SymbolicName("Var", "x132408"),TermAppl("s129969", List())), CGRef(SymbolicName("Var", "x132936"),TermAppl("s129969", List())), CGRef(SymbolicName("Var", "x134776"),TermAppl("s129969", List())), CGRef(SymbolicName("Var", "x134940"),TermAppl("s129969", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x132408"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x132936"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x134776"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x134940"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  ord;
  nil;
  getchar;
  ord;
  size
end)
-----------------------------------
===================================
2016-12-14T09:49:21.732+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1058022", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x1060580"))), TermAppl("Int", List(Var("x1060180"))))), TermAppl("Call", List(Var("x1058239"), TermAppl("Cons", List(TermAppl("Int", List(Var("x1060751"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s1058022", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1058022", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s1058057", List()),Label('P'),TermAppl("s1058022", List())), CGDecl(TermAppl("s1058057", List()),ConcreteName("Loop", "", 1058061)), CGRef(SymbolicName("Var", "x1058239"),TermAppl("s1058057", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1058239"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),while 2 <= 66 do
  exit(50))
-----------------------------------
===================================
2016-12-14T09:49:27.4+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s1060867", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Times", List(TermAppl("Int", List(Var("x1065583"))), TermAppl("Int", List(Var("x1063455"))))), TermAppl("Times", List(TermAppl("Int", List(Var("x1064753"))), TermAppl("And", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x1069946"))), TermAppl("Var", List(Var("x1070110"))))), TermAppl("Int", List(Var("x1067632"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1060867", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1060867", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1069946"),TermAppl("s1060867", List())), CGRef(SymbolicName("Var", "x1070110"),TermAppl("s1060867", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1069946"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1070110"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),35 * 07 >= 9 * (size < size & 82))
-----------------------------------
===================================
2016-12-14T09:50:13.539+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1185977")), List(TermAppl("s1185432", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x1185793"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1185975"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s1185450", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1185432", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1185432", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1185450", List()),Label('P'),TermAppl("s1185432", List())), CGRef(SymbolicName("Var", "x1185793"),TermAppl("s1185450", List())), CGRef(SymbolicName("Var", "x1185975"),TermAppl("s1185450", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1185793"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x1185975"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  not;
  concat
end)
-----------------------------------
===================================
2016-12-14T09:51:26.839+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1343895")), List(TermAppl("s1343864", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x1349160"))), TermAppl("Var", List(Var("x1354735"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x1355038"))), TermAppl("Var", List(Var("x1354294"))))), TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x1355564"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1357702"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1358616"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1343864", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1343864", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1349160"),TermAppl("s1343864", List())), CGRef(SymbolicName("Var", "x1354294"),TermAppl("s1343864", List())), CGRef(SymbolicName("Var", "x1354735"),TermAppl("s1343864", List())), CGRef(SymbolicName("Var", "x1355038"),TermAppl("s1343864", List())), CGRef(SymbolicName("Var", "x1357702"),TermAppl("s1343864", List())), CGRef(SymbolicName("Var", "x1358616"),TermAppl("s1343864", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1357702"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x1355038"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x1349160"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1358616"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1354294"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x1354735"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),if size <= size then
  print | print
else
  nil = (
    (
      "\305\"";
      exit;
      size;
      nil
    )
  ))
-----------------------------------
===================================
2016-12-14T09:57:21.701+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2159402")), List(TermAppl("s2158839", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x2159437"), TermAppl("Tid", List(Var("x2159450"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x2159416"), TermAppl("Tid", List(Var("x2159429"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x2159117"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2159400"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s2158857", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2158839", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2158839", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2158857", List()),Label('P'),TermAppl("s2158839", List())), CGRef(SymbolicName("Var", "x2159400"),TermAppl("s2158857", List())), CGDecl(TermAppl("s2158857", List()),SymbolicName("Type", "x2159416")), CGRef(SymbolicName("Type", "x2159429"),TermAppl("s2158857", List())), CGDecl(TermAppl("s2158857", List()),SymbolicName("Type", "x2159437")), CGRef(SymbolicName("Type", "x2159450"),TermAppl("s2158857", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x2159416"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x2159437"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2159400"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x2159429"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x2159450"), SymbolicName("Type", "x2159416")))),SubtypeRelation(List()),List())),let
  type fGu1S7_ = n1
  type n1 = int
 in
  0;
  substring
end)
-----------------------------------
===================================
2016-12-14T09:57:31.683+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2177801", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s2177819", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2177801", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2177801", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2177819", List()),Label('P'),TermAppl("s2177801", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-14T09:58:09.664+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2277396")), List(TermAppl("s2275375", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x2277394"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s2275393", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2275375", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2275375", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2275393", List()),Label('P'),TermAppl("s2275375", List())), CGRef(SymbolicName("Var", "x2277394"),TermAppl("s2275393", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2277394"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  substring
end)
-----------------------------------
===================================
2016-12-14T09:59:45.927+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2487454")), List(TermAppl("s2484467", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x2486924"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2487088"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2487270"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2487452"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s2484485", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2484467", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2484467", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2484485", List()),Label('P'),TermAppl("s2484467", List())), CGRef(SymbolicName("Var", "x2486924"),TermAppl("s2484485", List())), CGRef(SymbolicName("Var", "x2487088"),TermAppl("s2484485", List())), CGRef(SymbolicName("Var", "x2487270"),TermAppl("s2484485", List())), CGRef(SymbolicName("Var", "x2487452"),TermAppl("s2484485", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2486924"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2487088"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x2487270"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x2487452"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  concat;
  chr;
  concat
end)
-----------------------------------
===================================
2016-12-14T10:02:09.457+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2821912")), List(TermAppl("s2821902", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x2822071"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x2827218"))), TermAppl("Var", List(Var("x2826752"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x2824881"))), TermAppl("Var", List(Var("x2827054"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2821902", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2821902", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x2822071"),TermAppl("s2821902", List())), CGRef(SymbolicName("Var", "x2824881"),TermAppl("s2821902", List())), CGRef(SymbolicName("Var", "x2826752"),TermAppl("s2821902", List())), CGRef(SymbolicName("Var", "x2827054"),TermAppl("s2821902", List())), CGRef(SymbolicName("Var", "x2827218"),TermAppl("s2821902", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x2822071"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x2824881"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x2826752"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2827054"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x2827218"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),int[getchar = getchar] of flush > flush)
-----------------------------------
===================================
2016-12-14T10:07:03.46+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3483712", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x3486520"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3486704"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x3487068"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x3486358"))))))),List(CDistinct(Declarations(TermAppl("s3483894", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3483712", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3483712", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3483894", List()),Label('P'),TermAppl("s3483712", List())), CGRef(SymbolicName("Var", "x3486358"),TermAppl("s3483712", List())), CGRef(SymbolicName("Var", "x3486704"),TermAppl("s3483894", List())), CGRef(SymbolicName("Var", "x3487068"),TermAppl("s3483894", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3486358"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x3486704"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x3487068"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  flush;
  (
    size
  )
end = ord)
-----------------------------------
===================================
2016-12-14T10:08:59.544+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3742329")), List(TermAppl("s3733519", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x3733757"), TermAppl("Var", List(Var("x3742563"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x3742586"), TermAppl("Var", List(Var("x3742745"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("String", List(Var("x3738101"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3742327"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s3733537", List()), "All")), CDistinct(Declarations(TermAppl("s3733710", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3733519", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3733519", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s3733710", List()),Label('P'),TermAppl("s3733519", List())), CGDecl(TermAppl("s3733710", List()),SymbolicName("Var", "x3733757")), CGDirectEdge(TermAppl("s3733537", List()),Label('P'),TermAppl("s3733710", List())), CGRef(SymbolicName("Var", "x3742327"),TermAppl("s3733537", List())), CGRef(SymbolicName("Var", "x3742563"),TermAppl("s3733519", List())), CGDecl(TermAppl("s3733537", List()),SymbolicName("Var", "x3742586")), CGRef(SymbolicName("Var", "x3742745"),TermAppl("s3733710", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x3742586"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3733757"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3742327"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x3742563"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3742745"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  var OD := chr
  var nK := print
 in
  "";
  ord
end)
-----------------------------------
===================================
2016-12-14T10:11:54.282+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s4182678", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x4187388"))), TermAppl("Var", List(Var("x4187746"))))), TermAppl("Int", List(Var("x4184940"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x4187973"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4182678", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4182678", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4187388"),TermAppl("s4182678", List())), CGRef(SymbolicName("Var", "x4187746"),TermAppl("s4182678", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4187388"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x4187746"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),((size > ord) >= 16) + - 2)
-----------------------------------
===================================
2016-12-14T10:17:19.96+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s4780301", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s4780319", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4780301", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4780301", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s4780319", List()),Label('P'),TermAppl("s4780301", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-14T10:17:51.716+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s4830454", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x4836993"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x4832574"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4835171"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s4830472", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4830454", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4830454", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s4830472", List()),Label('P'),TermAppl("s4830454", List())), CGRef(SymbolicName("Var", "x4835171"),TermAppl("s4830472", List())), CGRef(SymbolicName("Var", "x4836993"),TermAppl("s4830472", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4835171"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x4836993"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  7;
  concat;
  nil
end)
-----------------------------------
===================================
2016-12-14T10:18:23.142+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s4888610", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x4900309"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4899175"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4900655"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4902933"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4905357"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4905193"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4905539"))), TermAppl("Cons", List(TermAppl("String", List(Var("x4905719"))), TermAppl("Nil", List()))))))))))))))))))), TermAppl("String", List(Var("x4894262"))))), TermAppl("Lt", List(TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x4900372"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4888610", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4888610", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4899175"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4900309"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4900655"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4902933"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4905193"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4905357"),TermAppl("s4888610", List())), CGRef(SymbolicName("Var", "x4905539"),TermAppl("s4888610", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4900309"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x4905193"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x4900655"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x4905539"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x4899175"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4902933"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4905357"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),((
  substring;
  not;
  exit;
  not;
  print;
  substring;
  concat;
  ""
) < "\"\433") + ((nil > nil) < - 966))
-----------------------------------
===================================
2016-12-14T10:27:29.379+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s5758300", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x5765678"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x5764140"))))), TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x5764890"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x5765514"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x5761691"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5758300", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5758300", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x5761691"),TermAppl("s5758300", List())), CGRef(SymbolicName("Var", "x5764140"),TermAppl("s5758300", List())), CGRef(SymbolicName("Var", "x5765514"),TermAppl("s5758300", List())), CGRef(SymbolicName("Var", "x5765678"),TermAppl("s5758300", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x5761691"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x5764140"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x5765514"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x5765678"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),((
  exit
) < exit) - ((
  "E\^C\^Y\ \\"";
  substring
) > substring))
-----------------------------------
===================================
2016-12-14T10:28:18.049+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s5812127", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x5818940"), TermAppl("Var", List(Var("x5819661"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x5821349"), TermAppl("Tid", List(Var("x5821362"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x5821370"), TermAppl("Tid", List(Var("x5821408"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x5821382"), TermAppl("Tid", List(Var("x5821395"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("String", List(Var("x5817167"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x5815439"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x5818917"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s5812145", List()), "All")), CDistinct(Declarations(TermAppl("s5812336", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5812127", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5812127", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s5812336", List()),Label('P'),TermAppl("s5812127", List())), CGDirectEdge(TermAppl("s5812145", List()),Label('P'),TermAppl("s5812336", List())), CGRef(SymbolicName("Var", "x5815439"),TermAppl("s5812145", List())), CGRef(SymbolicName("Var", "x5818917"),TermAppl("s5812145", List())), CGDecl(TermAppl("s5812336", List()),SymbolicName("Var", "x5818940")), CGRef(SymbolicName("Var", "x5819661"),TermAppl("s5812127", List())), CGDecl(TermAppl("s5812145", List()),SymbolicName("Type", "x5821349")), CGRef(SymbolicName("Type", "x5821362"),TermAppl("s5812145", List())), CGDecl(TermAppl("s5812145", List()),SymbolicName("Type", "x5821370")), CGDecl(TermAppl("s5812145", List()),SymbolicName("Type", "x5821382")), CGRef(SymbolicName("Type", "x5821395"),TermAppl("s5812145", List())), CGRef(SymbolicName("Type", "x5821408"),TermAppl("s5812145", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x5821370"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x5821382"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x5821349"), Var("x5821364")), Binding(SymbolicName("Var", "x5818940"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x5821408"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x5818917"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x5821395"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x5815439"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x5819661"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x5821362"), SymbolicName("Type", "x5821349")))),SubtypeRelation(List()),List())),let
  var a := exit
  type n1 = n1
  type d_D = int
  type V8X = string
 in
  "";
  chr;
  ord;
  nil
end)
-----------------------------------
===================================
2016-12-14T10:57:42.869+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s101", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("IfThen", List(TermAppl("Int", List(Var("x4904"))), TermAppl("Call", List(Var("x4533"), TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4533"),TermAppl("s101", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4533"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(
) > if 0 then
  flush())
-----------------------------------
===================================
2016-12-14T11:05:37.86+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x788403")), List(TermAppl("s788372", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Lt", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x797687"), TermAppl("Var", List(Var("x800153"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x801287"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x798547"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x797287"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x795606"))), TermAppl("Var", List(Var("x794776"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x801350"))))))))),List(CDistinct(Declarations(TermAppl("s797309", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s788372", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s788372", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x794776"),TermAppl("s788372", List())), CGRef(SymbolicName("Var", "x795606"),TermAppl("s788372", List())), CGRef(SymbolicName("Var", "x797287"),TermAppl("s788372", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s797309", List()),Label('P'),TermAppl("s788372", List())), CGDecl(TermAppl("s797309", List()),SymbolicName("Var", "x797687")), CGRef(SymbolicName("Var", "x798547"),TermAppl("s797309", List())), CGRef(SymbolicName("Var", "x800153"),TermAppl("s788372", List())), CGRef(SymbolicName("Var", "x801287"),TermAppl("s797309", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x797687"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x798547"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x801287"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x795606"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x800153"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x797287"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x794776"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if let
  var m8_ := not
 in
  chr;
  print
end < print then
  flush > flush
else
  - 158)
-----------------------------------
===================================
2016-12-14T11:08:42.956+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1111641", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x1111876"), TermAppl("Tid", List(Var("x1111889"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1111872"), TermAppl("Tid", List(Var("x1111927"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1111897"), TermAppl("Tid", List(Var("x1111910"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1111977"), TermAppl("Tid", List(Var("x1111990"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1111939"), TermAppl("Tid", List(Var("x1111960"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1111943"), TermAppl("Tid", List(Var("x1111973"))))), TermAppl("Nil", List()))))))))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1111659", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1111641", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1111641", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1111659", List()),Label('P'),TermAppl("s1111641", List())), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111872")), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111876")), CGRef(SymbolicName("Type", "x1111889"),TermAppl("s1111659", List())), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111897")), CGRef(SymbolicName("Type", "x1111910"),TermAppl("s1111659", List())), CGRef(SymbolicName("Type", "x1111927"),TermAppl("s1111659", List())), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111939")), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111943")), CGRef(SymbolicName("Type", "x1111960"),TermAppl("s1111659", List())), CGRef(SymbolicName("Type", "x1111973"),TermAppl("s1111659", List())), CGDecl(TermAppl("s1111659", List()),SymbolicName("Type", "x1111977")), CGRef(SymbolicName("Type", "x1111990"),TermAppl("s1111659", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x1111876"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x1111943"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x1111897"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x1111939"), Var("x1111992")), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x1111872"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x1111977"), Var("x1111992")), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x1111927"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x1111973"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x1111910"), SymbolicName("Type", "x1111872")), Tuple2(SymbolicName("Type", "x1111960"), SymbolicName("Type", "x1111939")), Tuple2(SymbolicName("Type", "x1111990"), SymbolicName("Type", "x1111939")), Tuple2(SymbolicName("Type", "x1111889"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type M_ = string
  type n2 = string
  type Y = n2
  type Z__6 = n1
  type n1 = n1
  type z = int
 in
end)
-----------------------------------
===================================
2016-12-14T11:14:06.68+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s1619565", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Or", List(TermAppl("Var", List(Var("x1630030"))), TermAppl("Var", List(Var("x1630194"))))), TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x1628217"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x1627563"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1619565", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1619565", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1627563"),TermAppl("s1619565", List())), CGRef(SymbolicName("Var", "x1628217"),TermAppl("s1619565", List())), CGRef(SymbolicName("Var", "x1630030"),TermAppl("s1619565", List())), CGRef(SymbolicName("Var", "x1630194"),TermAppl("s1619565", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1627563"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x1628217"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x1630030"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x1630194"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat | concat) >= ((
  chr
) | chr))
-----------------------------------
===================================
2016-12-14T11:15:22.159+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s1772673", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Or", List(TermAppl("Var", List(Var("x1779396"))), TermAppl("Var", List(Var("x1779092"))))), TermAppl("Leq", List(TermAppl("String", List(Var("x1777517"))), TermAppl("String", List(Var("x1779558"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1772673", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1772673", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1779092"),TermAppl("s1772673", List())), CGRef(SymbolicName("Var", "x1779396"),TermAppl("s1772673", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1779092"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1779396"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(size | size) > ("\
 		  	\c" <= "\^Z\123"))
-----------------------------------
===================================
2016-12-14T11:18:29.589+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2084067")), List(TermAppl("s2083522", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x2083883"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2084065"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s2083540", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2083522", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2083522", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2083540", List()),Label('P'),TermAppl("s2083522", List())), CGRef(SymbolicName("Var", "x2083883"),TermAppl("s2083540", List())), CGRef(SymbolicName("Var", "x2084065"),TermAppl("s2083540", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2083883"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2084065"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  exit
end)
-----------------------------------
===================================
2016-12-15T10:47:25.655+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for X := (size >= size) + not(8) to 78 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:42.092+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for x := (size >= size) + not(64) to 1 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:43.132+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for v := (size >= size) + not(24) to 3261 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:44.476+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for JW := (size >= size) + not(00) to 1 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:56.969+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for V := (size >= size) + not(29) to 6 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:56.996+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for s1z := (size >= size) + not(4) to 37 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:48:57.044+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2601172", List())), State(TermAppl("Mod", List(As(Var("x2601214"),TermAppl("For", List(TermAppl("Var", List(Var("x2601215"))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x2608591"))), TermAppl("Var", List(Var("x2607005"))))), TermAppl("Call", List(Var("x2608648"), TermAppl("Cons", List(TermAppl("Int", List(Var("x2608832"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x2607068"))), TermAppl("Assign", List(TermAppl("Var", List(Var("x2604469"))), TermAppl("Var", List(Var("x2608233")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2601172", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2601212", List()),Label('P'),TermAppl("s2601172", List())), CGDecl(TermAppl("s2601212", List()),SymbolicName("Var", "x2601215")), CGDecl(TermAppl("s2601212", List()),SymbolicName("Loop", "n2601219")), CGRef(SymbolicName("Var", "x2604469"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2607005"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608233"),TermAppl("s2601212", List())), CGRef(SymbolicName("Var", "x2608591"),TermAppl("s2601172", List())), CGRef(SymbolicName("Var", "x2608648"),TermAppl("s2601172", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x2601215"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2608648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x2608591"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2608233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2604469"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2607005"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for r := (size >= size) + not(15535) to 3 do
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:50:13.323+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s81321", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Gt", List(TermAppl("Var", List(Var("x86167"))), TermAppl("Var", List(Var("x88039"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s81321", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s81321", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x86167"),TermAppl("s81321", List())), CGRef(SymbolicName("Var", "x88039"),TermAppl("s81321", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x86167"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x88039"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(nil > nil) > (getchar > getchar))
-----------------------------------
===================================
2016-12-15T10:50:24.396+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s319166", List())), State(TermAppl("Mod", List(As(Var("x319208"),TermAppl("For", List(TermAppl("Var", List(Var("x319209"))), TermAppl("Or", List(TermAppl("Var", List(Var("x321854"))), TermAppl("Var", List(Var("x322646"))))), TermAppl("Int", List(Var("x321917"))), As(Var("x322699"),TermAppl("Break", List()))))))),List(CResolve(SymbolicName("Loop", "n322700"),Var("x322701"))),List(NewScope(Var("s")), CGDecl(TermAppl("s319166", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s319166", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s319206", List()),Label('P'),TermAppl("s319166", List())), CGDecl(TermAppl("s319206", List()),SymbolicName("Var", "x319209")), CGDecl(TermAppl("s319206", List()),SymbolicName("Loop", "n319213")), CGRef(SymbolicName("Var", "x321854"),TermAppl("s319166", List())), CGRef(SymbolicName("Var", "x322646"),TermAppl("s319166", List())), CGRef(SymbolicName("Loop", "n322700"),TermAppl("s319206", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x319209"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x321854"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x322646"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),for n := exit | exit to 3 do
  break)
-----------------------------------
===================================
2016-12-15T10:50:40.469+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s722908", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Or", List(TermAppl("Int", List(Var("x725170"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x729955"))), TermAppl("Var", List(Var("x727618"))))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x729489"))), TermAppl("Var", List(Var("x729791"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s722908", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s722908", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x727618"),TermAppl("s722908", List())), CGRef(SymbolicName("Var", "x729489"),TermAppl("s722908", List())), CGRef(SymbolicName("Var", "x729791"),TermAppl("s722908", List())), CGRef(SymbolicName("Var", "x729955"),TermAppl("s722908", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x727618"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x729489"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x729791"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x729955"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(04 | print <> print) + (exit = exit))
-----------------------------------
===================================
2016-12-15T10:50:58.142+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s1148588", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Or", List(TermAppl("Var", List(Var("x1155743"))), TermAppl("Var", List(Var("x1155441"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x1155907"))), TermAppl("Var", List(Var("x1153872"))))))))),List(CResolve(SymbolicName("Var", "x1155907"),Var("x1155908")), CTypeOf(Var("x1155908"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s1148588", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1148588", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1153872"),TermAppl("s1148588", List())), CGRef(SymbolicName("Var", "x1155441"),TermAppl("s1148588", List())), CGRef(SymbolicName("Var", "x1155743"),TermAppl("s1148588", List())), CGRef(SymbolicName("Var", "x1155907"),TermAppl("s1148588", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1153872"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x1155441"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x1155743"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar | getchar) <= (chr <= chr))
-----------------------------------
===================================
2016-12-15T10:51:07.361+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1373979")), List(TermAppl("s1370992", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373613"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373449"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373795"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373977"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s1371010", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1370992", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1370992", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1371010", List()),Label('P'),TermAppl("s1370992", List())), CGRef(SymbolicName("Var", "x1373449"),TermAppl("s1371010", List())), CGRef(SymbolicName("Var", "x1373613"),TermAppl("s1371010", List())), CGRef(SymbolicName("Var", "x1373795"),TermAppl("s1371010", List())), CGRef(SymbolicName("Var", "x1373977"),TermAppl("s1371010", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1373449"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x1373613"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x1373795"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x1373977"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  substring;
  concat;
  substring
end)
-----------------------------------
===================================
2016-12-15T10:51:10.628+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1467310", List())), State(TermAppl("Mod", List(As(Var("x1467352"),TermAppl("For", List(TermAppl("Var", List(Var("x1467353"))), TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x1472666"))), TermAppl("Cons", List(TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Nil", List()))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x1477954"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1479011"))), TermAppl("Cons", List(TermAppl("String", List(Var("x1479839"))), TermAppl("Cons", List(As(Var("x1479894"),TermAppl("Break", List())), TermAppl("Nil", List())))))))))))))))),List(CDistinct(Declarations(TermAppl("s1468013", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1467310", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1467310", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s1467350", List()),Label('P'),TermAppl("s1467310", List())), CGDecl(TermAppl("s1467350", List()),SymbolicName("Var", "x1467353")), CGDecl(TermAppl("s1467350", List()),SymbolicName("Loop", "n1467357")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1468013", List()),Label('P'),TermAppl("s1467350", List())), CGRef(SymbolicName("Var", "x1472666"),TermAppl("s1467310", List())), CGRef(SymbolicName("Var", "x1479011"),TermAppl("s1468013", List())), CGRef(SymbolicName("Loop", "n1479895"),TermAppl("s1468013", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x1467353"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1472666"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x1479011"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Loop", "n1479895"), SymbolicName("Loop", "n1467357")))),SubtypeRelation(List()),List())),for I := nil = nil to (
  ord;
  nil & nil
) do
  let
   in
    43;
    ord;
    "\t";
    break
  end)
-----------------------------------
===================================
2016-12-15T10:51:29.514+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s2014537", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("Var", List(Var("x2022256"))), TermAppl("Var", List(Var("x2024291"))))), TermAppl("Geq", List(TermAppl("Int", List(Var("x2018574"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x2024127"))), TermAppl("Var", List(Var("x2023825"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2014537", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2014537", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2022256"),TermAppl("s2014537", List())), CGRef(SymbolicName("Var", "x2023825"),TermAppl("s2014537", List())), CGRef(SymbolicName("Var", "x2024127"),TermAppl("s2014537", List())), CGRef(SymbolicName("Var", "x2024291"),TermAppl("s2014537", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2022256"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2023825"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2024127"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2024291"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(ord & size) < (5 >= (getchar <= getchar)))
-----------------------------------
===================================
2016-12-15T10:51:57.163+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s2807972", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Int", List(Var("x2812303"))), TermAppl("Neq", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x2815071"))), TermAppl("Var", List(Var("x2815235"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x2813094"))), TermAppl("Var", List(Var("x2812240"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2807972", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2807972", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2812240"),TermAppl("s2807972", List())), CGRef(SymbolicName("Var", "x2813094"),TermAppl("s2807972", List())), CGRef(SymbolicName("Var", "x2815071"),TermAppl("s2807972", List())), CGRef(SymbolicName("Var", "x2815235"),TermAppl("s2807972", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2812240"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x2813094"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x2815071"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2815235"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),1 * ((ord <> size) <> (chr <> chr)))
-----------------------------------
===================================
2016-12-15T10:52:04.768+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s3058286", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x3058522"), TermAppl("Cons", List(TermAppl("FArg", List(Var("x3058789"), TermAppl("Tid", List(Var("x3058802"))))), TermAppl("Nil", List()))), TermAppl("Call", List(Var("x3058647"), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s3058304", List()), "All")), CDistinct(Declarations(TermAppl("s3058519", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3058286", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3058286", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3058304", List()),Label('P'),TermAppl("s3058286", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s3058519", List()),Label('P'),TermAppl("s3058304", List())), CGDecl(TermAppl("s3058304", List()),SymbolicName("Var", "x3058522")), CGRef(SymbolicName("Var", "x3058647"),TermAppl("s3058519", List())), CGDecl(TermAppl("s3058519", List()),SymbolicName("Var", "x3058789")), CGRef(SymbolicName("Type", "x3058802"),TermAppl("s3058286", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3058789"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x3058522"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3058647"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x3058802"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  function x(K : int) =
    flush()
 in
end)
-----------------------------------
===================================
2016-12-15T10:54:01.767+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s1065672", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x1070990"), TermAppl("Tid", List(Var("x1071025"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x1071012"), TermAppl("Tid", List(Var("x1071042"))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("FunDec", List(Var("x1071559"), TermAppl("Nil", List()), TermAppl("Tid", List(Var("x1071767"))), TermAppl("Var", List(Var("x1071749"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1071541"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s1065690", List()), "All")), CDistinct(Declarations(TermAppl("s1065870", List()), "All")), CDistinct(Declarations(TermAppl("s1071556", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1065672", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1065672", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s1065870", List()),Label('P'),TermAppl("s1065672", List())), CGDirectEdge(TermAppl("s1065690", List()),Label('P'),TermAppl("s1065870", List())), CGDecl(TermAppl("s1065870", List()),SymbolicName("Type", "x1070990")), CGDecl(TermAppl("s1065870", List()),SymbolicName("Type", "x1071012")), CGRef(SymbolicName("Type", "x1071025"),TermAppl("s1065870", List())), CGRef(SymbolicName("Type", "x1071042"),TermAppl("s1065870", List())), CGRef(SymbolicName("Var", "x1071541"),TermAppl("s1065690", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s1071556", List()),Label('P'),TermAppl("s1065690", List())), CGDecl(TermAppl("s1065690", List()),SymbolicName("Var", "x1071559")), CGRef(SymbolicName("Var", "x1071749"),TermAppl("s1071556", List())), CGRef(SymbolicName("Type", "x1071767"),TermAppl("s1065870", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x1071012"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x1070990"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x1071559"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x1071025"), SymbolicName("Type", "x1070990")), Tuple2(SymbolicName("Var", "x1071541"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x1071042"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x1071749"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x1071767"), SymbolicName("Type", "x1070990")))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type NG6_ = int
  function uv() : n1 =
    print
 in
  flush;
  nil
end)
-----------------------------------
