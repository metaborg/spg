module constraints-binary

language MiniJava
start symbol Program

test addition correct [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 + 21);
		}
	}
]] 0 errors

test addition left boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(true + 21);
		}
	}
]] 1 errors

test addition left array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1] + 21);
		}
	}
]] 1 errors

test addition left object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new A() + 21);
		}
	}
	
	class A {}
]] 1 errors

test addition right boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 + true);
		}
	}
]] 1 errors

test addition right array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 + new int[1]);
		}
	}
]] 1 errors

test addition right object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 + new A());
		}
	}
	
	class A {}
]] 1 errors

test subtraction correct [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 - 21);
		}
	}
]] 0 errors

test subtraction left boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(true - 21);
		}
	}
]] 1 errors

test subtraction left array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1] - 21);
		}
	}
]] 1 errors

test subtraction left object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new A() - 21);
		}
	}
	
	class A {}
]] 1 errors

test subtraction right boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 - true);
		}
	}
]] 1 errors

test subtraction right array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 - new int[1]);
		}
	}
]] 1 errors

test subtraction right object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 - new A());
		}
	}
	
	class A {}
]] 1 errors

test multiplication correct [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 * 21);
		}
	}
]] 0 errors

test multiplication left boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(true * 21);
		}
	}
]] 1 errors

test multiplication left array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1] * 21);
		}
	}
]] 1 errors

test multiplication left object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new A() * 21);
		}
	}
	
	class A {}
]] 1 errors

test multiplication right boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 * true);
		}
	}
]] 1 errors

test multiplication right array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 * new int[1]);
		}
	}
]] 1 errors

test multiplication right object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(21 * new A());
		}
	}
	
	class A {}
]] 1 errors

test comparision correct [[
	class Main {
		public static void main(String[] args) {
	 		if (21 < 42) {} else {}
		}
	}
]] 0 errors

test comparision left boolean [[
	class Main {
		public static void main(String[] args) {
	 		if (true < 42) {} else {}
		}
	}
]] 1 errors

test comparision left array [[
	class Main {
		public static void main(String[] args) {
	 		if (new int[1] < 42) {} else {}
		}
	}
]] 1 errors

test comparision left object [[
	class Main {
		public static void main(String[] args) {
	 		if (new A() < 42) {} else {}
		}
	}
	
	class A {}
]] 1 errors

test comparision right boolean [[
	class Main {
		public static void main(String[] args) {
	 		if (42 < true) {} else {}
		}
	}
]] 1 errors

test comparision right array [[
	class Main {
		public static void main(String[] args) {
	 		if (42 < new int[1]) {} else {}
		}
	}
]] 1 errors

test comparision right object [[
	class Main {
		public static void main(String[] args) {
	 		if (42 < new A()) {} else {}
		}
	}
	
	class A {}
]] 1 errors

test conjunction correct [[
	class Main {
		public static void main(String[] args) {
	 		if (true && false) {} else {}
		}
	}
]] 0 errors

test conjunction left integer [[
	class Main {
		public static void main(String[] args) {
	 		if (1 && false) {} else {}
		}
	}
]] 1 errors

test conjunction left array [[
	class Main {
		public static void main(String[] args) {
	 		if (new int[1] && false) {} else {}
		}
	}
]] 1 errors

test conjunction left object [[
	class Main {
		public static void main(String[] args) {
	 		if (new A() && false) {} else {}
		}
	}
	
	class A {}
]] 1 errors

test conjunction right integer [[
	class Main {
		public static void main(String[] args) {
	 		if (true && 1) {} else {}
		}
	}
]] 1 errors

test conjunction right array [[
	class Main {
		public static void main(String[] args) {
	 		if (true && new int[1]) {} else {}
		}
	}
]] 1 errors

test conjunction right object [[
	class Main {
		public static void main(String[] args) {
	 		if (true && new A()) {} else {}
		}
	}
	
	class A {}
]] 1 errors

test array subscript correct [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[3][1]);
		}
	}
]] 0 errors

test array subscript left integer [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(1[1]);
		}
	}
]] 1 errors

test array subscript left boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(true[1]);
		}
	}
]] 1 errors

test array subscript left object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new A()[1]);
		}
	}
	
	class A {}
]] 1 errors

test array subscript right boolean [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1][true]);
		}
	}
]] 1 errors

test array subscript right array [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1][ new int[1] ]);
		}
	}
]] 1 errors

test array subscript right object [[
	class Main {
		public static void main(String[] args) {
	 		System.out.println(new int[1][new A()]);
		}
	}
	
	class A {}
]] 1 errors
