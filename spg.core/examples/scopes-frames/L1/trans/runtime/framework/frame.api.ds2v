[CoqImport("scopes"),
 CoqImport("frames"),
 ArrowAlias("default", "scopeofFrame__Arrow", "scopeofFrame"),
 ArrowAlias("default", "initFrame__Arrow", "initFrame"),
 ArrowAlias("default", "initDefault__Arrow", "initDefault"),
 ArrowAlias("default", "lookup__Arrow", "lookup"),
 ArrowAlias("default", "get__Arrow", "getSlot"),
 ArrowAlias("default", "set__Arrow", "setSlot"),
 ArrowAlias("default", "slotsOf__Arrow", "getSlots"),
 ArrowAlias("default", "slookup__Arrow", "slookup"),
 ArrowAlias("default", "pathofRef__Arrow", "pathofRef"),
 ArrowAlias("default", "linksOf__Arrow", "linksofFrame"),
 ArrowAlias("default", "declsofScope__Arrow", "declsofScope"),
 ArrowAlias("default", "typeofDecl__Arrow", "typofDecl"),
 ArrowAlias("default", "linksofScope__Arrow", "linksofScope"),
 SortAlias("H", "H"),
 SortAlias("Decl", "D"),
 SortAlias("Ref", "R"),
 SortAlias("ScopeId", "ScopeId"),
 SortAlias("FrameId", "FrameId"),
 SortAlias("Label", "Label"),
 SortAlias("Path", "Path"),
 SortAlias("lookup__Arrow", ""),
 SortAlias("scopeofFrame__Arrow", ""),
 SortAlias("pathofRef__Arrow", ""),
 SortAlias("initFrame__Arrow", ""),
 SortAlias("initDefault__Arrow", ""),
 SortAlias("get__Arrow", ""),
 SortAlias("set__Arrow", ""),
 SortAlias("Addr", ""),
 SortAlias("slotsOf__Arrow", ""),
 SortAlias("declsofScope__Arrow", ""),
 SortAlias("linksofScope__Arrow", ""),
 SortAlias("linksOf__Arrow", ""),
 SortAlias("typeofDecl__Arrow", ""),
 SortAlias("Frame", ""),
 ConstructorAlias("lookup", 3, Tuple()),
 ConstructorAlias("Addr", 2, Name("Addr")),
 ConstructorAlias("pathofRef", 1, Tuple()),
 ConstructorAlias("initFrame", 3, Tuple()),
 ConstructorAlias("initDefault", 2, Tuple()),
 ConstructorAlias("scopeofFrame", 2, Tuple()),
 ConstructorAlias("slotsOf", 2, Tuple()),
 ConstructorAlias("declsofScope", 1, Tuple()),
 ConstructorAlias("linksofScope", 1, Tuple()),
 ConstructorAlias("linksOf", 2, Tuple()),
 ConstructorAlias("typeofDecl", 1, Tuple()),
 ConstructorAlias("get", 3, Tuple()),
 ConstructorAlias("set", 4, Tuple()),
 ConstructorAlias("P", 0, Name("P")),
 ConstructorAlias("I", 0, Name("I")),
 ConstructorAlias("Heap", 1, Tuple())]
