module runtime/L1

imports
  runtime/framework/scope.api
  runtime/framework/frame.api
  
signature
  
  constructors
    Tint : T
    Tarrow : T * T -> T
  
  sorts PreExp constructors
    Num : Int -> PreExp
    Var : Ref -> PreExp
    Binop : Exp * Exp -> PreExp
    Fun : Decl * T * Exp -> PreExp
    App : Exp * Exp -> PreExp

  sorts Exp constructors
    E : ScopeId * T * PreExp -> Exp

signature
  
  constructors
    NumV : Int -> Val
    ClosV : Decl * Exp * FrameId -> Val
  
  arrows
    Exp -eval-> Val

  native operators
    plusI  : Int * Int -> Int

rules
  
  E(_ , _, Num(i)) -eval-> NumV(i).
  
  f |- E(_, _, Var(r)) :: h -eval-> v :: h
  where
    pathofRef(r) --> p;
    lookup(f, h, p) --> Addr(f', d);
    get(f', h, d) --> v.
    
  E(_, _, Binop(e1, e2)) -eval-> NumV(plusI(z1, z2))
  where
    e1 -eval-> NumV(z1);
    e2 -eval-> NumV(z2).
  
  f |- E(_, _, Fun(d, _, e)) -eval-> ClosV(d, e, f).
  
  f |- E(_, _, App(e1, e2)) -eval-> v'
  where
    f |- e1 -eval-> ClosV(d, e'@E(s, _, _), f');
    f |- e2 -eval-> v :: h;
    scopeofFrame(h, f') --> s';
    initFrame(s, {P() |--> {s' |--> f'}}, {d |--> v}) --> f'';
    f'' |- e' -eval-> v'.