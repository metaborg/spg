module names-classes

language MiniJava
start symbol Program

fixture [[
	class Main {
		public static void main(String[] args) {
			System.out.println(1);
		}
	}
	
	[[...]]
]]

test forward class name resolution in field declaration [[
	class Foobar {
		[[Foo]] x;
	}

	class [[Foo]] {
	}
]] resolve #1 to #2

test backward class name resolution in field declaration [[
	class [[Foo]] {
	}
	
	class Foobar {
		[[Foo]] x;
	}
]] resolve #2 to #1

test forward class name resolution in variable declaration [[
	class Foobar {
		public int method(){
			[[Foo]] x;
			return 1;	
		}	
	}

	class [[Foo]] {
	}
]] resolve #1 to #2

test backward class name resolution in variable declaration [[
	class [[Foo]] {
	}
	
	class Foobar {
		public int method(){
			[[Foo]] x;
			return 1;	
		}
	}
]] resolve #2 to #1

test forward class name resolution in method return [[
  	class Foo {
		public [[Bar]] m1 () {
			Bar r;
	    	return r;
		}
  	}
  	
  	class [[Bar]]{}
  
]] resolve #1 to #2

test backward class name resolution in method return [[
	class [[Bar]]{}

  	class Foo {
		public [[Bar]] m1 () {
			Bar r;
	    	return r;
		}
  	}
  	
]] resolve #2 to #1


test forward class name resolution in param declaration [[
	class Foobar {
		public int method([[Foo]] x){
			return 1;	
		}	
	}

	class [[Foo]] {
	}
]] resolve #1 to #2

test backward class name resolution in param declaration [[
	class [[Foo]] {
	}
	
	class Foobar {
		public int method([[Foo]] x){
			return 1;	
		}
	}
]] resolve #2 to #1

test forward class name resolution subclassing [[
	class Bar extends [[Foo]] {
	}
	
	class [[Foo]] {
	}
]] resolve #1 to #2

test backward class name resolution subclassing [[
	class [[Foo]] {
	}
	
	class Bar extends [[Foo]] {
	}
]] resolve #2 to #1

test backward class name resolution instantiation [[
	class [[Foo]] {
	}
	 
	class Foobar {
		int x;
		public int method() {
			x = new [[Foo]]();
			return 0;
		}
	}
]] resolve #2 to #1

test forward class name resolution instantiation[[
	class Foobar {
		int x;
		public int method() {
			x = new [[Foo]]();
			return 0;
		}
	}
	
	class [[Foo]] {
	}
]] resolve #1 to #2

//---------------------------------homonyms---------------------------------

test class reference other class field homonym [[
	class [[Foo]] {
		int field;
	}

	class Bar {
		int Foo;
		
		public int test2() {
			int x;
			x = new [[Foo]]();
			return 0;
		}
	}
]] resolve #2 to #1

test class reference other class var homonym [[
	class [[Foo]] {
		int field;
	}

	class Bar {
		public int test2() {
			int x;
			int Foo;
			x = new [[Foo]]();
			return 0;
		}
	}
]] resolve #2 to #1

test class reference other class param homonym [[
	class [[Foo]] {
		int field;
	}

	class Bar {
		public int test2(int Foo) {
			int x;
			x = new [[Foo]]();
			return 0;
		}
	}
]] resolve #2 to #1
