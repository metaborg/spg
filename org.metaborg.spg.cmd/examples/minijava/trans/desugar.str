module analysis/desugar

imports
   
  signatures/-
  
  nabl2/runtime/analysis/-

signature

  constructors
  
    BinExp      : BinOp * Exp * Exp -> Exp
    UnExp       : UnOp * Exp -> Exp
    Plus        : BinOp
    Minus       : BinOp
    Times       : BinOp
    LtOp        : BinOp
    AndOp       : BinOp
    LengthOp    : UnOp
    NewArrayOp  : UnOp
    NotOp       : UnOp
    SubscriptOp : BinOp
  
    FieldRef  : String -> Exp  

strategies
  
  desugar-all = topdown(try(desugar))
  desugar-after-all = topdown(try(preserve-annotation(desugar-after)))

rules
  
  desugar:
    Add(e1, e2)  -> BinExp(Plus(), e1, e2)
  
  desugar:
    Sub(e1, e2)  -> BinExp(Minus(), e1, e2)
    
  desugar:
    Mul(e1, e2)  -> BinExp(Times(), e1, e2)
      
  desugar:
    Lt(e1, e2)   -> BinExp(LtOp(), e1, e2)
  
  desugar:
    And(e1, e2)  -> BinExp(AndOp(), e1, e2)
  
  desugar: 
    Length(e1)   -> UnExp(LengthOp(), e1)
    
  desugar: 
    NewArray(e1) -> UnExp(NewArrayOp(), e1)
    
  desugar:
    Not(e1)      -> UnExp(NotOp(), e1)

  desugar:
    Subscript(e1, e2) -> BinExp(SubscriptOp(), e1, e2)

  desugar: Int(oct)     -> Int(dec)
    where
      dec := <explode-string ; ?['0', _|_] ; oct-chars-to-int ; int-to-string> oct
      
rules
    
  desugar-after: VarRef(f) -> FieldRef(f) where <get-annotations; debug> f   
