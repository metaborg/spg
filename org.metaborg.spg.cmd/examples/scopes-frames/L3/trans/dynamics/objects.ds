module dynamics/objects

imports
  ds-signatures/L3-sig
  dynamics/environment
  dynamics/heap
  dynamics/bindings
  dynamics/values
  dynamics/records
  dynamics/utils
  dynamics/l3
  
signature
  constructors
    ObjectV : Env -> V
    NilV : V
    
  arrows
    getFields(String) --> List(Binding)
    initObject(String) --> V
    initFields(List(Binding)) --> Env
    initField(Type) --> Int 
    assignFields(List(Binding)) --> Env
    assignField(Exp) --> Int
    
rules
  NewObject(x) --> v
  where
    initObject(x) --> v.
  
  // Get own and inherited fields for class className
  getFields(className) --> r
  where
    readVar(className) --> RecordV(bindings, parent);
    case parent of {
      None() =>
        bindings => r
      Parent(parentName) =>
        shadows(bindings, getFields(parentName)) --> r
    }.
  
  // Initialize the object for class className
  E |- initObject(className) --> o
  where
    getFields(className) --> fields;
    fresh => a;
    E |- initFields(fields) --> E';
    E {E', E} |- assignFields(fields) --> _;
    ObjectV(E') => o;
    write(a, o) --> _.
  
  // Initialize list of fields
  initFields([]) --> {}.
  
  initFields([Binding(x, ty, _) | fs]) --> {x |--> a, E'}
  where
    initField(ty) --> a;
    initFields(fs) --> E'.
  
  // Initialize field with default value
  initField(IntType()) --> a
  where
  	allocate(NumV(0)) --> a.
  
  initField(ClassType(_)) --> a
  where
    allocate(NilV()) --> a.
    
  initField(FunType(_, _)) --> a
  where
    allocate(NilV()) --> a.
  
  // Execute field initializer
  E |- assignFields([]) --> E.
  
  E |- assignFields([Binding(x, _, v) | fs]) --> E
  where
    writeVar(x, v) --> _;
    assignFields(fs) --> _.
  
  QVar(e, x) -lhs-> a
  where
    e --> ObjectV(E');
    E' |- lookup(x) --> a.
  
  Null() --> NilV().
  