===================================
2016-12-15T10:54:26.871+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4728")), List(TermAppl("s101", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x462"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x2740"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4726"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s119", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119", List()),Label('P'),TermAppl("s101", List())), CGRef(SymbolicName("Var", "x462"),TermAppl("s119", List())), CGRef(SymbolicName("Var", "x2740"),TermAppl("s119", List())), CGRef(SymbolicName("Var", "x4726"),TermAppl("s119", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x462"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2740"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x4726"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  nil;
  print;
  flush
end)
-----------------------------------
===================================
2016-12-15T10:54:55.481+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s593749", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x593969"), TermAppl("Uminus", List(TermAppl("Int", List(Var("x594191"))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s593767", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s593749", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s593749", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s593767", List()),Label('P'),TermAppl("s593749", List())), CGDecl(TermAppl("s593767", List()),SymbolicName("Var", "x593969"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x593969"), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
  var u := - 79
 in
end)
-----------------------------------
===================================
2016-12-15T10:54:59.771+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s691109", List())), State(TermAppl("Mod", List(As(Var("x691151"),TermAppl("For", List(TermAppl("Var", List(Var("x691152"))), TermAppl("Leq", List(TermAppl("String", List(Var("x694651"))), TermAppl("String", List(Var("x693795"))))), TermAppl("Minus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x699513"))), TermAppl("Var", List(Var("x698727"))))), TermAppl("And", List(TermAppl("Var", List(Var("x696856"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x699349"))), TermAppl("Nil", List()))))))))), As(Var("x693850"),TermAppl("Break", List()))))))),List(CResolve(SymbolicName("Var", "x699513"),Var("x699514")), CTypeOf(Var("x699514"),TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s691109", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s691109", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s691149", List()),Label('P'),TermAppl("s691109", List())), CGDecl(TermAppl("s691149", List()),SymbolicName("Var", "x691152")), CGDecl(TermAppl("s691149", List()),SymbolicName("Loop", "n691156")), CGRef(SymbolicName("Loop", "n693851"),TermAppl("s691149", List())), CGRef(SymbolicName("Var", "x696856"),TermAppl("s691109", List())), CGRef(SymbolicName("Var", "x698727"),TermAppl("s691109", List())), CGRef(SymbolicName("Var", "x699349"),TermAppl("s691109", List())), CGRef(SymbolicName("Var", "x699513"),TermAppl("s691109", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x691152"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n693851"), SymbolicName("Loop", "n691156")), Tuple2(SymbolicName("Var", "x696856"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x698727"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x699349"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),for C := "" <= "\t\428" to (getchar = getchar) - (getchar & (
  getchar
)) do
  break)
-----------------------------------
===================================
2016-12-15T10:55:02.884+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s746066", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Neq", List(TermAppl("Int", List(Var("x757311"))), TermAppl("Int", List(Var("x756360"))))), TermAppl("Or", List(TermAppl("IfThen", List(TermAppl("Int", List(Var("x761358"))), TermAppl("While", List(TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x761295"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x760554"))))), TermAppl("Call", List(Var("x758020"), TermAppl("Nil", List()))))))), TermAppl("Seq", List(TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s746066", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s746066", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s752228", List()),Label('P'),TermAppl("s746066", List())), CGDecl(TermAppl("s752228", List()),ConcreteName("Loop", "", 752232)), CGRef(SymbolicName("Var", "x758020"),TermAppl("s752228", List())), CGRef(SymbolicName("Var", "x760554"),TermAppl("s746066", List())), CGRef(SymbolicName("Var", "x761295"),TermAppl("s746066", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x758020"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x760554"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x761295"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(2 <> 65) + (if 02 then
  while (
    concat
  ) | concat do
    flush() | (
)))
-----------------------------------
===================================
2016-12-15T10:55:41.159+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1739958", List())), State(TermAppl("Mod", List(As(Var("x1740000"),TermAppl("For", List(TermAppl("Var", List(Var("x1740001"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x1750101"))), TermAppl("Var", List(Var("x1750403"))))), TermAppl("Lt", List(TermAppl("Int", List(Var("x1744412"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x1748532"))), TermAppl("Var", List(Var("x1750567"))))))), As(Var("x1741491"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1739958", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1739958", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s1739998", List()),Label('P'),TermAppl("s1739958", List())), CGDecl(TermAppl("s1739998", List()),SymbolicName("Var", "x1740001")), CGDecl(TermAppl("s1739998", List()),SymbolicName("Loop", "n1740005")), CGRef(SymbolicName("Loop", "n1741492"),TermAppl("s1739998", List())), CGRef(SymbolicName("Var", "x1748532"),TermAppl("s1739958", List())), CGRef(SymbolicName("Var", "x1750101"),TermAppl("s1739958", List())), CGRef(SymbolicName("Var", "x1750403"),TermAppl("s1739958", List())), CGRef(SymbolicName("Var", "x1750567"),TermAppl("s1739958", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x1740001"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1750403"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x1750101"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n1741492"), SymbolicName("Loop", "n1740005")), Tuple2(SymbolicName("Var", "x1750567"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1748532"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for Po_nP6 := size >= ord to 5 < (size < size) do
  break)
-----------------------------------
===================================
2016-12-15T10:56:05.972+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2444766", List())), State(TermAppl("Mod", List(As(Var("x2444808"),TermAppl("For", List(TermAppl("Var", List(Var("x2444809"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x2453676"))), TermAppl("Var", List(Var("x2452584"))))), TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x2450771"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2453512"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2453858"))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x2447517"))))), As(Var("x2444979"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2444766", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2444766", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s2444806", List()),Label('P'),TermAppl("s2444766", List())), CGDecl(TermAppl("s2444806", List()),SymbolicName("Var", "x2444809")), CGDecl(TermAppl("s2444806", List()),SymbolicName("Loop", "n2444813")), CGRef(SymbolicName("Loop", "n2444980"),TermAppl("s2444806", List())), CGRef(SymbolicName("Var", "x2447517"),TermAppl("s2444766", List())), CGRef(SymbolicName("Var", "x2450771"),TermAppl("s2444766", List())), CGRef(SymbolicName("Var", "x2452584"),TermAppl("s2444766", List())), CGRef(SymbolicName("Var", "x2453512"),TermAppl("s2444766", List())), CGRef(SymbolicName("Var", "x2453676"),TermAppl("s2444766", List())), CGRef(SymbolicName("Var", "x2453858"),TermAppl("s2444766", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x2444809"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n2444980"), SymbolicName("Loop", "n2444813")), Tuple2(SymbolicName("Var", "x2447517"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2453676"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x2450771"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2452584"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x2453858"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x2453512"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for s74 := chr < chr to (
  ord;
  size;
  size
) | size do
  break)
-----------------------------------
===================================
2016-12-15T10:56:21.58+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s2892690", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x2893233"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2893415"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x2895500"))), TermAppl("Cons", List(TermAppl("String", List(Var("x2895435"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s2892708", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2892690", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2892690", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2892708", List()),Label('P'),TermAppl("s2892690", List())), CGRef(SymbolicName("Var", "x2893233"),TermAppl("s2892708", List())), CGRef(SymbolicName("Var", "x2893415"),TermAppl("s2892708", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2893233"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2893415"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  ord;
  exit;
  nil;
  2;
  ""
end)
-----------------------------------
===================================
2016-12-15T10:56:37.343+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3388500", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Plus", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x3393094"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x3394324"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x3393157"))))), TermAppl("Uminus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x3396465"))), TermAppl("Var", List(Var("x3396629"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s3388500", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3388500", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3393094"),TermAppl("s3388500", List())), CGRef(SymbolicName("Var", "x3394324"),TermAppl("s3388500", List())), CGRef(SymbolicName("Var", "x3396465"),TermAppl("s3388500", List())), CGRef(SymbolicName("Var", "x3396629"),TermAppl("s3388500", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3393094"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3394324"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3396465"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x3396629"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(chr <> (
  chr
)) + 4 > - (ord >= ord))
-----------------------------------
===================================
2016-12-15T10:56:37.426+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3396637", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x3398975"))), TermAppl("Var", List(Var("x3398811"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3396655", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3396637", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3396637", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3396655", List()),Label('P'),TermAppl("s3396637", List())), CGRef(SymbolicName("Var", "x3398811"),TermAppl("s3396655", List())), CGRef(SymbolicName("Var", "x3398975"),TermAppl("s3396655", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3398811"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x3398975"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  ord = size
end)
-----------------------------------
===================================
2016-12-15T10:56:44.857+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3586248")), List(TermAppl("s3579604", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Or", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3586246"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s3579622", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3579604", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3579604", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3579622", List()),Label('P'),TermAppl("s3579604", List())), CGRef(SymbolicName("Var", "x3586246"),TermAppl("s3579622", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3586246"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  nil | nil;
  flush
end)
-----------------------------------
===================================
2016-12-15T10:56:54.925+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s3823370", List())), State(TermAppl("Mod", List(As(Var("x3823412"),TermAppl("For", List(TermAppl("Var", List(Var("x3823413"))), TermAppl("Neq", List(TermAppl("String", List(Var("x3826403"))), TermAppl("Call", List(Var("x3826462"), TermAppl("Cons", List(TermAppl("Int", List(Var("x3828899"))), TermAppl("Nil", List()))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x3828836"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3831285"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3832437"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x3832500"))), TermAppl("Nil", List()))))))))))), As(Var("x3824123"),TermAppl("Break", List()))))))),List(CDistinct(Declarations(TermAppl("s3823552", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s3823370", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3823370", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s3823410", List()),Label('P'),TermAppl("s3823370", List())), CGDecl(TermAppl("s3823410", List()),SymbolicName("Var", "x3823413")), CGDecl(TermAppl("s3823410", List()),SymbolicName("Loop", "n3823417")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3823552", List()),Label('P'),TermAppl("s3823370", List())), CGRef(SymbolicName("Loop", "n3824124"),TermAppl("s3823410", List())), CGRef(SymbolicName("Var", "x3826462"),TermAppl("s3823370", List())), CGRef(SymbolicName("Var", "x3828836"),TermAppl("s3823552", List())), CGRef(SymbolicName("Var", "x3831285"),TermAppl("s3823552", List())), CGRef(SymbolicName("Var", "x3832437"),TermAppl("s3823552", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3823413"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3831285"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x3826462"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3828836"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Loop", "n3824124"), SymbolicName("Loop", "n3823417")), Tuple2(SymbolicName("Var", "x3832437"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for LL := "" <> chr(0) to let
 in
  exit;
  ord;
  flush;
  6
end do
  break)
-----------------------------------
===================================
2016-12-15T10:57:07.182+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s4217074", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x4224429"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4224593"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x4226934"))), TermAppl("Var", List(Var("x4227098"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x4221496"))), TermAppl("Var", List(Var("x4222168"))))))))),List(CDistinct(Declarations(TermAppl("s4219069", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4217074", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4217074", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x4221496"),TermAppl("s4217074", List())), CGRef(SymbolicName("Var", "x4222168"),TermAppl("s4217074", List())), CGDirectEdge(TermAppl("s4219069", List()),Label('P'),TermAppl("s4217074", List())), CGRef(SymbolicName("Var", "x4224429"),TermAppl("s4219069", List())), CGRef(SymbolicName("Var", "x4224593"),TermAppl("s4219069", List())), CGRef(SymbolicName("Var", "x4226934"),TermAppl("s4219069", List())), CGRef(SymbolicName("Var", "x4227098"),TermAppl("s4219069", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4224429"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x4226934"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x4224593"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x4221496"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x4227098"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x4222168"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  getchar;
  (
    - (substring >= substring)
  )
end <= (ord | ord))
-----------------------------------
===================================
2016-12-15T10:57:28.082+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x4864243")), List(TermAppl("s4863698", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x4863958"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4864241"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s4863716", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4863698", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4863698", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s4863716", List()),Label('P'),TermAppl("s4863698", List())), CGRef(SymbolicName("Var", "x4864241"),TermAppl("s4863716", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4864241"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
 in
  2;
  chr
end)
-----------------------------------
===================================
2016-12-15T10:57:37.625+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s5166751", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s5166769", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5166751", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5166751", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s5166769", List()),Label('P'),TermAppl("s5166751", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T10:58:04.965+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s5965962", List())), State(TermAppl("Mod", List(As(Var("x5966004"),TermAppl("For", List(TermAppl("Var", List(Var("x5966005"))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x5969298"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x5968713"))), TermAppl("Var", List(Var("x5969071"))))), As(Var("x5966175"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s5965962", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5965962", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s5966002", List()),Label('P'),TermAppl("s5965962", List())), CGDecl(TermAppl("s5966002", List()),SymbolicName("Var", "x5966005")), CGDecl(TermAppl("s5966002", List()),SymbolicName("Loop", "n5966009")), CGRef(SymbolicName("Loop", "n5966176"),TermAppl("s5966002", List())), CGRef(SymbolicName("Var", "x5968713"),TermAppl("s5965962", List())), CGRef(SymbolicName("Var", "x5969071"),TermAppl("s5965962", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x5966005"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n5966176"), SymbolicName("Loop", "n5966009")), Tuple2(SymbolicName("Var", "x5968713"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x5969071"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for A := - 2 to ord <= ord do
  break)
-----------------------------------
===================================
2016-12-15T10:58:12.686+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s6220989", List())), State(TermAppl("Mod", List(As(Var("x6221031"),TermAppl("For", List(TermAppl("Var", List(Var("x6221032"))), TermAppl("Uminus", List(TermAppl("Or", List(TermAppl("Var", List(Var("x6227991"))), TermAppl("Var", List(Var("x6229009"))))))), TermAppl("Eq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x6228707"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6229173"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x6223677"))))), TermAppl("Call", List(Var("x6223734"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s6220989", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6220989", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s6221029", List()),Label('P'),TermAppl("s6220989", List())), CGDecl(TermAppl("s6221029", List()),SymbolicName("Var", "x6221032")), CGDecl(TermAppl("s6221029", List()),SymbolicName("Loop", "n6221036")), CGRef(SymbolicName("Var", "x6223677"),TermAppl("s6220989", List())), CGRef(SymbolicName("Var", "x6223734"),TermAppl("s6221029", List())), CGRef(SymbolicName("Var", "x6227991"),TermAppl("s6220989", List())), CGRef(SymbolicName("Var", "x6228707"),TermAppl("s6220989", List())), CGRef(SymbolicName("Var", "x6229009"),TermAppl("s6220989", List())), CGRef(SymbolicName("Var", "x6229173"),TermAppl("s6220989", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x6221032"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6223677"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x6227991"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x6229173"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x6223734"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x6228707"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x6229009"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for Q := - (not | not) to (
  size;
  not
) = not do
  flush())
-----------------------------------
===================================
2016-12-15T10:58:20.556+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6475279")), List(TermAppl("s6471932", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x6474300"), TermAppl("Var", List(Var("x6474931"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6474277"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6475095"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6475277"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s6471950", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s6471932", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6471932", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s6471950", List()),Label('P'),TermAppl("s6471932", List())), CGRef(SymbolicName("Var", "x6474277"),TermAppl("s6471950", List())), CGDecl(TermAppl("s6471950", List()),SymbolicName("Var", "x6474300")), CGRef(SymbolicName("Var", "x6474931"),TermAppl("s6471932", List())), CGRef(SymbolicName("Var", "x6475095"),TermAppl("s6471950", List())), CGRef(SymbolicName("Var", "x6475277"),TermAppl("s6471950", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x6474300"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x6474277"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x6474931"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x6475095"), SymbolicName("Var", "x6474300")), Tuple2(SymbolicName("Var", "x6475277"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
  var n1 := print
 in
  print;
  n1;
  exit
end)
-----------------------------------
===================================
2016-12-15T10:58:24.056+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s6568724", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x6575761"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x6575139"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x6573570"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x6576126"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6576308"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6576490"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s6575783", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s6568724", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6568724", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6573570"),TermAppl("s6568724", List())), CGRef(SymbolicName("Var", "x6575139"),TermAppl("s6568724", List())), CGRef(SymbolicName("Var", "x6575761"),TermAppl("s6568724", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s6575783", List()),Label('P'),TermAppl("s6568724", List())), CGRef(SymbolicName("Var", "x6576126"),TermAppl("s6575783", List())), CGRef(SymbolicName("Var", "x6576308"),TermAppl("s6575783", List())), CGRef(SymbolicName("Var", "x6576490"),TermAppl("s6575783", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6575761"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x6573570"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x6575139"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x6576126"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x6576490"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x6576308"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),((
  getchar
) > getchar) < (concat >= let
 in
  substring;
  getchar;
  concat
end))
-----------------------------------
===================================
2016-12-15T10:58:40.175+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s7121494", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x7121721"), TermAppl("Tid", List(Var("x7121738"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s7121512", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s7121494", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7121494", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s7121512", List()),Label('P'),TermAppl("s7121494", List())), CGDecl(TermAppl("s7121512", List()),SymbolicName("Type", "x7121721")), CGRef(SymbolicName("Type", "x7121738"),TermAppl("s7121512", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x7121721"), Var("x7121740")), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x7121738"), SymbolicName("Type", "x7121721")))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
end)
-----------------------------------
===================================
2016-12-15T10:58:45.553+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s7277202", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x7284596"))), TermAppl("Var", List(Var("x7284238"))))), TermAppl("Times", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x7282557"))), TermAppl("Var", List(Var("x7281727"))))), TermAppl("Int", List(Var("x7284659"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s7277202", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7277202", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7281727"),TermAppl("s7277202", List())), CGRef(SymbolicName("Var", "x7282557"),TermAppl("s7277202", List())), CGRef(SymbolicName("Var", "x7284238"),TermAppl("s7277202", List())), CGRef(SymbolicName("Var", "x7284596"),TermAppl("s7277202", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7281727"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x7282557"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x7284238"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x7284596"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring >= substring) - (print < print) * 36)
-----------------------------------
===================================
2016-12-15T10:58:46.144+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s7298673", List())), State(TermAppl("Mod", List(As(Var("x7298715"),TermAppl("For", List(TermAppl("Var", List(Var("x7298716"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x7302610"), TermAppl("Var", List(Var("x7303168"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Or", List(TermAppl("Var", List(Var("x7305803"))), TermAppl("Var", List(Var("x7306203"))))), TermAppl("Nil", List()))))), TermAppl("Geq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Call", List(Var("x7302662"), TermAppl("Cons", List(TermAppl("String", List(Var("x7306365"))), TermAppl("Nil", List()))))), TermAppl("Nil", List())))))))))),List(CDistinct(Declarations(TermAppl("s7299376", List()), "All")), CDistinct(Declarations(TermAppl("s7301887", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s7298673", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7298673", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s7298713", List()),Label('P'),TermAppl("s7298673", List())), CGDecl(TermAppl("s7298713", List()),SymbolicName("Var", "x7298716")), CGDecl(TermAppl("s7298713", List()),SymbolicName("Loop", "n7298720")), NewScope(Var("s_body")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s7299376", List()),Label('P'),TermAppl("s7298713", List())), CGDirectEdge(TermAppl("s7301887", List()),Label('P'),TermAppl("s7298673", List())), CGDecl(TermAppl("s7301887", List()),SymbolicName("Var", "x7302610")), CGRef(SymbolicName("Var", "x7302662"),TermAppl("s7299376", List())), CGRef(SymbolicName("Var", "x7303168"),TermAppl("s7298673", List())), CGRef(SymbolicName("Var", "x7305803"),TermAppl("s7301887", List())), CGRef(SymbolicName("Var", "x7306203"),TermAppl("s7301887", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x7298716"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x7302610"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7302662"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x7303168"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x7305803"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x7306203"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for Q := let
  var P := concat
 in
  size | size
end to nil >= nil do
  let
   in
    print("")
  end)
-----------------------------------
===================================
2016-12-15T10:59:13.471+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s8035946", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Assign", List(TermAppl("Var", List(Var("x8041454"))), TermAppl("Var", List(Var("x8041264"))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s8035946", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8035946", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8041264"),TermAppl("s8035946", List())), CGRef(SymbolicName("Var", "x8041454"),TermAppl("s8035946", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8041264"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x8041454"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if nil > nil then
  ord := ord)
-----------------------------------
===================================
2016-12-15T10:59:26.872+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s8418173", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x8421462"))), TermAppl("Var", List(Var("x8421626"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s8418355", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s8418173", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8418173", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x8421462"),TermAppl("s8418173", List())), CGRef(SymbolicName("Var", "x8421626"),TermAppl("s8418173", List())), CGDirectEdge(TermAppl("s8418355", List()),Label('P'),TermAppl("s8418173", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8421462"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x8421626"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),if size < size then
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T10:59:32.959+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s8606240", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x8611086"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x8614322"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x8614486"))), TermAppl("Nil", List()))))))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x8612655"))), TermAppl("Var", List(Var("x8613394"))))))))),List(CDistinct(Declarations(TermAppl("s8612677", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s8606240", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8606240", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x8611086"),TermAppl("s8606240", List())), CGRef(SymbolicName("Var", "x8612655"),TermAppl("s8606240", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s8612677", List()),Label('P'),TermAppl("s8606240", List())), CGRef(SymbolicName("Var", "x8613394"),TermAppl("s8606240", List())), CGRef(SymbolicName("Var", "x8614322"),TermAppl("s8612677", List())), CGRef(SymbolicName("Var", "x8614486"),TermAppl("s8612677", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8611086"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x8614486"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x8613394"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x8612655"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x8614322"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(exit > let
 in
  size;
  exit
end) >= (getchar < getchar))
-----------------------------------
===================================
2016-12-15T10:59:48.547+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s9052240", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s9052258", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s9052240", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9052240", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s9052258", List()),Label('P'),TermAppl("s9052240", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T10:59:56.211+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9278263", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x9281565"))), TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x9281948"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x9281000"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s9278445", List()), "All")), CDistinct(Declarations(TermAppl("s9281040", List()), "All")), CDistinct(Declarations(TermAppl("s9281605", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s9278263", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9278263", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s9278445", List()),Label('P'),TermAppl("s9278263", List())), CGRef(SymbolicName("Var", "x9281000"),TermAppl("s9278445", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s9281040", List()),Label('P'),TermAppl("s9278263", List())), CGRef(SymbolicName("Var", "x9281565"),TermAppl("s9281040", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s9281605", List()),Label('P'),TermAppl("s9281040", List())), CGRef(SymbolicName("Var", "x9281948"),TermAppl("s9281605", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9281000"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x9281565"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x9281948"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(
  let
   in
    (
      exit;
      let
       in
        ord
      end
    )
  end
) > let
 in
  size
end)
-----------------------------------
===================================
2016-12-15T10:59:59.495+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9363448", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x9371366"))), TermAppl("Var", List(Var("x9371784"))))), TermAppl("Geq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x9374044"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9376886"))), TermAppl("Cons", List(TermAppl("String", List(Var("x9376302"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9376722"))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x9369553"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9363448", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9363448", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9369553"),TermAppl("s9363448", List())), CGRef(SymbolicName("Var", "x9371366"),TermAppl("s9363448", List())), CGRef(SymbolicName("Var", "x9371784"),TermAppl("s9363448", List())), CGRef(SymbolicName("Var", "x9374044"),TermAppl("s9363448", List())), CGRef(SymbolicName("Var", "x9376722"),TermAppl("s9363448", List())), CGRef(SymbolicName("Var", "x9376886"),TermAppl("s9363448", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9371784"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x9374044"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x9369553"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x9376722"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x9371366"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x9376886"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(getchar = getchar) / ((
  not;
  size;
  "\"";
  chr
) >= chr))
-----------------------------------
===================================
2016-12-15T11:00:04.863+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9529102", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x9535983"))), TermAppl("Var", List(Var("x9535517"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x9533948"))), TermAppl("Var", List(Var("x9535819"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9529102", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9529102", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9533948"),TermAppl("s9529102", List())), CGRef(SymbolicName("Var", "x9535517"),TermAppl("s9529102", List())), CGRef(SymbolicName("Var", "x9535819"),TermAppl("s9529102", List())), CGRef(SymbolicName("Var", "x9535983"),TermAppl("s9529102", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9533948"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x9535517"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x9535819"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x9535983"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(flush = flush) <> (size < ord))
-----------------------------------
===================================
2016-12-15T11:00:07.024+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9587009", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x9590838"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x9593635"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9600599"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9596079"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9598339"))), TermAppl("Cons", List(TermAppl("String", List(Var("x9600761"))), TermAppl("Cons", List(TermAppl("String", List(Var("x9600943"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x9601127"))), TermAppl("Nil", List()))))))))))))))))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x9593801"))), TermAppl("Var", List(Var("x9592407"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9587009", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9587009", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9590838"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9592407"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9593801"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9596079"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9598339"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9600599"),TermAppl("s9587009", List())), CGRef(SymbolicName("Var", "x9601127"),TermAppl("s9587009", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9593801"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x9598339"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x9590838"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x9601127"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x9592407"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x9596079"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x9600599"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(print <> (
  "\295";
  size;
  chr;
  not;
  "\\\n";
  "";
  print
)) - (not < not))
-----------------------------------
===================================
2016-12-15T11:00:12.335+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9776375", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x9781335"))), TermAppl("Var", List(Var("x9781637"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x9781801"))), TermAppl("Var", List(Var("x9779766"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s9776375", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9776375", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x9779766"),TermAppl("s9776375", List())), CGRef(SymbolicName("Var", "x9781335"),TermAppl("s9776375", List())), CGRef(SymbolicName("Var", "x9781637"),TermAppl("s9776375", List())), CGRef(SymbolicName("Var", "x9781801"),TermAppl("s9776375", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9779766"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x9781335"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x9781637"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x9781801"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(flush <= flush) / (substring < substring))
-----------------------------------
===================================
2016-12-15T11:00:20.564+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s10009370", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x10013453"), TermAppl("Tid", List(Var("x10014143"))), TermAppl("String", List(Var("x10013941"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x10014123"))), TermAppl("Nil", List()))))), TermAppl("String", List(Var("x10013435"))))))),List(CDistinct(Declarations(TermAppl("s10009552", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s10009370", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10009370", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s10009552", List()),Label('P'),TermAppl("s10009370", List())), CGDecl(TermAppl("s10009552", List()),SymbolicName("Var", "x10013453")), CGRef(SymbolicName("Type", "x10014143"),TermAppl("s10009370", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x10013453"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x10014143"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  var BF__9 : string := "\t"
 in
  "\"\""
end >= "\859")
-----------------------------------
===================================
2016-12-15T11:00:23.411+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10094799")), List(TermAppl("s10091644", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x10094860"))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x10094797"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s10091662", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s10091644", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10091644", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s10091662", List()),Label('P'),TermAppl("s10091644", List())), CGRef(SymbolicName("Var", "x10094797"),TermAppl("s10091662", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10094797"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  - 2;
  exit
end)
-----------------------------------
===================================
2016-12-15T11:00:28.337+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s10254792", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Or", List(TermAppl("Var", List(Var("x10262689"))), TermAppl("Var", List(Var("x10262525"))))), TermAppl("And", List(TermAppl("String", List(Var("x10260074"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x10263051"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10254792", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10254792", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10262525"),TermAppl("s10254792", List())), CGRef(SymbolicName("Var", "x10262689"),TermAppl("s10254792", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10262525"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x10262689"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(exit | exit) < ("\^U" & (
  (
    ""
  )
)))
-----------------------------------
===================================
2016-12-15T11:00:32.46+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s10384932", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x10387822"))), TermAppl("Var", List(Var("x10387986"))))), TermAppl("Nil", List()))))), TermAppl("Int", List(Var("x10385531"))))))),List(CDistinct(Declarations(TermAppl("s10385114", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s10384932", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10384932", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s10385114", List()),Label('P'),TermAppl("s10384932", List())), CGRef(SymbolicName("Var", "x10387822"),TermAppl("s10385114", List())), CGRef(SymbolicName("Var", "x10387986"),TermAppl("s10385114", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10387822"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x10387986"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
 in
  chr = chr
end - 32)
-----------------------------------
===================================
2016-12-15T11:00:36.217+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10504868")), List(TermAppl("s10504858", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x10505027"))), TermAppl("Int", List(Var("x10506219"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x10508605"))), TermAppl("Var", List(Var("x10508769"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s10504858", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10504858", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x10505027"),TermAppl("s10504858", List())), CGRef(SymbolicName("Var", "x10508605"),TermAppl("s10504858", List())), CGRef(SymbolicName("Var", "x10508769"),TermAppl("s10504858", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x10505027"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x10508605"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x10508769"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),int[2023] of size <= ord)
-----------------------------------
===================================
2016-12-15T11:00:49.609+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s10908940", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x10916940"))), TermAppl("Minus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x10916877"))), TermAppl("Var", List(Var("x10917619"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x10914920"))), TermAppl("Var", List(Var("x10917783"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s10908940", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10908940", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x10914920"),TermAppl("s10908940", List())), CGRef(SymbolicName("Var", "x10916877"),TermAppl("s10908940", List())), CGRef(SymbolicName("Var", "x10917619"),TermAppl("s10908940", List())), CGRef(SymbolicName("Var", "x10917783"),TermAppl("s10908940", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x10914920"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x10916877"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x10917619"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x10917783"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),42 = (flush > flush) - (getchar <= getchar))
-----------------------------------
===================================
2016-12-15T11:01:17.399+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s11618046", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x11620987"))), TermAppl("Int", List(Var("x11621387"))))), TermAppl("Call", List(Var("x11619039"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11618046", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11618046", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11619039"),TermAppl("s11618046", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11619039"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if 92 <= 6 then
  flush())
-----------------------------------
===================================
2016-12-15T11:01:38.672+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s12166752", List())), State(TermAppl("Mod", List(As(Var("x12166794"),TermAppl("For", List(TermAppl("Var", List(Var("x12166795"))), TermAppl("Or", List(TermAppl("Var", List(Var("x12171546"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x12173667"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x12172870"), TermAppl("Cons", List(TermAppl("String", List(Var("x12174807"))), TermAppl("Nil", List()))))), TermAppl("While", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x12174231"))), TermAppl("Var", List(Var("x12174645"))))), TermAppl("Call", List(Var("x12167521"), TermAppl("Cons", List(TermAppl("String", List(Var("x12172234"))), TermAppl("Nil", List())))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s12166752", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12166752", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s12166792", List()),Label('P'),TermAppl("s12166752", List())), CGDecl(TermAppl("s12166792", List()),SymbolicName("Var", "x12166795")), CGDecl(TermAppl("s12166792", List()),SymbolicName("Loop", "n12166799")), NewScope(Var("s'")), CGDirectEdge(TermAppl("s12166951", List()),Label('P'),TermAppl("s12166792", List())), CGDecl(TermAppl("s12166951", List()),ConcreteName("Loop", "", 12166955)), CGRef(SymbolicName("Var", "x12167521"),TermAppl("s12166951", List())), CGRef(SymbolicName("Var", "x12171546"),TermAppl("s12166752", List())), CGRef(SymbolicName("Var", "x12172870"),TermAppl("s12166752", List())), CGRef(SymbolicName("Var", "x12173667"),TermAppl("s12166752", List())), CGRef(SymbolicName("Var", "x12174231"),TermAppl("s12166792", List())), CGRef(SymbolicName("Var", "x12174645"),TermAppl("s12166792", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x12166795"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12171546"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12173667"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12174231"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x12172870"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12167521"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x12174645"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),for K := size | (
  size
) to size("\639\"") do
  while substring <= substring do
    print(""))
-----------------------------------
===================================
2016-12-15T11:01:49.299+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s12485970", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x12493289"))), TermAppl("Var", List(Var("x12492823"))))), TermAppl("Neq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x12496566"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12504762"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x12501522"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x12507157"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12513342"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12512778"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12510680"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12513178"))), TermAppl("Nil", List()))))))))))))))))))))), TermAppl("Var", List(Var("x12491254"))))))))),List(CDistinct(Declarations(TermAppl("s12492845", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s12485970", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12485970", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12491254"),TermAppl("s12485970", List())), CGRef(SymbolicName("Var", "x12492823"),TermAppl("s12485970", List())), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x12493289"),TermAppl("s12485970", List())), CGDirectEdge(TermAppl("s12492845", List()),Label('P'),TermAppl("s12485970", List())), CGRef(SymbolicName("Var", "x12496566"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12501522"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12504762"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12510680"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12512778"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12513178"),TermAppl("s12492845", List())), CGRef(SymbolicName("Var", "x12513342"),TermAppl("s12492845", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12493289"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x12510680"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x12513178"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x12513342"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x12512778"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x12491254"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x12496566"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x12501522"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x12504762"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12492823"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar = getchar) <= (let
 in
  substring;
  size;
  nil;
  getchar;
  1;
  print;
  getchar;
  concat;
  not
end <> not))
-----------------------------------
===================================
2016-12-15T11:02:05.636+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s12711238", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Call", List(Var("x12718356"), TermAppl("Cons", List(TermAppl("String", List(Var("x12719177"))), TermAppl("Nil", List()))))), TermAppl("Eq", List(TermAppl("Call", List(Var("x12717018"), TermAppl("Cons", List(TermAppl("String", List(Var("x12718290"))), TermAppl("Nil", List()))))), TermAppl("Or", List(TermAppl("Var", List(Var("x12719008"))), TermAppl("Var", List(Var("x12716961"))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s12711238", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12711238", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12716961"),TermAppl("s12711238", List())), CGRef(SymbolicName("Var", "x12717018"),TermAppl("s12711238", List())), CGRef(SymbolicName("Var", "x12718356"),TermAppl("s12711238", List())), CGRef(SymbolicName("Var", "x12719008"),TermAppl("s12711238", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12716961"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12717018"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x12718356"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x12719008"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),size("") < (ord("") = (size | size)))
-----------------------------------
===================================
2016-12-15T11:02:11.729+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x12903933")), List(TermAppl("s12903923", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x12905886"))), TermAppl("Gt", List(TermAppl("String", List(Var("x12908554"))), TermAppl("String", List(Var("x12910595"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x12910129"))), TermAppl("Var", List(Var("x12910433"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s12903923", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12903923", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x12905886"),TermAppl("s12903923", List())), CGRef(SymbolicName("Var", "x12910129"),TermAppl("s12903923", List())), CGRef(SymbolicName("Var", "x12910433"),TermAppl("s12903923", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x12905886"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x12910129"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x12910433"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),int["" > "\"\t"] of substring <= substring)
-----------------------------------
===================================
2016-12-15T11:02:28.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s13463987", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Times", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x13467776"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x13467857"))), TermAppl("Nil", List()))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x13467072"))), TermAppl("Var", List(Var("x13467430"))))))), TermAppl("Call", List(Var("x13464531"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13463987", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13463987", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s13464022", List()),Label('P'),TermAppl("s13463987", List())), CGDecl(TermAppl("s13464022", List()),ConcreteName("Loop", "", 13464026)), CGRef(SymbolicName("Var", "x13464531"),TermAppl("s13464022", List())), CGRef(SymbolicName("Var", "x13467072"),TermAppl("s13463987", List())), CGRef(SymbolicName("Var", "x13467430"),TermAppl("s13463987", List())), CGRef(SymbolicName("Var", "x13467776"),TermAppl("s13463987", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13464531"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x13467072"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x13467430"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x13467776"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),while (
  concat;
  3
) * (getchar | getchar) do
  flush())
-----------------------------------
===================================
2016-12-15T11:02:45.418+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s13932925", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Plus", List(TermAppl("Int", List(Var("x13935388"))), TermAppl("Or", List(TermAppl("String", List(Var("x13935791"))), TermAppl("String", List(Var("x13935323"))))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s13932943", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s13932925", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13932925", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s13932943", List()),Label('P'),TermAppl("s13932925", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  86 + ("\\" | "\756")
end)
-----------------------------------
===================================
2016-12-15T11:02:51.105+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s14099958", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x14110342"))), TermAppl("Var", List(Var("x14110644"))))), TermAppl("Plus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x14104552"))), TermAppl("Var", List(Var("x14105104"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x14108773"))), TermAppl("Var", List(Var("x14110808"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14099958", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14099958", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14104552"),TermAppl("s14099958", List())), CGRef(SymbolicName("Var", "x14105104"),TermAppl("s14099958", List())), CGRef(SymbolicName("Var", "x14108773"),TermAppl("s14099958", List())), CGRef(SymbolicName("Var", "x14110342"),TermAppl("s14099958", List())), CGRef(SymbolicName("Var", "x14110644"),TermAppl("s14099958", List())), CGRef(SymbolicName("Var", "x14110808"),TermAppl("s14099958", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14104552"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x14108773"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x14110808"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x14105104"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x14110644"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x14110342"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar = getchar) = (exit > exit) + (substring = substring))
-----------------------------------
===================================
2016-12-15T11:02:54.559+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s14224008", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s14224026", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s14224008", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14224008", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s14224026", List()),Label('P'),TermAppl("s14224008", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:03:18.761+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14946131")), List(TermAppl("s14946100", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x14953715"))), TermAppl("Var", List(Var("x14954211"))))), TermAppl("Int", List(Var("x14954632"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x14954569"))), TermAppl("Var", List(Var("x14951758"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14946100", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14946100", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x14951758"),TermAppl("s14946100", List())), CGRef(SymbolicName("Var", "x14953715"),TermAppl("s14946100", List())), CGRef(SymbolicName("Var", "x14954211"),TermAppl("s14946100", List())), CGRef(SymbolicName("Var", "x14954569"),TermAppl("s14946100", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14951758"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x14953715"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x14954211"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x14954569"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if not >= not then
  9
else
  ord >= ord)
-----------------------------------
===================================
2016-12-15T11:03:20.946+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s15013788", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Gt", List(TermAppl("Int", List(Var("x15015953"))), TermAppl("Int", List(Var("x15016353"))))), TermAppl("Call", List(Var("x15014005"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15013788", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15013788", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s15013823", List()),Label('P'),TermAppl("s15013788", List())), CGDecl(TermAppl("s15013823", List()),ConcreteName("Loop", "", 15013827)), CGRef(SymbolicName("Var", "x15014005"),TermAppl("s15013823", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15014005"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),while 630 > 0 do
  flush())
-----------------------------------
===================================
2016-12-15T11:03:22.688+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s15064325", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s15064343", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s15064325", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15064325", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s15064343", List()),Label('P'),TermAppl("s15064325", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:03:35.747+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s15406682", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s15406700", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s15406682", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15406682", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s15406700", List()),Label('P'),TermAppl("s15406682", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:03:36.266+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s15421151", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x15425630"))), TermAppl("Var", List(Var("x15425794"))))), TermAppl("Int", List(Var("x15423316"))))), TermAppl("Call", List(Var("x15421368"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15421151", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15421151", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s15421186", List()),Label('P'),TermAppl("s15421151", List())), CGDecl(TermAppl("s15421186", List()),ConcreteName("Loop", "", 15421190)), CGRef(SymbolicName("Var", "x15421368"),TermAppl("s15421186", List())), CGRef(SymbolicName("Var", "x15425630"),TermAppl("s15421151", List())), CGRef(SymbolicName("Var", "x15425794"),TermAppl("s15421151", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15421368"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x15425630"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x15425794"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),while (concat = concat) <> 3 do
  flush())
-----------------------------------
===================================
2016-12-15T11:03:54.509+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s15921218", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("FunDec", List(Var("x15921455"), TermAppl("Nil", List()), TermAppl("Tid", List(Var("x15921472"))), TermAppl("Call", List(Var("x15922082"), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x15921730"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s15921236", List()), "All")), CDistinct(Declarations(TermAppl("s15921452", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s15921218", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15921218", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s15921236", List()),Label('P'),TermAppl("s15921218", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s15921452", List()),Label('P'),TermAppl("s15921236", List())), CGDecl(TermAppl("s15921236", List()),SymbolicName("Var", "x15921455")), CGRef(SymbolicName("Type", "x15921472"),TermAppl("s15921218", List())), CGRef(SymbolicName("Var", "x15922082"),TermAppl("s15921452", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x15921455"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x15921472"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x15922082"), SymbolicName("Var", "x15921455")))),SubtypeRelation(List()),List())),let
  function n1() : int =
    n1()
 in
  38
end)
-----------------------------------
===================================
2016-12-15T11:03:55.373+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s15949252", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("Var", List(Var("x15954975"))), TermAppl("Var", List(Var("x15955527"))))), TermAppl("Int", List(Var("x15955948"))))), TermAppl("Int", List(Var("x15955590"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15949252", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15949252", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x15954975"),TermAppl("s15949252", List())), CGRef(SymbolicName("Var", "x15955527"),TermAppl("s15949252", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15954975"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x15955527"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),(not & not) < 642 & 0)
-----------------------------------
===================================
2016-12-15T11:03:56.159+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s15981361", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x15984900"))), TermAppl("Var", List(Var("x15984500"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x15985064"))), TermAppl("Cons", List(As(Var("x15985135"),TermAppl("Break", List())), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s15981361", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15981361", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s15981396", List()),Label('P'),TermAppl("s15981361", List())), CGDecl(TermAppl("s15981396", List()),ConcreteName("Loop", "", 15981400)), CGRef(SymbolicName("Var", "x15984500"),TermAppl("s15981361", List())), CGRef(SymbolicName("Var", "x15984900"),TermAppl("s15981361", List())), CGRef(SymbolicName("Var", "x15985064"),TermAppl("s15981396", List())), CGRef(SymbolicName("Loop", "n15985136"),TermAppl("s15981396", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15984500"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x15984900"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x15985064"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Loop", "n15985136"), ConcreteName("Loop", "", 15981400)))),SubtypeRelation(List()),List())),while ord <= ord do
  (
    exit;
    break
  ))
-----------------------------------
===================================
2016-12-15T11:04:27.823+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x16911779")), List(TermAppl("s16911748", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Leq", List(TermAppl("Call", List(Var("x16919583"), TermAppl("Cons", List(TermAppl("String", List(Var("x16920460"))), TermAppl("Nil", List()))))), TermAppl("Plus", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x16919037"))))), TermAppl("Int", List(Var("x16919954"))))))), TermAppl("Var", List(Var("x16917676"))), TermAppl("Var", List(Var("x16918422"))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s16911748", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s16911748", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x16917676"),TermAppl("s16911748", List())), CGRef(SymbolicName("Var", "x16918422"),TermAppl("s16911748", List())), CGRef(SymbolicName("Var", "x16919583"),TermAppl("s16911748", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x16917676"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x16918422"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x16919583"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if ord("\\") <= - 2 + 69 then
  size
else
  ord)
-----------------------------------
===================================
2016-12-15T11:04:34.879+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17141559", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s17141577", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17141559", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17141559", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s17141577", List()),Label('P'),TermAppl("s17141559", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:04:36.605+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17200379", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s17200397", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17200379", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17200379", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s17200397", List()),Label('P'),TermAppl("s17200379", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:04:43.773+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17418972", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s17418990", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17418972", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17418972", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s17418990", List()),Label('P'),TermAppl("s17418972", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:04:48.201+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s17549857", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x17552411"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x17552453"), TermAppl("Int", List(Var("x17552649"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17553052"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s17550039", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17549857", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17549857", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x17552411"),TermAppl("s17549857", List())), CGDirectEdge(TermAppl("s17550039", List()),Label('P'),TermAppl("s17549857", List())), CGDecl(TermAppl("s17550039", List()),SymbolicName("Var", "x17552453")), CGRef(SymbolicName("Var", "x17553052"),TermAppl("s17550039", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x17552453"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17552411"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17553052"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar > let
  var w := 86
 in
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:04:48.434+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17557045", List())), State(TermAppl("Mod", List(As(Var("x17557087"),TermAppl("For", List(TermAppl("Var", List(Var("x17557088"))), TermAppl("Uminus", List(TermAppl("And", List(TermAppl("Var", List(Var("x17562440"))), TermAppl("Var", List(Var("x17562604"))))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x17560463"))), TermAppl("Var", List(Var("x17559803"))))), TermAppl("Call", List(Var("x17557262"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17557045", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17557045", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s17557085", List()),Label('P'),TermAppl("s17557045", List())), CGDecl(TermAppl("s17557085", List()),SymbolicName("Var", "x17557088")), CGDecl(TermAppl("s17557085", List()),SymbolicName("Loop", "n17557092")), CGRef(SymbolicName("Var", "x17557262"),TermAppl("s17557085", List())), CGRef(SymbolicName("Var", "x17559803"),TermAppl("s17557045", List())), CGRef(SymbolicName("Var", "x17560463"),TermAppl("s17557045", List())), CGRef(SymbolicName("Var", "x17562440"),TermAppl("s17557045", List())), CGRef(SymbolicName("Var", "x17562604"),TermAppl("s17557045", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x17557088"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17557262"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17562440"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17559803"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x17560463"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x17562604"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for E := - (flush & flush) to print > print do
  flush())
-----------------------------------
===================================
2016-12-15T11:04:50.194+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17620864", List())), State(TermAppl("Mod", List(As(Var("x17620906"),TermAppl("For", List(TermAppl("Var", List(Var("x17620907"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x17625065"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x17625504"))), TermAppl("Nil", List()))))))), TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x17625441"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x17623552"))))), As(Var("x17623605"),TermAppl("Break", List()))))))),List(CDistinct(Declarations(TermAppl("s17624070", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17620864", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17620864", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s17620904", List()),Label('P'),TermAppl("s17620864", List())), CGDecl(TermAppl("s17620904", List()),SymbolicName("Var", "x17620907")), CGDecl(TermAppl("s17620904", List()),SymbolicName("Loop", "n17620911")), CGRef(SymbolicName("Var", "x17623552"),TermAppl("s17620864", List())), CGRef(SymbolicName("Loop", "n17623606"),TermAppl("s17620904", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s17624070", List()),Label('P'),TermAppl("s17620864", List())), CGRef(SymbolicName("Var", "x17625065"),TermAppl("s17620864", List())), CGRef(SymbolicName("Var", "x17625441"),TermAppl("s17624070", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x17620907"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17623552"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Loop", "n17623606"), SymbolicName("Loop", "n17620911")), Tuple2(SymbolicName("Var", "x17625065"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17625441"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for v_k := (
  flush;
  57
) to let
 in
  print
end <= print do
  break)
-----------------------------------
===================================
2016-12-15T11:04:59.195+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x17847549")), List(TermAppl("s17847317", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("If", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x17852274"))), TermAppl("Var", List(Var("x17852110"))))), TermAppl("Var", List(Var("x17850297"))), TermAppl("Var", List(Var("x17849359"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s17847335", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s17847317", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17847317", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s17847335", List()),Label('P'),TermAppl("s17847317", List())), CGRef(SymbolicName("Var", "x17849359"),TermAppl("s17847335", List())), CGRef(SymbolicName("Var", "x17850297"),TermAppl("s17847335", List())), CGRef(SymbolicName("Var", "x17852110"),TermAppl("s17847335", List())), CGRef(SymbolicName("Var", "x17852274"),TermAppl("s17847335", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17849359"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x17850297"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x17852110"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17852274"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  if getchar >= getchar then
    not
  else
    not
end)
-----------------------------------
===================================
2016-12-15T11:05:12.154+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s18165077", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x18168987"), TermAppl("Tid", List(Var("x18169000"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x18168742"), TermAppl("Tid", List(Var("x18168759"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x18168616"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s18165095", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18165077", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18165077", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s18165095", List()),Label('P'),TermAppl("s18165077", List())), CGDecl(TermAppl("s18165095", List()),SymbolicName("Type", "x18168742")), CGRef(SymbolicName("Type", "x18168759"),TermAppl("s18165095", List())), CGDecl(TermAppl("s18165095", List()),SymbolicName("Type", "x18168987")), CGRef(SymbolicName("Type", "x18169000"),TermAppl("s18165095", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x18168742"), Var("x18169002")), Binding(SymbolicName("Type", "x18168987"), Var("x18169002")), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x18168759"), SymbolicName("Type", "x18168742")), Tuple2(SymbolicName("Type", "x18169000"), SymbolicName("Type", "x18168742")))),SubtypeRelation(List()),List())),let
  type U_ = n1
  type n1 = n1
 in
  8;
  nil;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:05:15.59+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s18256185", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x18256713"), TermAppl("Var", List(Var("x18256963"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x18256993"), TermAppl("Tid", List(Var("x18257010"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s18256203", List()), "All")), CDistinct(Declarations(TermAppl("s18256383", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18256185", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18256185", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s18256383", List()),Label('P'),TermAppl("s18256185", List())), CGDecl(TermAppl("s18256383", List()),SymbolicName("Var", "x18256713")), CGDirectEdge(TermAppl("s18256203", List()),Label('P'),TermAppl("s18256383", List())), CGRef(SymbolicName("Var", "x18256963"),TermAppl("s18256185", List())), CGDecl(TermAppl("s18256203", List()),SymbolicName("Type", "x18256993")), CGRef(SymbolicName("Type", "x18257010"),TermAppl("s18256203", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x18256993"), Var("x18257012")), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x18256713"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x18256963"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x18257010"), SymbolicName("Type", "x18256993")))),SubtypeRelation(List()),List())),let
  var Z := print
  type n1 = n1
 in
  nil
end)
-----------------------------------
===================================
2016-12-15T11:05:26.589+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s18549393", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x18549620"), TermAppl("Tid", List(Var("x18549633"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x18549641"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x18549658"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s18549411", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18549393", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18549393", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s18549411", List()),Label('P'),TermAppl("s18549393", List())), CGDecl(TermAppl("s18549411", List()),SymbolicName("Type", "x18549620")), CGRef(SymbolicName("Type", "x18549633"),TermAppl("s18549411", List())), CGDecl(TermAppl("s18549411", List()),SymbolicName("Type", "x18549641")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x18549658"),TermAppl("s18549411", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x18549641"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s18549644", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x18549620"), Var("x18549635")))),Resolution(Map(Tuple2(SymbolicName("Type", "x18549633"), SymbolicName("Type", "x18549620")), Tuple2(SymbolicName("Type", "x18549658"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type r = array of string
 in
end)
-----------------------------------
===================================
2016-12-15T11:05:44.124+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s18953938", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x18958265"), TermAppl("Tid", List(Var("x18958282"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18955793"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18958089"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s18953956", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18953938", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18953938", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s18953956", List()),Label('P'),TermAppl("s18953938", List())), CGRef(SymbolicName("Var", "x18955793"),TermAppl("s18953956", List())), CGRef(SymbolicName("Var", "x18958089"),TermAppl("s18953956", List())), CGDecl(TermAppl("s18953956", List()),SymbolicName("Type", "x18958265")), CGRef(SymbolicName("Type", "x18958282"),TermAppl("s18953956", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x18958265"), TermAppl("STRING", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18955793"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x18958089"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x18958282"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type F = string
 in
  print;
  flush;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:05:46.376+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s18998749", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Leq", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x19005309"))), TermAppl("Var", List(Var("x19005473"))))), TermAppl("Int", List(Var("x19002988"))))), TermAppl("Call", List(Var("x19000933"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18998749", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18998749", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19000933"),TermAppl("s18998749", List())), CGRef(SymbolicName("Var", "x19005309"),TermAppl("s18998749", List())), CGRef(SymbolicName("Var", "x19005473"),TermAppl("s18998749", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19000933"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x19005309"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x19005473"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),if (substring <> substring) <= 3 then
  flush())
-----------------------------------
===================================
2016-12-15T11:05:50.352+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s19135553", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s19135571", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s19135553", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19135553", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s19135571", List()),Label('P'),TermAppl("s19135553", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:05:57.558+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s19344232", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x19351387"))), TermAppl("Var", List(Var("x19349516"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x19351085"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x19351818"), TermAppl("Tid", List(Var("x19351831"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x19351839"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x19351881"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x19351847"), TermAppl("Tid", List(Var("x19351877"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x19351788"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s19351409", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s19344232", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19344232", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19349516"),TermAppl("s19344232", List())), CGRef(SymbolicName("Var", "x19351085"),TermAppl("s19344232", List())), CGRef(SymbolicName("Var", "x19351387"),TermAppl("s19344232", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s19351409", List()),Label('P'),TermAppl("s19344232", List())), CGRef(SymbolicName("Var", "x19351788"),TermAppl("s19351409", List())), CGDecl(TermAppl("s19351409", List()),SymbolicName("Type", "x19351818")), CGRef(SymbolicName("Type", "x19351831"),TermAppl("s19351409", List())), CGDecl(TermAppl("s19351409", List()),SymbolicName("Type", "x19351839")), CGDecl(TermAppl("s19351409", List()),SymbolicName("Type", "x19351847")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x19351877"),TermAppl("s19351409", List())), CGRef(SymbolicName("Type", "x19351881"),TermAppl("s19351409", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x19351818"), Var("x19351833")), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x19351847"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x19351839"), TermAppl("ARRAY", List(TermAppl("INT", List()), TermAppl("s19351850", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x19351881"), SymbolicName("Type", "x19351847")), Tuple2(SymbolicName("Var", "x19351788"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x19351387"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x19351877"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x19351831"), SymbolicName("Type", "x19351818")), Tuple2(SymbolicName("Var", "x19351085"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x19349516"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit < exit | substring <> let
  type n1 = n1
  type f = array of n2
  type n2 = int
 in
  substring
end)
-----------------------------------
===================================
2016-12-15T11:06:00.617+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s19456587", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x19459169"))), TermAppl("Int", List(Var("x19461722"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x19461659"))), TermAppl("Var", List(Var("x19462125"))))))))),List(CResolve(SymbolicName("Var", "x19462125"),Var("x19462126")), CTypeOf(Var("x19462126"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s19456587", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19456587", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19461659"),TermAppl("s19456587", List())), CGRef(SymbolicName("Var", "x19462125"),TermAppl("s19456587", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19461659"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(518 <= 0) + (concat >= concat))
-----------------------------------
===================================
2016-12-15T11:06:02.666+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s19524380", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Call", List(Var("x19528016"), TermAppl("Cons", List(TermAppl("String", List(Var("x19528913"))), TermAppl("Nil", List()))))), TermAppl("Assign", List(TermAppl("Var", List(Var("x19528742"))), TermAppl("Var", List(Var("x19528691"))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s19524380", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19524380", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19528016"),TermAppl("s19524380", List())), CGRef(SymbolicName("Var", "x19528691"),TermAppl("s19524380", List())), CGRef(SymbolicName("Var", "x19528742"),TermAppl("s19524380", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19528016"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x19528691"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x19528742"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),print("\n") <> (substring := substring))
-----------------------------------
===================================
2016-12-15T11:06:22.33+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20073726", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Uminus", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x20082570"))), TermAppl("Int", List(Var("x20082970"))))))), TermAppl("Gt", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x20081094"))), TermAppl("Var", List(Var("x20080458"))))), TermAppl("Int", List(Var("x20076818"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20073726", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20073726", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20080458"),TermAppl("s20073726", List())), CGRef(SymbolicName("Var", "x20081094"),TermAppl("s20073726", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20080458"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x20081094"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),- (9 <= 861) - ((exit <> exit) > 83))
-----------------------------------
===================================
2016-12-15T11:06:22.594+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s20083079", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x20088688"), TermAppl("Tid", List(Var("x20088708"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x20083380"), TermAppl("Var", List(Var("x20087819"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x20088712"), TermAppl("Tid", List(Var("x20088725"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20088661"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s20083097", List()), "All")), CDistinct(Declarations(TermAppl("s20083252", List()), "All")), CDistinct(Declarations(TermAppl("s20083289", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s20083079", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20083079", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s20083252", List()),Label('P'),TermAppl("s20083079", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s20083289", List()),Label('P'),TermAppl("s20083252", List())), CGDirectEdge(TermAppl("s20083097", List()),Label('P'),TermAppl("s20083289", List())), CGDecl(TermAppl("s20083289", List()),SymbolicName("Var", "x20083380")), CGRef(SymbolicName("Var", "x20087819"),TermAppl("s20083252", List())), CGRef(SymbolicName("Var", "x20088661"),TermAppl("s20083097", List())), CGDecl(TermAppl("s20083252", List()),SymbolicName("Type", "x20088688")), CGRef(SymbolicName("Type", "x20088708"),TermAppl("s20083252", List())), CGDecl(TermAppl("s20083097", List()),SymbolicName("Type", "x20088712")), CGRef(SymbolicName("Type", "x20088725"),TermAppl("s20083097", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x20088712"), Var("x20088727")), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x20083380"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x20088688"), TermAppl("STRING", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20087819"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x20088661"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x20088708"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x20088725"), SymbolicName("Type", "x20088712")))),SubtypeRelation(List()),List())),let
  type P = string
  var x_x1_ := chr
  type n1 = n1
 in
  ord;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:06:36.52+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20450530")), List(TermAppl("s20447361", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x20447722"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20450000"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20450164"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20450346"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20450528"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s20447379", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s20447361", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20447361", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s20447379", List()),Label('P'),TermAppl("s20447361", List())), CGRef(SymbolicName("Var", "x20447722"),TermAppl("s20447379", List())), CGRef(SymbolicName("Var", "x20450000"),TermAppl("s20447379", List())), CGRef(SymbolicName("Var", "x20450164"),TermAppl("s20447379", List())), CGRef(SymbolicName("Var", "x20450346"),TermAppl("s20447379", List())), CGRef(SymbolicName("Var", "x20450528"),TermAppl("s20447379", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20450164"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x20450346"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20450528"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20450000"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x20447722"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  not;
  chr;
  exit;
  getchar;
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:06:55.292+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20922535")), List(TermAppl("s20922525", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x20924016"))), TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x20926023"), TermAppl("Tid", List(Var("x20926061"))), TermAppl("String", List(Var("x20927764"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x20929484"), TermAppl("Var", List(Var("x20929643"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x20929461"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20929825"))), TermAppl("Cons", List(TermAppl("String", List(Var("x20930005"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CDistinct(Declarations(TermAppl("s20922707", List()), "All")), CDistinct(Declarations(TermAppl("s20926001", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s20922525", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20922525", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Type", "x20924016"),TermAppl("s20922525", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s20926001", List()),Label('P'),TermAppl("s20922525", List())), CGDecl(TermAppl("s20926001", List()),SymbolicName("Var", "x20926023")), CGRef(SymbolicName("Type", "x20926061"),TermAppl("s20922525", List())), CGDirectEdge(TermAppl("s20922707", List()),Label('P'),TermAppl("s20926001", List())), CGRef(SymbolicName("Var", "x20929461"),TermAppl("s20922707", List())), CGDecl(TermAppl("s20922707", List()),SymbolicName("Var", "x20929484")), CGRef(SymbolicName("Var", "x20929643"),TermAppl("s20926001", List())), CGRef(SymbolicName("Var", "x20929825"),TermAppl("s20922707", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x20926023"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x20929484"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x20926061"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x20929643"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x20929461"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x20929825"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Type", "x20924016"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),string[nil = nil] of let
  var N570W : string := "\t\t"
  var K := substring
 in
  (
    print;
    size;
    "\\"
  )
end)
-----------------------------------
===================================
2016-12-15T11:07:23.203+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21707967")), List(TermAppl("s21707202", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x21707411"), TermAppl("Tid", List(Var("x21707424"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x21707978"), TermAppl("Tid", List(Var("x21707995"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x21707601"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x21707783"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x21707965"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s21707220", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s21707202", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21707202", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s21707220", List()),Label('P'),TermAppl("s21707202", List())), CGDecl(TermAppl("s21707220", List()),SymbolicName("Type", "x21707411")), CGRef(SymbolicName("Type", "x21707424"),TermAppl("s21707220", List())), CGRef(SymbolicName("Var", "x21707601"),TermAppl("s21707220", List())), CGRef(SymbolicName("Var", "x21707783"),TermAppl("s21707220", List())), CGRef(SymbolicName("Var", "x21707965"),TermAppl("s21707220", List())), CGDecl(TermAppl("s21707220", List()),SymbolicName("Type", "x21707978")), CGRef(SymbolicName("Type", "x21707995"),TermAppl("s21707220", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x21707411"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x21707978"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x21707995"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x21707783"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x21707965"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x21707424"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x21707601"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  type m = string
  type oV = int
 in
  flush;
  size;
  exit
end)
-----------------------------------
===================================
2016-12-15T11:07:31.553+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x21969608")), List(TermAppl("s21969598", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x21969767"))), TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Int", List(Var("x21971865"))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s21969598", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21969598", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x21969767"),TermAppl("s21969598", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x21969767"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int[nil > nil] of 73)
-----------------------------------
===================================
2016-12-15T11:07:37.014+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22095365")), List(TermAppl("s22089282", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x22089643"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22089825"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22090007"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22095181"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22092775"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22095017"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22095363"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s22089300", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s22089282", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22089282", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s22089300", List()),Label('P'),TermAppl("s22089282", List())), CGRef(SymbolicName("Var", "x22089643"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22089825"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22090007"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22092775"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22095017"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22095181"),TermAppl("s22089300", List())), CGRef(SymbolicName("Var", "x22095363"),TermAppl("s22089300", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22092775"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x22090007"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x22095363"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x22089825"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x22095181"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x22089643"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x22095017"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  print;
  concat;
  size;
  ord;
  chr;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:08:12.75+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23152852")), List(TermAppl("s23150191", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x23152678"), TermAppl("Tid", List(Var("x23152691"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x23152666"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x23152850"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s23150209", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s23150191", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23150191", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s23150209", List()),Label('P'),TermAppl("s23150191", List())), CGRef(SymbolicName("Var", "x23152666"),TermAppl("s23150209", List())), CGDecl(TermAppl("s23150209", List()),SymbolicName("Type", "x23152678")), CGRef(SymbolicName("Type", "x23152691"),TermAppl("s23150209", List())), CGRef(SymbolicName("Var", "x23152850"),TermAppl("s23150209", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x23152678"), Var("x23152693")), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23152666"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x23152691"), SymbolicName("Type", "x23152678")), Tuple2(SymbolicName("Var", "x23152850"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  print;
  size
end)
-----------------------------------
===================================
2016-12-15T11:08:13.631+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s23176681", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Or", List(TermAppl("Var", List(Var("x23183892"))), TermAppl("Var", List(Var("x23181965"))))), TermAppl("Geq", List(TermAppl("Int", List(Var("x23183059"))), TermAppl("Int", List(Var("x23183955"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23176681", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23176681", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23181965"),TermAppl("s23176681", List())), CGRef(SymbolicName("Var", "x23183892"),TermAppl("s23176681", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23181965"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x23183892"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat | concat) < (3 >= 66))
-----------------------------------
===================================
2016-12-15T11:08:19.761+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s23378974", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x23379335"))), TermAppl("Cons", List(TermAppl("String", List(Var("x23379515"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s23378992", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s23378974", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23378974", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s23378992", List()),Label('P'),TermAppl("s23378974", List())), CGRef(SymbolicName("Var", "x23379335"),TermAppl("s23378992", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23379335"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  ""
end)
-----------------------------------
===================================
2016-12-15T11:08:56.527+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s24384728", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s24384746", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s24384728", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24384728", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s24384746", List()),Label('P'),TermAppl("s24384728", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:08:58.994+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s24452410", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s24452428", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s24452410", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24452410", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s24452428", List()),Label('P'),TermAppl("s24452410", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:09:09.092+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24766696")), List(TermAppl("s24765969", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x24766229"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x24766694"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s24765987", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s24765969", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24765969", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s24765987", List()),Label('P'),TermAppl("s24765969", List())), CGRef(SymbolicName("Var", "x24766694"),TermAppl("s24765987", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x24766694"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  9;
  nil;
  exit
end)
-----------------------------------
===================================
2016-12-15T11:09:40.56+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25682203")), List(TermAppl("s25679856", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x25682231"), TermAppl("Tid", List(Var("x25682518"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x25682534"), TermAppl("Tid", List(Var("x25682564"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x25682526"), TermAppl("Tid", List(Var("x25682547"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x25682551"), TermAppl("Tid", List(Var("x25682577"))))), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25682500"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25682201"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s25679874", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s25679856", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25679856", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s25679874", List()),Label('P'),TermAppl("s25679856", List())), CGRef(SymbolicName("Var", "x25682201"),TermAppl("s25679874", List())), CGDecl(TermAppl("s25679874", List()),SymbolicName("Type", "x25682231")), CGRef(SymbolicName("Var", "x25682500"),TermAppl("s25679874", List())), CGRef(SymbolicName("Type", "x25682518"),TermAppl("s25679874", List())), CGDecl(TermAppl("s25679874", List()),SymbolicName("Type", "x25682526")), CGDecl(TermAppl("s25679874", List()),SymbolicName("Type", "x25682534")), CGRef(SymbolicName("Type", "x25682547"),TermAppl("s25679874", List())), CGDecl(TermAppl("s25679874", List()),SymbolicName("Type", "x25682551")), CGRef(SymbolicName("Type", "x25682564"),TermAppl("s25679874", List())), CGRef(SymbolicName("Type", "x25682577"),TermAppl("s25679874", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x25682551"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x25682526"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x25682534"), TermAppl("STRING", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x25682231"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25682201"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x25682564"), SymbolicName("Type", "x25682551")), Tuple2(SymbolicName("Type", "x25682547"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x25682577"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x25682518"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x25682500"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  type L = int
  type C = n1
  type I__ = int
  type n1 = string
 in
  flush;
  print
end)
-----------------------------------
===================================
2016-12-15T11:09:44.634+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s25798206", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s25798224", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s25798206", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25798206", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s25798224", List()),Label('P'),TermAppl("s25798206", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:10:11.749+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26605293")), List(TermAppl("s26605283", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x26605452"))), TermAppl("Uminus", List(TermAppl("Minus", List(TermAppl("Lt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Call", List(Var("x26609012"), TermAppl("Cons", List(TermAppl("String", List(Var("x26609834"))), TermAppl("Nil", List()))))))))), TermAppl("Call", List(Var("x26606280"), TermAppl("Nil", List()))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s26605283", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26605283", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x26605452"),TermAppl("s26605283", List())), CGRef(SymbolicName("Var", "x26606280"),TermAppl("s26605283", List())), CGRef(SymbolicName("Var", "x26609012"),TermAppl("s26605283", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x26605452"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x26606280"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x26609012"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),string[- ((nil < nil) - size("\t"))] of getchar())
-----------------------------------
===================================
2016-12-15T11:10:15.885+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26748782")), List(TermAppl("s26745635", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x26745837"), TermAppl("Var", List(Var("x26746976"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x26748843"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x26748780"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s26745653", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26745635", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26745635", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26745653", List()),Label('P'),TermAppl("s26745635", List())), CGDecl(TermAppl("s26745653", List()),SymbolicName("Var", "x26745837")), CGRef(SymbolicName("Var", "x26746976"),TermAppl("s26745635", List())), CGRef(SymbolicName("Var", "x26748780"),TermAppl("s26745653", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x26745837"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x26746976"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x26748780"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  var i := getchar
 in
  66;
  print
end)
-----------------------------------
===================================
2016-12-15T11:10:46.757+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27711868")), List(TermAppl("s27711141", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x27711502"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27711684"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27711866"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s27711159", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27711141", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27711141", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27711159", List()),Label('P'),TermAppl("s27711141", List())), CGRef(SymbolicName("Var", "x27711502"),TermAppl("s27711159", List())), CGRef(SymbolicName("Var", "x27711684"),TermAppl("s27711159", List())), CGRef(SymbolicName("Var", "x27711866"),TermAppl("s27711159", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27711502"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x27711684"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x27711866"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  chr;
  ord
end)
-----------------------------------
===================================
2016-12-15T11:10:52.001+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s27873177", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x27873538"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s27873195", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27873177", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27873177", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27873195", List()),Label('P'),TermAppl("s27873177", List())), CGRef(SymbolicName("Var", "x27873538"),TermAppl("s27873195", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27873538"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:10:57.956+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s28054802", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x28061418"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x28061355"))), TermAppl("Var", List(Var("x28062209"))))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x28062272"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s28054802", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28054802", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x28061355"),TermAppl("s28054802", List())), CGRef(SymbolicName("Var", "x28062209"),TermAppl("s28054802", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28061355"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x28062209"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(6 <= (getchar <= getchar)) >= - 51)
-----------------------------------
===================================
2016-12-15T11:11:19.97+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s28647936", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Call", List(Var("x28652893"), TermAppl("Nil", List()))), As(Var("x28648142"),TermAppl("For", List(TermAppl("Var", List(Var("x28648143"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x28657053"))), TermAppl("Var", List(Var("x28657217"))))), TermAppl("Int", List(Var("x28650687"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("IfThen", List(TermAppl("Var", List(Var("x28654711"))), TermAppl("Call", List(Var("x28653608"), TermAppl("Cons", List(TermAppl("Int", List(Var("x28654781"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List())))))))))))),List(CDistinct(Declarations(TermAppl("s28649931", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s28647936", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28647936", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s28648140", List()),Label('P'),TermAppl("s28647936", List())), CGDecl(TermAppl("s28648140", List()),SymbolicName("Var", "x28648143")), CGDecl(TermAppl("s28648140", List()),SymbolicName("Loop", "n28648147")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s28649931", List()),Label('P'),TermAppl("s28648140", List())), CGRef(SymbolicName("Var", "x28652893"),TermAppl("s28647936", List())), CGRef(SymbolicName("Var", "x28653608"),TermAppl("s28649931", List())), CGRef(SymbolicName("Var", "x28654711"),TermAppl("s28649931", List())), CGRef(SymbolicName("Var", "x28657053"),TermAppl("s28647936", List())), CGRef(SymbolicName("Var", "x28657217"),TermAppl("s28647936", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x28648143"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28657053"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x28657217"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x28654711"), SymbolicName("Var", "x28648143")), Tuple2(SymbolicName("Var", "x28652893"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x28653608"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),flush() < (for n1 := ord > ord to 292667 do
  let
   in
    if n1 then
      exit(8)
  end))
-----------------------------------
===================================
2016-12-15T11:11:21.101+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s28697649", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Int", List(Var("x28698249"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x28700464"), TermAppl("Var", List(Var("x28700899"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x28700223"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x28701063"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s28697831", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s28697649", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28697649", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s28697831", List()),Label('P'),TermAppl("s28697649", List())), CGRef(SymbolicName("Var", "x28700223"),TermAppl("s28697831", List())), CGDecl(TermAppl("s28697831", List()),SymbolicName("Var", "x28700464")), CGRef(SymbolicName("Var", "x28700899"),TermAppl("s28697649", List())), CGRef(SymbolicName("Var", "x28701063"),TermAppl("s28697831", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x28700464"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28700223"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x28700899"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x28701063"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),94949701 + let
  var pN := flush
 in
  chr <= (
    chr
  )
end)
-----------------------------------
===================================
2016-12-15T11:11:38.247+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s29140959", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Geq", List(TermAppl("If", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x29153478"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x29152725"))), TermAppl("Var", List(Var("x29155632"))))), TermAppl("If", List(TermAppl("Int", List(Var("x29154477"))), TermAppl("Var", List(Var("x29154414"))), TermAppl("Var", List(Var("x29155796"))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s29147157", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s29140959", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29140959", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x29152725"),TermAppl("s29140959", List())), CGDirectEdge(TermAppl("s29147157", List()),Label('P'),TermAppl("s29140959", List())), CGRef(SymbolicName("Var", "x29153478"),TermAppl("s29140959", List())), CGRef(SymbolicName("Var", "x29154414"),TermAppl("s29140959", List())), CGRef(SymbolicName("Var", "x29155632"),TermAppl("s29140959", List())), CGRef(SymbolicName("Var", "x29155796"),TermAppl("s29140959", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29155796"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29152725"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29155632"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29154414"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29153478"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if (if nil <= (
  chr;
  nil
) then
  substring
else
  substring) >= (if 90765 then
  substring
else
  substring) then
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T11:12:10.249+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s30018835", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x30021009"))), TermAppl("Var", List(Var("x30021173"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s30018853", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s30018835", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30018835", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s30018853", List()),Label('P'),TermAppl("s30018835", List())), CGRef(SymbolicName("Var", "x30021009"),TermAppl("s30018853", List())), CGRef(SymbolicName("Var", "x30021173"),TermAppl("s30018853", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x30021009"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x30021173"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  print >= print
end)
-----------------------------------
===================================
2016-12-15T11:12:28.763+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x30576750")), List(TermAppl("s30574692", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x30576764"), TermAppl("Tid", List(Var("x30576784"))), TermAppl("String", List(Var("x30576941"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x30576748"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s30574710", List()), "All")), CDistinct(Declarations(TermAppl("s30574911", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s30574692", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30574692", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s30574710", List()),Label('P'),TermAppl("s30574692", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s30574911", List()),Label('P'),TermAppl("s30574710", List())), CGRef(SymbolicName("Var", "x30576748"),TermAppl("s30574911", List())), CGDecl(TermAppl("s30574911", List()),SymbolicName("Var", "x30576764")), CGRef(SymbolicName("Type", "x30576784"),TermAppl("s30574710", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x30576764"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x30576748"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x30576784"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
 in
  let
    var K : string := "\350\t"
   in
    exit
  end
end)
-----------------------------------
===================================
2016-12-15T11:12:36.318+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s30812915", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s30812933", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s30812915", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s30812915", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s30812933", List()),Label('P'),TermAppl("s30812915", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:12:44.441+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s31027663", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("And", List(TermAppl("Var", List(Var("x31033089"))), TermAppl("Var", List(Var("x31031054"))))), TermAppl("And", List(TermAppl("Var", List(Var("x31032925"))), TermAppl("Var", List(Var("x31032623"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s31027663", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31027663", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x31031054"),TermAppl("s31027663", List())), CGRef(SymbolicName("Var", "x31032623"),TermAppl("s31027663", List())), CGRef(SymbolicName("Var", "x31032925"),TermAppl("s31027663", List())), CGRef(SymbolicName("Var", "x31033089"),TermAppl("s31027663", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31031054"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x31032623"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x31032925"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x31033089"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(size & size) - (size & ord))
-----------------------------------
===================================
2016-12-15T11:12:57.925+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x31451448")), List(TermAppl("s31449591", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x31451469"), TermAppl("Var", List(Var("x31451628"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x31451446"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s31449609", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s31449591", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31449591", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s31449609", List()),Label('P'),TermAppl("s31449591", List())), CGRef(SymbolicName("Var", "x31451446"),TermAppl("s31449609", List())), CGDecl(TermAppl("s31449609", List()),SymbolicName("Var", "x31451469")), CGRef(SymbolicName("Var", "x31451628"),TermAppl("s31449591", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x31451469"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31451446"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x31451628"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
  var O0 := substring
 in
  ord
end)
-----------------------------------
===================================
2016-12-15T11:13:13.489+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s31903528", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x31903889"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x31904071"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s31903546", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s31903528", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s31903528", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s31903546", List()),Label('P'),TermAppl("s31903528", List())), CGRef(SymbolicName("Var", "x31903889"),TermAppl("s31903546", List())), CGRef(SymbolicName("Var", "x31904071"),TermAppl("s31903546", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x31903889"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x31904071"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  exit;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:13:35.449+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s32486891", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x32490326"))), TermAppl("Var", List(Var("x32490162"))))), TermAppl("Call", List(Var("x32487884"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32486891", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32486891", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x32487884"),TermAppl("s32486891", List())), CGRef(SymbolicName("Var", "x32490162"),TermAppl("s32486891", List())), CGRef(SymbolicName("Var", "x32490326"),TermAppl("s32486891", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x32487884"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x32490162"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x32490326"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),if not = not then
  flush())
-----------------------------------
===================================
2016-12-15T11:13:37.547+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s32559632", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Int", List(Var("x32563386"))), TermAppl("Times", List(TermAppl("Int", List(Var("x32563744"))), TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s32559632", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s32559632", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),052 + 441 * (nil <= nil))
-----------------------------------
===================================
2016-12-15T11:13:57.794+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s33164265", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Divide", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x33166056"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x33167228"))), TermAppl("Cons", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x33169205"))), TermAppl("Var", List(Var("x33169369"))))), TermAppl("Nil", List()))))))))), TermAppl("Int", List(Var("x33165756"))))), TermAppl("Int", List(Var("x33165398"))))))),List(CDistinct(Declarations(TermAppl("s33164805", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s33164265", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33164265", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s33164805", List()),Label('P'),TermAppl("s33164265", List())), CGRef(SymbolicName("Var", "x33167228"),TermAppl("s33164805", List())), CGRef(SymbolicName("Var", "x33169205"),TermAppl("s33164805", List())), CGRef(SymbolicName("Var", "x33169369"),TermAppl("s33164805", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33167228"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x33169205"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x33169369"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  ord;
  getchar = getchar
end / 702 - 23)
-----------------------------------
===================================
2016-12-15T11:14:05.98+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s33412779", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("If", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x33418771"))), TermAppl("Var", List(Var("x33421179"))))), TermAppl("Var", List(Var("x33420739"))), TermAppl("Var", List(Var("x33421481"))))), TermAppl("Var", List(Var("x33421645"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s33412779", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33412779", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x33418771"),TermAppl("s33412779", List())), CGRef(SymbolicName("Var", "x33420739"),TermAppl("s33412779", List())), CGRef(SymbolicName("Var", "x33421179"),TermAppl("s33412779", List())), CGRef(SymbolicName("Var", "x33421481"),TermAppl("s33412779", List())), CGRef(SymbolicName("Var", "x33421645"),TermAppl("s33412779", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33418771"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x33421481"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x33421179"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x33420739"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x33421645"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(if ord > ord then
  substring
else
  substring) & substring)
-----------------------------------
===================================
2016-12-15T11:14:09.588+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s33531835", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x33534456"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x33534292"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x33534638"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x33536968"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x33538835"))), TermAppl("Cons", List(TermAppl("String", List(Var("x33538770"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s33531853", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s33531835", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33531835", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s33531853", List()),Label('P'),TermAppl("s33531835", List())), CGRef(SymbolicName("Var", "x33534292"),TermAppl("s33531853", List())), CGRef(SymbolicName("Var", "x33534456"),TermAppl("s33531853", List())), CGRef(SymbolicName("Var", "x33534638"),TermAppl("s33531853", List())), CGRef(SymbolicName("Var", "x33536968"),TermAppl("s33531853", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x33534292"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x33534456"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x33534638"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x33536968"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  not;
  concat;
  ord;
  0;
  ""
end)
-----------------------------------
===================================
2016-12-15T11:14:09.775+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s33546421", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s33546439", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s33546421", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s33546421", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s33546439", List()),Label('P'),TermAppl("s33546421", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:14:35.893+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x34346937")), List(TermAppl("s34341040", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x34343983"), TermAppl("Tid", List(Var("x34346712"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x34346948"), TermAppl("Tid", List(Var("x34346961"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x34346694"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x34343953"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x34346935"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s34341058", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s34341040", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34341040", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s34341058", List()),Label('P'),TermAppl("s34341040", List())), CGRef(SymbolicName("Var", "x34343953"),TermAppl("s34341058", List())), CGDecl(TermAppl("s34341058", List()),SymbolicName("Type", "x34343983")), CGRef(SymbolicName("Var", "x34346694"),TermAppl("s34341058", List())), CGRef(SymbolicName("Type", "x34346712"),TermAppl("s34341058", List())), CGRef(SymbolicName("Var", "x34346935"),TermAppl("s34341058", List())), CGDecl(TermAppl("s34341058", List()),SymbolicName("Type", "x34346948")), CGRef(SymbolicName("Type", "x34346961"),TermAppl("s34341058", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x34346948"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x34343983"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34346694"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x34346712"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x34343953"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x34346935"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x34346961"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type Yh = string
  type T = int
 in
  print;
  size;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:14:45.882+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s34645692", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x34651532"))), TermAppl("Var", List(Var("x34651696"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x34649719"))), TermAppl("Var", List(Var("x34649083"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s34645692", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34645692", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x34649083"),TermAppl("s34645692", List())), CGRef(SymbolicName("Var", "x34649719"),TermAppl("s34645692", List())), CGRef(SymbolicName("Var", "x34651532"),TermAppl("s34645692", List())), CGRef(SymbolicName("Var", "x34651696"),TermAppl("s34645692", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x34649083"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x34649719"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x34651532"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x34651696"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(exit > exit) * (flush = flush))
-----------------------------------
===================================
2016-12-15T11:14:51.065+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s34800124", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s34800142", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s34800124", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s34800124", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s34800142", List()),Label('P'),TermAppl("s34800124", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:15:00.917+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s35098651", List())), State(TermAppl("Mod", List(As(Var("x35098693"),TermAppl("For", List(TermAppl("Var", List(Var("x35098694"))), TermAppl("Int", List(Var("x35099395"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x35102744"))), TermAppl("Var", List(Var("x35102580"))))), TermAppl("Call", List(Var("x35100188"), TermAppl("Cons", List(TermAppl("String", List(Var("x35102920"))), TermAppl("Nil", List())))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s35098651", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35098651", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s35098691", List()),Label('P'),TermAppl("s35098651", List())), CGDecl(TermAppl("s35098691", List()),SymbolicName("Var", "x35098694")), CGDecl(TermAppl("s35098691", List()),SymbolicName("Loop", "n35098698")), CGRef(SymbolicName("Var", "x35100188"),TermAppl("s35098691", List())), CGRef(SymbolicName("Var", "x35102580"),TermAppl("s35098651", List())), CGRef(SymbolicName("Var", "x35102744"),TermAppl("s35098651", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x35098694"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35100188"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x35102580"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x35102744"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),for lZ_ := 65 to getchar <= getchar do
  print(""))
-----------------------------------
===================================
2016-12-15T11:15:06.516+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s35274390", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Divide", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Leq", List(TermAppl("Var", List(Var("x35283785"))), TermAppl("Var", List(Var("x35283319"))))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x35281750"))), TermAppl("Var", List(Var("x35283621"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s35274390", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35274390", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x35281750"),TermAppl("s35274390", List())), CGRef(SymbolicName("Var", "x35283319"),TermAppl("s35274390", List())), CGRef(SymbolicName("Var", "x35283621"),TermAppl("s35274390", List())), CGRef(SymbolicName("Var", "x35283785"),TermAppl("s35274390", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x35281750"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x35283319"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x35283621"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x35283785"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),(nil <= nil) / (not <= not) * (ord <> ord))
-----------------------------------
===================================
2016-12-15T11:15:25.612+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x35830142")), List(TermAppl("s35825520", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x35825959"), TermAppl("Var", List(Var("x35827134"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x35830163"), TermAppl("Var", List(Var("x35832562"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x35832398"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x35830140"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s35825538", List()), "All")), CDistinct(Declarations(TermAppl("s35825911", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s35825520", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35825520", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s35825911", List()),Label('P'),TermAppl("s35825520", List())), CGDirectEdge(TermAppl("s35825538", List()),Label('P'),TermAppl("s35825911", List())), CGDecl(TermAppl("s35825911", List()),SymbolicName("Var", "x35825959")), CGRef(SymbolicName("Var", "x35827134"),TermAppl("s35825520", List())), CGRef(SymbolicName("Var", "x35830140"),TermAppl("s35825538", List())), CGDecl(TermAppl("s35825538", List()),SymbolicName("Var", "x35830163")), CGRef(SymbolicName("Var", "x35832398"),TermAppl("s35825538", List())), CGRef(SymbolicName("Var", "x35832562"),TermAppl("s35825911", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x35825959"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x35830163"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x35827134"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x35830140"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x35832398"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x35832562"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  var c := chr
  var u_ := ord
 in
  (
  );
  print;
  not
end)
-----------------------------------
===================================
2016-12-15T11:15:30.559+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s35985215", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x35985417"), TermAppl("String", List(Var("x35985592"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s35985233", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s35985215", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s35985215", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s35985233", List()),Label('P'),TermAppl("s35985215", List())), CGDecl(TermAppl("s35985233", List()),SymbolicName("Var", "x35985417"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x35985417"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
  var j := ""
 in
end)
-----------------------------------
===================================
2016-12-15T11:15:35.756+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x36142387")), List(TermAppl("s36141370", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x36141590"), TermAppl("Var", List(Var("x36142221"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x36142385"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s36141388", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s36141370", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36141370", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s36141388", List()),Label('P'),TermAppl("s36141370", List())), CGDecl(TermAppl("s36141388", List()),SymbolicName("Var", "x36141590")), CGRef(SymbolicName("Var", "x36142221"),TermAppl("s36141370", List())), CGRef(SymbolicName("Var", "x36142385"),TermAppl("s36141388", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x36141590"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36142221"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x36142385"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
  var o_Q := getchar
 in
  concat
end)
-----------------------------------
===================================
2016-12-15T11:15:44.269+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s36373788", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x36376724"))), TermAppl("Var", List(Var("x36376895"))))), TermAppl("Call", List(Var("x36374332"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s36373788", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s36373788", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s36373823", List()),Label('P'),TermAppl("s36373788", List())), CGDecl(TermAppl("s36373823", List()),ConcreteName("Loop", "", 36373827)), CGRef(SymbolicName("Var", "x36374332"),TermAppl("s36373823", List())), CGRef(SymbolicName("Var", "x36376724"),TermAppl("s36373788", List())), CGRef(SymbolicName("Var", "x36376895"),TermAppl("s36373788", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x36374332"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x36376724"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x36376895"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),while concat <> concat do
  flush())
-----------------------------------
===================================
2016-12-15T11:16:24.174+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s37441762", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x37445591"))), TermAppl("Var", List(Var("x37447462"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x37447160"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x37447808"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x37447990"))), TermAppl("Nil", List()))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s37441762", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37441762", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x37445591"),TermAppl("s37441762", List())), CGRef(SymbolicName("Var", "x37447160"),TermAppl("s37441762", List())), CGRef(SymbolicName("Var", "x37447462"),TermAppl("s37441762", List())), CGRef(SymbolicName("Var", "x37447808"),TermAppl("s37441762", List())), CGRef(SymbolicName("Var", "x37447990"),TermAppl("s37441762", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x37447160"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x37445591"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x37447462"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x37447808"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x37447990"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring > substring) / (substring < (
  substring;
  substring
)))
-----------------------------------
===================================
2016-12-15T11:16:27.495+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s37524776", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x37531054"))), TermAppl("Var", List(Var("x37531218"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x37528605"))), TermAppl("Var", List(Var("x37529241"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s37524776", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37524776", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x37528605"),TermAppl("s37524776", List())), CGRef(SymbolicName("Var", "x37529241"),TermAppl("s37524776", List())), CGRef(SymbolicName("Var", "x37531054"),TermAppl("s37524776", List())), CGRef(SymbolicName("Var", "x37531218"),TermAppl("s37524776", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x37528605"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x37529241"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x37531054"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x37531218"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(flush < flush) + (size <> size))
-----------------------------------
===================================
2016-12-15T11:16:33.51+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s37705142", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Divide", List(TermAppl("Int", List(Var("x37709799"))), TermAppl("And", List(TermAppl("Var", List(Var("x37709736"))), TermAppl("Var", List(Var("x37710590"))))))), TermAppl("Leq", List(TermAppl("Times", List(TermAppl("Int", List(Var("x37712794"))), TermAppl("Int", List(Var("x37713152"))))), TermAppl("Int", List(Var("x37712230"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s37705142", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37705142", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x37709736"),TermAppl("s37705142", List())), CGRef(SymbolicName("Var", "x37710590"),TermAppl("s37705142", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x37709736"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x37710590"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),7 / (ord & size) = (89 * 971 <= 08))
-----------------------------------
===================================
2016-12-15T11:16:41.601+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x37972837")), List(TermAppl("s37970672", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x37972855"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x37972906"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x37972859"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x37972889"))))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x37972847"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x37972914"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x37972564"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x37972835"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s37970690", List()), "All")), CDistinct(Declarations(TermAppl("s37970852", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s37970672", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37970672", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s37970852", List()),Label('P'),TermAppl("s37970672", List())), CGDirectEdge(TermAppl("s37970690", List()),Label('P'),TermAppl("s37970852", List())), CGRef(SymbolicName("Var", "x37972564"),TermAppl("s37970690", List())), CGRef(SymbolicName("Var", "x37972835"),TermAppl("s37970690", List())), CGDecl(TermAppl("s37970690", List()),SymbolicName("Type", "x37972847")), CGDecl(TermAppl("s37970852", List()),SymbolicName("Type", "x37972855")), CGDecl(TermAppl("s37970852", List()),SymbolicName("Type", "x37972859")), NewScope(Var("s'")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x37972889"),TermAppl("s37970852", List())), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x37972906"),TermAppl("s37970852", List())), CGRef(SymbolicName("Type", "x37972914"),TermAppl("s37970690", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x37972847"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s37972875", List())))), Binding(SymbolicName("Type", "x37972859"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(TermAppl("INT", List()), TermAppl("s37972892", List()))), TermAppl("s37972862", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x37972855"), TermAppl("ARRAY", List(TermAppl("INT", List()), TermAppl("s37972892", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x37972835"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x37972906"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x37972914"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x37972564"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x37972889"), SymbolicName("Type", "x37972855")))),SubtypeRelation(List()),List())),let
  type n1 = array of int
  type q = array of n1
  type v = array of string
 in
  ord;
  ord
end)
-----------------------------------
===================================
2016-12-15T11:16:41.609+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s37972921", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s37972939", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s37972921", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37972921", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s37972939", List()),Label('P'),TermAppl("s37972921", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:16:42.426+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s37984853", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("And", List(TermAppl("If", List(TermAppl("Int", List(Var("x37994441"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x37996817"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x37998477"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38001373"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38001537"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38001719"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38001901"))), TermAppl("Nil", List()))))))))))))))), TermAppl("Var", List(Var("x37999131"))))), TermAppl("Var", List(Var("x37993912"))))), TermAppl("Divide", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x37989999"))), TermAppl("Var", List(Var("x37989447"))))), TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))))),List(CDistinct(Declarations(TermAppl("s37994840", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s37984853", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s37984853", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x37989447"),TermAppl("s37984853", List())), CGRef(SymbolicName("Var", "x37989999"),TermAppl("s37984853", List())), CGRef(SymbolicName("Var", "x37993912"),TermAppl("s37984853", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s37994840", List()),Label('P'),TermAppl("s37984853", List())), CGRef(SymbolicName("Var", "x37996817"),TermAppl("s37994840", List())), CGRef(SymbolicName("Var", "x37998477"),TermAppl("s37994840", List())), CGRef(SymbolicName("Var", "x37999131"),TermAppl("s37984853", List())), CGRef(SymbolicName("Var", "x38001373"),TermAppl("s37994840", List())), CGRef(SymbolicName("Var", "x38001537"),TermAppl("s37994840", List())), CGRef(SymbolicName("Var", "x38001719"),TermAppl("s37994840", List())), CGRef(SymbolicName("Var", "x38001901"),TermAppl("s37994840", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x37989447"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x37998477"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x38001373"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x38001719"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x37989999"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x38001537"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x38001901"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x37993912"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x37996817"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x37999131"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),((if 9 then
  let
   in
    substring;
    flush;
    print;
    ord;
    ord;
    exit
  end
else
  exit) & exit) = (getchar <= getchar) / (nil <> nil))
-----------------------------------
===================================
2016-12-15T11:16:55.083+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s38410014", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Call", List(Var("x38411007"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s38410014", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s38410014", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x38411007"),TermAppl("s38410014", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x38411007"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if nil & nil then
  flush())
-----------------------------------
===================================
2016-12-15T11:17:00.434+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s38577279", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x38581563"))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x38580727"), TermAppl("Cons", List(TermAppl("String", List(Var("x38584864"))), TermAppl("Nil", List()))))))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x38583949"))), TermAppl("Var", List(Var("x38585037"))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s38577279", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s38577279", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x38580727"),TermAppl("s38577279", List())), CGRef(SymbolicName("Var", "x38583949"),TermAppl("s38577279", List())), CGRef(SymbolicName("Var", "x38585037"),TermAppl("s38577279", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x38580727"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x38583949"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x38585037"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(8 <= - ord("\"")) - (ord = ord))
-----------------------------------
===================================
2016-12-15T11:17:03.543+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s38671743", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x38679768"))), TermAppl("Nil", List()))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x38677188"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x38673539"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38676248"))), TermAppl("Cons", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x38679687"))), TermAppl("Var", List(Var("x38679523"))))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s38671925", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s38671743", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s38671743", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s38671925", List()),Label('P'),TermAppl("s38671743", List())), CGRef(SymbolicName("Var", "x38676248"),TermAppl("s38671925", List())), CGRef(SymbolicName("Var", "x38677188"),TermAppl("s38671925", List())), CGRef(SymbolicName("Var", "x38679523"),TermAppl("s38671925", List())), CGRef(SymbolicName("Var", "x38679687"),TermAppl("s38671925", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x38676248"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x38677188"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x38679523"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x38679687"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(
  493
) + let
 in
  exit;
  2;
  size;
  print <= print
end)
-----------------------------------
===================================
2016-12-15T11:17:10.203+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s38886970", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("If", List(TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x38895966"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x38896312"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x38894296"))))), TermAppl("Var", List(Var("x38892451"))), TermAppl("Var", List(Var("x38895038"))))), TermAppl("Var", List(Var("x38896130"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s38886970", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s38886970", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x38892451"),TermAppl("s38886970", List())), CGRef(SymbolicName("Var", "x38894296"),TermAppl("s38886970", List())), CGRef(SymbolicName("Var", "x38895038"),TermAppl("s38886970", List())), CGRef(SymbolicName("Var", "x38895966"),TermAppl("s38886970", List())), CGRef(SymbolicName("Var", "x38896130"),TermAppl("s38886970", List())), CGRef(SymbolicName("Var", "x38896312"),TermAppl("s38886970", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x38892451"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x38894296"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x38896130"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x38895966"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x38896312"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x38895038"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(if (
  getchar;
  flush
) <> flush then
  ord
else
  size) < size)
-----------------------------------
===================================
2016-12-15T11:17:14.724+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s39037813", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s39037831", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s39037813", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s39037813", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s39037831", List()),Label('P'),TermAppl("s39037813", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:17:15.417+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s39052608", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x39059112"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x39060040"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x39062646"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x39062482"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x39062828"))), TermAppl("Nil", List()))))))))))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x39058202"))), TermAppl("Var", List(Var("x39060204"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s39052608", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s39052608", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x39058202"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39059112"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39060040"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39060204"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39062482"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39062646"),TermAppl("s39052608", List())), CGRef(SymbolicName("Var", "x39062828"),TermAppl("s39052608", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x39059112"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x39062828"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x39060204"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x39058202"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x39062646"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x39062482"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x39060040"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(size > (
  size;
  concat;
  print;
  size
)) - (flush >= flush))
-----------------------------------
===================================
2016-12-15T11:17:37.143+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s39631746", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Var", List(Var("x39634319"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x39634483"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s39631928", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s39631746", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s39631746", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s39631928", List()),Label('P'),TermAppl("s39631746", List())), CGRef(SymbolicName("Var", "x39634319"),TermAppl("s39631746", List())), CGRef(SymbolicName("Var", "x39634483"),TermAppl("s39631928", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x39634319"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x39634483"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord & let
 in
  ord
end)
-----------------------------------
===================================
2016-12-15T11:17:51.434+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s40078575", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x40078795"), TermAppl("Var", List(Var("x40078954"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x40079015"), TermAppl("Var", List(Var("x40079246"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x40079301"), TermAppl("Tid", List(Var("x40079318"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x40079280"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x40079305"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s40078593", List()), "All")), CDistinct(Declarations(TermAppl("s40078766", List()), "All")), CDistinct(Declarations(TermAppl("s40078974", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s40078575", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s40078575", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s40078766", List()),Label('P'),TermAppl("s40078575", List())), CGDecl(TermAppl("s40078766", List()),SymbolicName("Var", "x40078795")), CGRef(SymbolicName("Var", "x40078954"),TermAppl("s40078575", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s40078974", List()),Label('P'),TermAppl("s40078766", List())), CGDirectEdge(TermAppl("s40078593", List()),Label('P'),TermAppl("s40078974", List())), CGDecl(TermAppl("s40078974", List()),SymbolicName("Var", "x40079015")), CGRef(SymbolicName("Var", "x40079246"),TermAppl("s40078766", List())), CGDecl(TermAppl("s40078593", List()),SymbolicName("Type", "x40079280")), NewScope(Var("s'")), CGDecl(TermAppl("s40078593", List()),SymbolicName("Type", "x40079301")), CGRef(SymbolicName("Type", "x40079305"),TermAppl("s40078593", List())), CGRef(SymbolicName("Type", "x40079318"),TermAppl("s40078593", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x40079301"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s40079287", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x40079015"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x40078795"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x40079280"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s40079287", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x40078954"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x40079246"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x40079305"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x40079318"), SymbolicName("Type", "x40079280")))),SubtypeRelation(List()),List())),let
  var Y := chr
  var f3 := substring
  type i = n1
  type n1 = array of string
 in
end)
-----------------------------------
===================================
2016-12-15T11:17:52.583+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s40122418", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s40122436", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s40122418", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s40122418", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s40122436", List()),Label('P'),TermAppl("s40122418", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:18:15.904+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s40821401", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x40834432"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x40831914"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x40835178"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x40835360"))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x40834996"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x40828888"))), TermAppl("Var", List(Var("x40834832"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s40821401", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s40821401", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x40828888"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40831914"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40834432"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40834832"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40834996"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40835178"),TermAppl("s40821401", List())), CGRef(SymbolicName("Var", "x40835360"),TermAppl("s40821401", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x40835360"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x40834832"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x40834996"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x40831914"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x40828888"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x40834432"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x40835178"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),((
  exit;
  chr;
  concat;
  print
) < print) >= (getchar <= getchar))
-----------------------------------
===================================
2016-12-15T11:18:16.944+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s40872567", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s40872585", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s40872567", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s40872567", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s40872585", List()),Label('P'),TermAppl("s40872567", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:18:26.541+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s41151298", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Uminus", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x41160279"))), TermAppl("Var", List(Var("x41160443"))))))), TermAppl("Geq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x41160644"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x41158466"))))))))),List(CDistinct(Declarations(TermAppl("s41153293", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s41151298", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s41151298", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x41158466"),TermAppl("s41151298", List())), CGRef(SymbolicName("Var", "x41160279"),TermAppl("s41151298", List())), CGRef(SymbolicName("Var", "x41160443"),TermAppl("s41151298", List())), CGDirectEdge(TermAppl("s41153293", List()),Label('P'),TermAppl("s41151298", List())), CGRef(SymbolicName("Var", "x41160644"),TermAppl("s41153293", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x41158466"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x41160279"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x41160443"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x41160644"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),- (chr <= chr) < (let
 in
  not
end >= not))
-----------------------------------
===================================
2016-12-15T11:18:30.068+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s41260602", List())), State(TermAppl("Mod", List(TermAppl("Or", List(As(Var("x41260808"),TermAppl("For", List(TermAppl("Var", List(Var("x41260809"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x41266780"))), TermAppl("Var", List(Var("x41266259"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x41281459"))), TermAppl("Var", List(Var("x41281101"))))), TermAppl("Call", List(Var("x41263316"), TermAppl("Nil", List())))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x41270845"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x41269711"))), TermAppl("Cons", List(TermAppl("If", List(TermAppl("Int", List(Var("x41281522"))), TermAppl("Call", List(Var("x41278622"), TermAppl("Nil", List()))), TermAppl("Seq", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s41260602", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s41260602", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s41260806", List()),Label('P'),TermAppl("s41260602", List())), CGDecl(TermAppl("s41260806", List()),SymbolicName("Var", "x41260809")), CGDecl(TermAppl("s41260806", List()),SymbolicName("Loop", "n41260813")), CGRef(SymbolicName("Var", "x41263316"),TermAppl("s41260806", List())), CGRef(SymbolicName("Var", "x41266259"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41266780"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41269711"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41270845"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41278622"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41281101"),TermAppl("s41260602", List())), CGRef(SymbolicName("Var", "x41281459"),TermAppl("s41260602", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x41260809"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x41266780"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x41266259"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x41281459"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x41278622"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x41269711"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x41263316"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x41281101"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x41270845"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(for j := not = not to flush = flush do
  flush()) | (
  concat;
  chr;
  if 6 then
    flush()
  else
    (
    )
))
-----------------------------------
===================================
2016-12-15T11:18:51.283+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s41902659", List())), State(TermAppl("Mod", List(As(Var("x41902701"),TermAppl("For", List(TermAppl("Var", List(Var("x41902702"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Minus", List(TermAppl("Lt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Eq", List(TermAppl("Var", List(Var("x41913172"))), TermAppl("Var", List(Var("x41913008"))))))), TermAppl("Nil", List()))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x41907328"))), TermAppl("Var", List(Var("x41906474"))))), As(Var("x41904192"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s41902659", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s41902659", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s41902699", List()),Label('P'),TermAppl("s41902659", List())), CGDecl(TermAppl("s41902699", List()),SymbolicName("Var", "x41902702")), CGDecl(TermAppl("s41902699", List()),SymbolicName("Loop", "n41902706")), CGRef(SymbolicName("Loop", "n41904193"),TermAppl("s41902699", List())), CGRef(SymbolicName("Var", "x41906474"),TermAppl("s41902659", List())), CGRef(SymbolicName("Var", "x41907328"),TermAppl("s41902659", List())), CGRef(SymbolicName("Var", "x41913008"),TermAppl("s41902659", List())), CGRef(SymbolicName("Var", "x41913172"),TermAppl("s41902659", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x41902702"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x41913008"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x41906474"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n41904193"), SymbolicName("Loop", "n41902706")), Tuple2(SymbolicName("Var", "x41907328"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x41913172"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),for g := (
  (nil < nil) - (concat = concat)
) to ord >= size do
  break)
-----------------------------------
===================================
2016-12-15T11:19:04.116+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s42299350", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Neq", List(TermAppl("Call", List(Var("x42307082"), TermAppl("Nil", List()))), TermAppl("Seq", List(TermAppl("Nil", List()))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x42307498"))), TermAppl("Var", List(Var("x42306399"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s42299350", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s42299350", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x42306399"),TermAppl("s42299350", List())), CGRef(SymbolicName("Var", "x42307082"),TermAppl("s42299350", List())), CGRef(SymbolicName("Var", "x42307498"),TermAppl("s42299350", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x42306399"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x42307082"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x42307498"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(flush() <> (
)) <= (concat <> concat))
-----------------------------------
===================================
2016-12-15T11:19:07.247+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s42398046", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x42403166"))), TermAppl("Var", List(Var("x42404104"))))), TermAppl("Plus", List(TermAppl("Int", List(Var("x42400718"))), TermAppl("Neq", List(TermAppl("String", List(Var("x42405915"))), TermAppl("String", List(Var("x42406079"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s42398046", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s42398046", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x42403166"),TermAppl("s42398046", List())), CGRef(SymbolicName("Var", "x42404104"),TermAppl("s42398046", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x42403166"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x42404104"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print >= print | 2 + ("\"\\\"\"\tL" <> "\^L"))
-----------------------------------
===================================
2016-12-15T11:19:30.795+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s43074345", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x43079658"))), TermAppl("Nil", List()))))), TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))), TermAppl("Int", List(Var("x43079476"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s43074345", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s43074345", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),((
  38
) = (nil <> nil)) + 68)
-----------------------------------
===================================
2016-12-15T11:19:47.197+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s43522092", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x43526079"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x43525915"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s43522274", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s43522092", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s43522092", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s43522274", List()),Label('P'),TermAppl("s43522092", List())), CGRef(SymbolicName("Var", "x43525915"),TermAppl("s43522274", List())), CGRef(SymbolicName("Var", "x43526079"),TermAppl("s43522092", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x43525915"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x43526079"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush >= let
 in
  flush
end)
-----------------------------------
===================================
2016-12-15T11:20:00.88+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s43944631", List())), State(TermAppl("Mod", List(As(Var("x43944673"),TermAppl("For", List(TermAppl("Var", List(Var("x43944674"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x43949012"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x43951809"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x43952157"))), TermAppl("Nil", List()))))))))), TermAppl("And", List(TermAppl("Var", List(Var("x43950581"))), TermAppl("Var", List(Var("x43951975"))))), As(Var("x43944844"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s43944631", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s43944631", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s43944671", List()),Label('P'),TermAppl("s43944631", List())), CGDecl(TermAppl("s43944671", List()),SymbolicName("Var", "x43944674")), CGDecl(TermAppl("s43944671", List()),SymbolicName("Loop", "n43944678")), CGRef(SymbolicName("Loop", "n43944845"),TermAppl("s43944671", List())), CGRef(SymbolicName("Var", "x43949012"),TermAppl("s43944631", List())), CGRef(SymbolicName("Var", "x43950581"),TermAppl("s43944631", List())), CGRef(SymbolicName("Var", "x43951975"),TermAppl("s43944631", List())), CGRef(SymbolicName("Var", "x43952157"),TermAppl("s43944631", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x43944674"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x43950581"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x43949012"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x43952157"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Loop", "n43944845"), SymbolicName("Loop", "n43944678")), Tuple2(SymbolicName("Var", "x43951975"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),for ERW := getchar >= (
  "";
  getchar
) to substring & substring do
  break)
-----------------------------------
===================================
2016-12-15T11:20:03.573+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s44031578", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Or", List(TermAppl("String", List(Var("x44034847"))), TermAppl("String", List(Var("x44035011"))))), TermAppl("Call", List(Var("x44032571"), TermAppl("Cons", List(TermAppl("Int", List(Var("x44035090"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s44031578", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s44031578", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x44032571"),TermAppl("s44031578", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x44032571"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if "\n" | "" then
  exit(8))
-----------------------------------
===================================
2016-12-15T11:20:14.303+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s44311578", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x44320318"))), TermAppl("If", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x44318904"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x44325456"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x44325292"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x44327734"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x44327898"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x44328080"))), TermAppl("Nil", List()))))))))))))))))), TermAppl("Var", List(Var("x44317059"))), TermAppl("Var", List(Var("x44319344"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s44311578", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s44311578", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x44317059"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44318904"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44319344"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44320318"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44325292"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44325456"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44327734"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44327898"),TermAppl("s44311578", List())), CGRef(SymbolicName("Var", "x44328080"),TermAppl("s44311578", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x44320318"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x44318904"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x44325292"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x44327734"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x44317059"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x44319344"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x44328080"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x44325456"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x44327898"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),concat <= (if ord > (
  nil;
  not;
  getchar;
  exit;
  substring;
  ord
) then
  concat
else
  concat))
-----------------------------------
===================================
2016-12-15T11:20:22.484+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s44559482", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Int", List(Var("x44563199"))), TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x44566875"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x44566958"))), TermAppl("Nil", List()))))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x44567361"))), TermAppl("Var", List(Var("x44565647"))))))))))),List(CResolve(SymbolicName("Var", "x44567361"),Var("x44567362")), CTypeOf(Var("x44567362"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s44559482", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s44559482", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x44565647"),TermAppl("s44559482", List())), CGRef(SymbolicName("Var", "x44567361"),TermAppl("s44559482", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x44565647"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),1 <> ((
  "";
  89
) < (size <= ord)))
-----------------------------------
===================================
2016-12-15T11:20:39.186+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s45088939", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x45089691"))), TermAppl("Uminus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x45092127"))), TermAppl("Var", List(Var("x45092291"))))))))), TermAppl("Call", List(Var("x45089156"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s45088939", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45088939", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s45088974", List()),Label('P'),TermAppl("s45088939", List())), CGDecl(TermAppl("s45088974", List()),ConcreteName("Loop", "", 45088978)), CGRef(SymbolicName("Var", "x45089156"),TermAppl("s45088974", List())), CGRef(SymbolicName("Var", "x45092127"),TermAppl("s45088939", List())), CGRef(SymbolicName("Var", "x45092291"),TermAppl("s45088939", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45089156"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x45092127"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x45092291"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),while 3 - - (size >= ord) do
  flush())
-----------------------------------
===================================
2016-12-15T11:20:39.697+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s45109797", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Lt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Call", List(Var("x45110790"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s45109797", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45109797", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x45110790"),TermAppl("s45109797", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45110790"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if nil < nil then
  flush())
-----------------------------------
===================================
2016-12-15T11:20:56.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x45680789")), List(TermAppl("s45677700", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x45680813"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x45680830"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x45680517"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x45680809"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x45680525"), TermAppl("Tid", List(Var("x45680538"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45680483"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45680787"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s45677718", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s45677700", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45677700", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s45677718", List()),Label('P'),TermAppl("s45677700", List())), CGRef(SymbolicName("Var", "x45680483"),TermAppl("s45677718", List())), CGDecl(TermAppl("s45677718", List()),SymbolicName("Type", "x45680517")), CGDecl(TermAppl("s45677718", List()),SymbolicName("Type", "x45680525")), CGRef(SymbolicName("Type", "x45680538"),TermAppl("s45677718", List())), CGRef(SymbolicName("Var", "x45680787"),TermAppl("s45677718", List())), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x45680809"),TermAppl("s45677718", List())), CGDecl(TermAppl("s45677718", List()),SymbolicName("Type", "x45680813")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x45680830"),TermAppl("s45677718", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x45680517"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s45680795", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x45680813"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s45680795", List()))), TermAppl("s45680816", List())))), Binding(SymbolicName("Type", "x45680525"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45680483"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Type", "x45680809"), SymbolicName("Type", "x45680525")), Tuple2(SymbolicName("Var", "x45680787"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x45680538"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x45680830"), SymbolicName("Type", "x45680517")))),SubtypeRelation(List()),List())),let
  type y_ = array of n1
  type n1 = array of n2
  type n2 = string
 in
  chr;
  substring
end)
-----------------------------------
===================================
2016-12-15T11:20:59.122+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x45757648")), List(TermAppl("s45755281", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x45755642"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45757482"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45757646"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s45755299", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s45755281", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45755281", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s45755299", List()),Label('P'),TermAppl("s45755281", List())), CGRef(SymbolicName("Var", "x45755642"),TermAppl("s45755299", List())), CGRef(SymbolicName("Var", "x45757482"),TermAppl("s45755299", List())), CGRef(SymbolicName("Var", "x45757646"),TermAppl("s45755299", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45755642"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x45757482"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x45757646"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  concat;
  print
end)
-----------------------------------
===================================
2016-12-15T11:21:05.073+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x45940018")), List(TermAppl("s45932301", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x45934669"), TermAppl("Var", List(Var("x45938030"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45934646"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45937394"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45939852"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x45940016"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s45932319", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s45932301", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45932301", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s45932319", List()),Label('P'),TermAppl("s45932301", List())), CGRef(SymbolicName("Var", "x45934646"),TermAppl("s45932319", List())), CGDecl(TermAppl("s45932319", List()),SymbolicName("Var", "x45934669")), CGRef(SymbolicName("Var", "x45937394"),TermAppl("s45932319", List())), CGRef(SymbolicName("Var", "x45938030"),TermAppl("s45932301", List())), CGRef(SymbolicName("Var", "x45939852"),TermAppl("s45932319", List())), CGRef(SymbolicName("Var", "x45940016"),TermAppl("s45932319", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x45934669"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45939852"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x45940016"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x45938030"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x45934646"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x45937394"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
  var x := chr
 in
  flush;
  not;
  concat;
  chr
end)
-----------------------------------
===================================
2016-12-15T11:21:05.577+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s45951664", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("If", List(TermAppl("Lt", List(TermAppl("Int", List(Var("x45960653"))), TermAppl("Int", List(Var("x45956611"))))), TermAppl("Var", List(Var("x45960590"))), TermAppl("Var", List(Var("x45959736"))))), TermAppl("Var", List(Var("x45960232"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s45951664", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s45951664", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x45959736"),TermAppl("s45951664", List())), CGRef(SymbolicName("Var", "x45960232"),TermAppl("s45951664", List())), CGRef(SymbolicName("Var", "x45960590"),TermAppl("s45951664", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x45959736"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x45960232"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x45960590"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(if 0 < 9 then
  size
else
  ord) = ord)
-----------------------------------
===================================
2016-12-15T11:21:10.908+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s46127101", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Call", List(Var("x46130218"), TermAppl("Nil", List()))), TermAppl("IfThen", List(TermAppl("Int", List(Var("x46132407"))), TermAppl("While", List(TermAppl("Call", List(Var("x46131880"), TermAppl("Cons", List(TermAppl("String", List(Var("x46134241"))), TermAppl("Nil", List()))))), TermAppl("IfThen", List(TermAppl("Call", List(Var("x46133736"), TermAppl("Cons", List(TermAppl("String", List(Var("x46134412"))), TermAppl("Nil", List()))))), As(Var("x46133131"),TermAppl("Break", List())))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s46127101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s46127101", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x46130218"),TermAppl("s46127101", List())), NewScope(Var("s'")), CGDirectEdge(TermAppl("s46130728", List()),Label('P'),TermAppl("s46127101", List())), CGDecl(TermAppl("s46130728", List()),ConcreteName("Loop", "", 46130732)), CGRef(SymbolicName("Var", "x46131880"),TermAppl("s46127101", List())), CGRef(SymbolicName("Loop", "n46133132"),TermAppl("s46130728", List())), CGRef(SymbolicName("Var", "x46133736"),TermAppl("s46130728", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x46130218"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x46131880"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n46133132"), ConcreteName("Loop", "", 46130732)), Tuple2(SymbolicName("Var", "x46133736"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),flush() > if 0 then
  while size("") do
    if ord("") then
      break)
-----------------------------------
===================================
2016-12-15T11:21:26.68+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s46524553", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("And", List(TermAppl("Var", List(Var("x46527660"))), TermAppl("Var", List(Var("x46527489"))))), TermAppl("Call", List(Var("x46525097"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s46524553", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s46524553", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s46524588", List()),Label('P'),TermAppl("s46524553", List())), CGDecl(TermAppl("s46524588", List()),ConcreteName("Loop", "", 46524592)), CGRef(SymbolicName("Var", "x46525097"),TermAppl("s46524588", List())), CGRef(SymbolicName("Var", "x46527489"),TermAppl("s46524553", List())), CGRef(SymbolicName("Var", "x46527660"),TermAppl("s46524553", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x46525097"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x46527489"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x46527660"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),while size & size do
  flush())
-----------------------------------
===================================
2016-12-15T11:21:54.054+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x47392482")), List(TermAppl("s47392472", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x47396250"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x47397814"))), TermAppl("Var", List(Var("x47398116"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x47398280"))), TermAppl("Var", List(Var("x47396241"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s47392472", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s47392472", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x47396241"),TermAppl("s47392472", List())), CGRef(SymbolicName("Type", "x47396250"),TermAppl("s47392472", List())), CGRef(SymbolicName("Var", "x47397814"),TermAppl("s47392472", List())), CGRef(SymbolicName("Var", "x47398116"),TermAppl("s47392472", List())), CGRef(SymbolicName("Var", "x47398280"),TermAppl("s47392472", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x47397814"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x47396241"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x47398280"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Type", "x47396250"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x47398116"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),int[ord > ord] of size < ord)
-----------------------------------
===================================
2016-12-15T11:22:06.053+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s47699435", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s47699453", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s47699435", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s47699435", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s47699453", List()),Label('P'),TermAppl("s47699435", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:22:21.207+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s48151793", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Neq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x48163307"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x48165720"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48167998"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x48170258"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48171350"))), TermAppl("Nil", List()))))))))))))))), TermAppl("Call", List(Var("x48156712"), TermAppl("Cons", List(TermAppl("String", List(Var("x48165554"))), TermAppl("Nil", List()))))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x48160168"))), TermAppl("Var", List(Var("x48160568"))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s48151793", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s48151793", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x48156712"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48160168"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48160568"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48163307"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48165720"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48167998"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48170258"),TermAppl("s48151793", List())), CGRef(SymbolicName("Var", "x48171350"),TermAppl("s48151793", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x48163307"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x48170258"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x48171350"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x48160168"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x48165720"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x48160568"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x48167998"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x48156712"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),((getchar > (
  getchar;
  exit;
  nil;
  ord;
  getchar
)) <> size("")) + (ord < size))
-----------------------------------
===================================
2016-12-15T11:22:36.347+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s48623084", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Int", List(Var("x48628595"))), TermAppl("Times", List(TermAppl("Int", List(Var("x48627741"))), TermAppl("Or", List(TermAppl("Var", List(Var("x48628532"))), TermAppl("Var", List(Var("x48627678"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s48623084", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s48623084", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x48627678"),TermAppl("s48623084", List())), CGRef(SymbolicName("Var", "x48628532"),TermAppl("s48623084", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x48627678"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x48628532"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),0 | 9 * (not | not))
-----------------------------------
===================================
2016-12-15T11:22:41.124+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x48788127")), List(TermAppl("s48774160", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x48774519"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48774703"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x48786184"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48777961"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48783879"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48781165"))), TermAppl("Cons", List(TermAppl("String", List(Var("x48786119"))), TermAppl("Cons", List(TermAppl("String", List(Var("x48788287"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x48788125"))), TermAppl("Nil", List()))))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s48774178", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s48774160", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s48774160", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s48774178", List()),Label('P'),TermAppl("s48774160", List())), CGRef(SymbolicName("Var", "x48774703"),TermAppl("s48774178", List())), CGRef(SymbolicName("Var", "x48777961"),TermAppl("s48774178", List())), CGRef(SymbolicName("Var", "x48781165"),TermAppl("s48774178", List())), CGRef(SymbolicName("Var", "x48783879"),TermAppl("s48774178", List())), CGRef(SymbolicName("Var", "x48788125"),TermAppl("s48774178", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x48783879"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x48788125"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x48774703"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x48781165"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x48777961"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  concat;
  1;
  print;
  size;
  chr;
  "";
  "";
  substring
end)
-----------------------------------
===================================
2016-12-15T11:22:49.701+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x49048459")), List(TermAppl("s49046743", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x49046973"), TermAppl("Nil", List()), TermAppl("Assign", List(TermAppl("Var", List(Var("x49047928"))), TermAppl("Var", List(Var("x49048087"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x49047477"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x49048275"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x49048457"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s49046761", List()), "All")), CDistinct(Declarations(TermAppl("s49046970", List()), "All")), CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s49046743", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s49046743", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s49046761", List()),Label('P'),TermAppl("s49046743", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s49046970", List()),Label('P'),TermAppl("s49046761", List())), CGDecl(TermAppl("s49046761", List()),SymbolicName("Var", "x49046973")), CGRef(SymbolicName("Var", "x49047477"),TermAppl("s49046761", List())), CGRef(SymbolicName("Var", "x49047928"),TermAppl("s49046970", List())), CGRef(SymbolicName("Var", "x49048087"),TermAppl("s49046970", List())), CGRef(SymbolicName("Var", "x49048275"),TermAppl("s49046761", List())), CGRef(SymbolicName("Var", "x49048457"),TermAppl("s49046761", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x49046973"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x49048457"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x49047477"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x49047928"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x49048087"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x49048275"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  function Fb_() =
    not := not
 in
  getchar;
  print;
  substring
end)
-----------------------------------
===================================
2016-12-15T11:22:53.079+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s49147070", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x49151043"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x49151207"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x49150133"))))))),List(CDistinct(Declarations(TermAppl("s49147252", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s49147070", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s49147070", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s49147252", List()),Label('P'),TermAppl("s49147070", List())), CGRef(SymbolicName("Var", "x49150133"),TermAppl("s49147070", List())), CGRef(SymbolicName("Var", "x49151043"),TermAppl("s49147252", List())), CGRef(SymbolicName("Var", "x49151207"),TermAppl("s49147252", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x49150133"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x49151043"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x49151207"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  print;
  print
end = print)
-----------------------------------
===================================
2016-12-15T11:23:49.655+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s50802636", List())), State(TermAppl("Mod", List(As(Var("x50802678"),TermAppl("For", List(TermAppl("Var", List(Var("x50802679"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x50806186"))), TermAppl("Var", List(Var("x50805828"))))), TermAppl("Int", List(Var("x50806256"))), TermAppl("Call", List(Var("x50803374"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s50802636", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s50802636", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s50802676", List()),Label('P'),TermAppl("s50802636", List())), CGDecl(TermAppl("s50802676", List()),SymbolicName("Var", "x50802679")), CGDecl(TermAppl("s50802676", List()),SymbolicName("Loop", "n50802683")), CGRef(SymbolicName("Var", "x50803374"),TermAppl("s50802676", List())), CGRef(SymbolicName("Var", "x50805828"),TermAppl("s50802636", List())), CGRef(SymbolicName("Var", "x50806186"),TermAppl("s50802636", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x50802679"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x50803374"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x50805828"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x50806186"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for A := size > size to 880 do
  flush())
-----------------------------------
===================================
2016-12-15T11:23:55.645+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s51004734", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("IfThen", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x51013673"))), TermAppl("Var", List(Var("x51016087"))))), TermAppl("Call", List(Var("x51011363"), TermAppl("Cons", List(TermAppl("String", List(Var("x51015914"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("While", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x51009531"))), TermAppl("Var", List(Var("x51014461"))))), TermAppl("Call", List(Var("x51010372"), TermAppl("Cons", List(TermAppl("String", List(Var("x51014997"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s51004734", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s51004734", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s51004933", List()),Label('P'),TermAppl("s51004734", List())), CGDecl(TermAppl("s51004933", List()),ConcreteName("Loop", "", 51004937)), CGRef(SymbolicName("Var", "x51009531"),TermAppl("s51004734", List())), CGRef(SymbolicName("Var", "x51010372"),TermAppl("s51004933", List())), CGRef(SymbolicName("Var", "x51011363"),TermAppl("s51004734", List())), CGRef(SymbolicName("Var", "x51013673"),TermAppl("s51004734", List())), CGRef(SymbolicName("Var", "x51014461"),TermAppl("s51004734", List())), CGRef(SymbolicName("Var", "x51016087"),TermAppl("s51004734", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x51016087"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x51013673"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x51011363"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x51014461"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x51009531"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x51010372"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(
  if exit > exit then
    print("\^T")
) = (while ord >= size do
  print("\520\n")))
-----------------------------------
===================================
2016-12-15T11:24:04.72+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s51270948", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x51273450"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x51273796"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x51271165"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s51270948", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s51270948", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s51270983", List()),Label('P'),TermAppl("s51270948", List())), CGDecl(TermAppl("s51270983", List()),ConcreteName("Loop", "", 51270987)), CGRef(SymbolicName("Var", "x51271165"),TermAppl("s51270983", List())), CGRef(SymbolicName("Var", "x51273450"),TermAppl("s51270948", List())), CGRef(SymbolicName("Var", "x51273796"),TermAppl("s51270948", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x51271165"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x51273450"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x51273796"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),while getchar <> (
  getchar
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:24:13.091+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s51537243", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x51539700"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x51539864"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x51539945"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s51537261", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s51537243", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s51537243", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s51537261", List()),Label('P'),TermAppl("s51537243", List())), CGRef(SymbolicName("Var", "x51539700"),TermAppl("s51537261", List())), CGRef(SymbolicName("Var", "x51539864"),TermAppl("s51537261", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x51539700"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x51539864"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  flush;
  226
end)
-----------------------------------
===================================
2016-12-15T11:24:24.479+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s51870991", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Call", List(Var("x51875642"), TermAppl("Cons", List(TermAppl("String", List(Var("x51881430"))), TermAppl("Nil", List()))))), TermAppl("Divide", List(TermAppl("Call", List(Var("x51876236"), TermAppl("Cons", List(TermAppl("String", List(Var("x51879264"))), TermAppl("Nil", List()))))), TermAppl("Or", List(TermAppl("Var", List(Var("x51881261"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x51881097"))), TermAppl("Nil", List()))))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s51870991", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s51870991", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x51875642"),TermAppl("s51870991", List())), CGRef(SymbolicName("Var", "x51876236"),TermAppl("s51870991", List())), CGRef(SymbolicName("Var", "x51881097"),TermAppl("s51870991", List())), CGRef(SymbolicName("Var", "x51881261"),TermAppl("s51870991", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x51875642"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x51876236"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x51881097"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x51881261"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),ord("") & size("\^Q\"") / (not | (
  not
)))
-----------------------------------
===================================
2016-12-15T11:24:34.3+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s52159549", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("While", List(TermAppl("Uminus", List(TermAppl("And", List(TermAppl("Call", List(Var("x52166750"), TermAppl("Cons", List(TermAppl("Int", List(Var("x52166958"))), TermAppl("Nil", List()))))), TermAppl("String", List(Var("x52165686"))))))), TermAppl("Call", List(Var("x52161579"), TermAppl("Nil", List()))))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x52165711"), TermAppl("Var", List(Var("x52166624"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x52166685"), TermAppl("Tid", List(Var("x52166698"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x52166681"), TermAppl("Tid", List(Var("x52166893"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s52162065", List()), "All")), CDistinct(Declarations(TermAppl("s52163543", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s52159549", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s52159549", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s52159748", List()),Label('P'),TermAppl("s52159549", List())), CGDecl(TermAppl("s52159748", List()),ConcreteName("Loop", "", 52159752)), CGRef(SymbolicName("Var", "x52161579"),TermAppl("s52159748", List())), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s52163543", List()),Label('P'),TermAppl("s52159549", List())), CGDecl(TermAppl("s52163543", List()),SymbolicName("Var", "x52165711")), CGRef(SymbolicName("Var", "x52166624"),TermAppl("s52159549", List())), CGDirectEdge(TermAppl("s52162065", List()),Label('P'),TermAppl("s52163543", List())), CGDecl(TermAppl("s52162065", List()),SymbolicName("Type", "x52166681")), CGDecl(TermAppl("s52162065", List()),SymbolicName("Type", "x52166685")), CGRef(SymbolicName("Type", "x52166698"),TermAppl("s52162065", List())), CGRef(SymbolicName("Var", "x52166750"),TermAppl("s52159549", List())), CGRef(SymbolicName("Type", "x52166893"),TermAppl("s52162065", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x52166681"), Var("x52166895")), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x52165711"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x52166685"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x52166698"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x52166893"), SymbolicName("Type", "x52166681")), Tuple2(SymbolicName("Var", "x52161579"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x52166750"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x52166624"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(while - (chr(1) & "\t\ \J\t") do
  flush()) <= let
  var g := chr
  type y = int
  type n1 = n1
 in
end)
-----------------------------------
===================================
2016-12-15T11:24:34.48+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s52167764", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Or", List(TermAppl("Var", List(Var("x52173628"))), TermAppl("Var", List(Var("x52171593"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x52173464"))), TermAppl("Var", List(Var("x52173162"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s52167764", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s52167764", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x52171593"),TermAppl("s52167764", List())), CGRef(SymbolicName("Var", "x52173162"),TermAppl("s52167764", List())), CGRef(SymbolicName("Var", "x52173464"),TermAppl("s52167764", List())), CGRef(SymbolicName("Var", "x52173628"),TermAppl("s52167764", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x52171593"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x52173162"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x52173464"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x52173628"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(size | ord) * (ord = size))
-----------------------------------
===================================
2016-12-15T11:24:57.349+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x52932711")), List(TermAppl("s52932166", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x52932527"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x52932709"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s52932184", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s52932166", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s52932166", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s52932184", List()),Label('P'),TermAppl("s52932166", List())), CGRef(SymbolicName("Var", "x52932527"),TermAppl("s52932184", List())), CGRef(SymbolicName("Var", "x52932709"),TermAppl("s52932184", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x52932527"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x52932709"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  substring
end)
-----------------------------------
===================================
2016-12-15T11:25:00.804+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s53039466", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x53041923"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x53043408"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s53039484", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s53039466", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s53039466", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s53039484", List()),Label('P'),TermAppl("s53039466", List())), CGRef(SymbolicName("Var", "x53041923"),TermAppl("s53039484", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x53041923"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  print;
  nil;
  56
end)
-----------------------------------
===================================
2016-12-15T11:25:20.419+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s53639341", List())), State(TermAppl("Mod", List(As(Var("x53639383"),TermAppl("For", List(TermAppl("Var", List(Var("x53639384"))), TermAppl("Or", List(TermAppl("Var", List(Var("x53643470"))), TermAppl("Var", List(Var("x53642029"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x53645447"))), TermAppl("Var", List(Var("x53645283"))))), TermAppl("Call", List(Var("x53642086"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s53639341", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s53639341", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s53639381", List()),Label('P'),TermAppl("s53639341", List())), CGDecl(TermAppl("s53639381", List()),SymbolicName("Var", "x53639384")), CGDecl(TermAppl("s53639381", List()),SymbolicName("Loop", "n53639388")), CGRef(SymbolicName("Var", "x53642029"),TermAppl("s53639341", List())), CGRef(SymbolicName("Var", "x53642086"),TermAppl("s53639381", List())), CGRef(SymbolicName("Var", "x53643470"),TermAppl("s53639341", List())), CGRef(SymbolicName("Var", "x53645283"),TermAppl("s53639341", List())), CGRef(SymbolicName("Var", "x53645447"),TermAppl("s53639341", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x53639384"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x53645283"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x53642086"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x53645447"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x53642029"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x53643470"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for g := ord | size to chr < chr do
  flush())
-----------------------------------
===================================
2016-12-15T11:25:47.773+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s54402163", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x54407352"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x54405110"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x54407415"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s54402181", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s54402163", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s54402163", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s54402181", List()),Label('P'),TermAppl("s54402163", List())), CGRef(SymbolicName("Var", "x54405110"),TermAppl("s54402181", List())), CGRef(SymbolicName("Var", "x54407352"),TermAppl("s54402181", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x54405110"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x54407352"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  ord;
  chr;
  7;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:25:55.394+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x54672900")), List(TermAppl("s54669637", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x54669864"), TermAppl("Tid", List(Var("x54670097"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x54670075"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x54670274"))), TermAppl("Cons", List(TermAppl("String", List(Var("x54672550"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x54672716"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x54672898"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s54669655", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s54669637", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s54669637", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s54669655", List()),Label('P'),TermAppl("s54669637", List())), CGDecl(TermAppl("s54669655", List()),SymbolicName("Type", "x54669864")), CGRef(SymbolicName("Var", "x54670075"),TermAppl("s54669655", List())), CGRef(SymbolicName("Type", "x54670097"),TermAppl("s54669655", List())), CGRef(SymbolicName("Var", "x54670274"),TermAppl("s54669655", List())), CGRef(SymbolicName("Var", "x54672716"),TermAppl("s54669655", List())), CGRef(SymbolicName("Var", "x54672898"),TermAppl("s54669655", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x54669864"), Var("x54670099")), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x54672716"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x54670274"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x54670075"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x54672898"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x54670097"), SymbolicName("Type", "x54669864")))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  ord;
  concat;
  "\^W\"";
  ord;
  not
end)
-----------------------------------
===================================
2016-12-15T11:26:06.709+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s55048098", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s55048116", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s55048098", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s55048098", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s55048116", List()),Label('P'),TermAppl("s55048098", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:26:26.986+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s55537916", List())), State(TermAppl("Mod", List(As(Var("x55537958"),TermAppl("For", List(TermAppl("Var", List(Var("x55537959"))), TermAppl("Int", List(Var("x55540667"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x55542526"))), TermAppl("Var", List(Var("x55540604"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x55541945"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x55542853"))), TermAppl("Cons", List(As(Var("x55542906"),TermAppl("Break", List())), TermAppl("Nil", List())))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s55537916", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s55537916", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s55537956", List()),Label('P'),TermAppl("s55537916", List())), CGDecl(TermAppl("s55537956", List()),SymbolicName("Var", "x55537959")), CGDecl(TermAppl("s55537956", List()),SymbolicName("Loop", "n55537963")), CGRef(SymbolicName("Var", "x55540604"),TermAppl("s55537916", List())), CGRef(SymbolicName("Var", "x55541945"),TermAppl("s55537956", List())), CGRef(SymbolicName("Var", "x55542526"),TermAppl("s55537916", List())), CGRef(SymbolicName("Var", "x55542853"),TermAppl("s55537956", List())), CGRef(SymbolicName("Loop", "n55542907"),TermAppl("s55537956", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x55537959"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x55541945"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Loop", "n55542907"), SymbolicName("Loop", "n55537963")), Tuple2(SymbolicName("Var", "x55542526"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x55540604"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x55542853"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for H_ := 848 to substring <= substring do
  (
    exit;
    ord;
    break
  ))
-----------------------------------
===================================
2016-12-15T11:26:39.786+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s55886947", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x55894102"))), TermAppl("Var", List(Var("x55893800"))))), TermAppl("And", List(TermAppl("Var", List(Var("x55892231"))), TermAppl("Var", List(Var("x55894266"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s55886947", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s55886947", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x55892231"),TermAppl("s55886947", List())), CGRef(SymbolicName("Var", "x55893800"),TermAppl("s55886947", List())), CGRef(SymbolicName("Var", "x55894102"),TermAppl("s55886947", List())), CGRef(SymbolicName("Var", "x55894266"),TermAppl("s55886947", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x55892231"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x55893800"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x55894102"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x55894266"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(exit <= exit) <> (ord & ord))
-----------------------------------
===================================
2016-12-15T11:26:52.924+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s56329716", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x56330056"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x56330158"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s56329734", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s56329716", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s56329716", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s56329734", List()),Label('P'),TermAppl("s56329716", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  "";
  47048
end)
-----------------------------------
===================================
2016-12-15T11:27:16.548+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x56953741")), List(TermAppl("s56953710", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x56959368"))), TermAppl("Var", List(Var("x56960198"))))), TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x56964652"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x56963750"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x56961879"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x56964998"))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s56953710", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s56953710", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x56959368"),TermAppl("s56953710", List())), CGRef(SymbolicName("Var", "x56960198"),TermAppl("s56953710", List())), CGRef(SymbolicName("Var", "x56961879"),TermAppl("s56953710", List())), CGRef(SymbolicName("Var", "x56963750"),TermAppl("s56953710", List())), CGRef(SymbolicName("Var", "x56964652"),TermAppl("s56953710", List())), CGRef(SymbolicName("Var", "x56964998"),TermAppl("s56953710", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x56959368"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x56963750"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x56961879"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x56964652"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x56964998"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x56960198"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),if concat < concat then
  (
    nil;
    getchar
  ) <> getchar
else
  not < (
    not
  ))
-----------------------------------
===================================
2016-12-15T11:27:43.274+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s57648471", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s57648489", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s57648471", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s57648471", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s57648489", List()),Label('P'),TermAppl("s57648471", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:27:45.198+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s57685398", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x57685600"), TermAppl("Var", List(Var("x57685759"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s57685416", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s57685398", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s57685398", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s57685416", List()),Label('P'),TermAppl("s57685398", List())), CGDecl(TermAppl("s57685416", List()),SymbolicName("Var", "x57685600")), CGRef(SymbolicName("Var", "x57685759"),TermAppl("s57685398", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x57685600"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x57685759"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
  var oY := concat
 in
end)
-----------------------------------
===================================
2016-12-15T11:27:49.281+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s57776460", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s57776478", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s57776460", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s57776460", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s57776478", List()),Label('P'),TermAppl("s57776460", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:28:22.307+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x58429707")), List(TermAppl("s58424721", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x58424930"), TermAppl("Tid", List(Var("x58429364"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x58424956"), TermAppl("Tid", List(Var("x58426039"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x58425985"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x58429346"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x58429523"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x58429705"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s58424739", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s58424721", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s58424721", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s58424739", List()),Label('P'),TermAppl("s58424721", List())), CGDecl(TermAppl("s58424739", List()),SymbolicName("Type", "x58424930")), CGDecl(TermAppl("s58424739", List()),SymbolicName("Type", "x58424956")), CGRef(SymbolicName("Var", "x58425985"),TermAppl("s58424739", List())), CGRef(SymbolicName("Type", "x58426039"),TermAppl("s58424739", List())), CGRef(SymbolicName("Var", "x58429346"),TermAppl("s58424739", List())), CGRef(SymbolicName("Type", "x58429364"),TermAppl("s58424739", List())), CGRef(SymbolicName("Var", "x58429523"),TermAppl("s58424739", List())), CGRef(SymbolicName("Var", "x58429705"),TermAppl("s58424739", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x58424956"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x58424930"), Var("x58429366")), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x58426039"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x58425985"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x58429705"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x58429523"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Type", "x58429364"), SymbolicName("Type", "x58424930")), Tuple2(SymbolicName("Var", "x58429346"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type yA = string
 in
  substring;
  size;
  nil;
  chr;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:28:37.971+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s58731448", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("And", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x58738767"))), TermAppl("Var", List(Var("x58738603"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x58736268"))), TermAppl("Var", List(Var("x58735716"))))))), TermAppl("Int", List(Var("x58736331"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s58731448", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s58731448", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x58735716"),TermAppl("s58731448", List())), CGRef(SymbolicName("Var", "x58736268"),TermAppl("s58731448", List())), CGRef(SymbolicName("Var", "x58738603"),TermAppl("s58731448", List())), CGRef(SymbolicName("Var", "x58738767"),TermAppl("s58731448", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x58735716"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x58736268"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x58738603"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x58738767"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat <> concat & chr > chr) + 3999)
-----------------------------------
===================================
2016-12-15T11:29:01.631+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s59216400", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("And", List(TermAppl("Var", List(Var("x59222815"))), TermAppl("Var", List(Var("x59223281"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x59221246"))), TermAppl("Var", List(Var("x59223117"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s59216400", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s59216400", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x59221246"),TermAppl("s59216400", List())), CGRef(SymbolicName("Var", "x59222815"),TermAppl("s59216400", List())), CGRef(SymbolicName("Var", "x59223117"),TermAppl("s59216400", List())), CGRef(SymbolicName("Var", "x59223281"),TermAppl("s59216400", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x59221246"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x59222815"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x59223117"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x59223281"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring & substring) > (size >= size))
-----------------------------------
===================================
2016-12-15T11:29:21.067+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s59393707", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x59393927"), TermAppl("Var", List(Var("x59394086"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s59393725", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s59393707", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s59393707", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s59393725", List()),Label('P'),TermAppl("s59393707", List())), CGDecl(TermAppl("s59393725", List()),SymbolicName("Var", "x59393927")), CGRef(SymbolicName("Var", "x59394086"),TermAppl("s59393707", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x59393927"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x59394086"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  var hY25_Z_ := getchar
 in
end)
-----------------------------------
===================================
2016-12-15T11:29:35.301+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s59656537", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x59656750"), TermAppl("Tid", List(Var("x59656978"))), TermAppl("String", List(Var("x59656958"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s59656555", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s59656537", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s59656537", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s59656555", List()),Label('P'),TermAppl("s59656537", List())), CGDecl(TermAppl("s59656555", List()),SymbolicName("Var", "x59656750")), CGRef(SymbolicName("Type", "x59656978"),TermAppl("s59656537", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x59656750"), TermAppl("STRING", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x59656978"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  var X : string := ""
 in
end)
-----------------------------------
===================================
2016-12-15T11:29:46.887+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x59834588")), List(TermAppl("s59831783", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x59834404"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x59834586"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s59831801", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s59831783", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s59831783", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s59831801", List()),Label('P'),TermAppl("s59831783", List())), CGRef(SymbolicName("Var", "x59834404"),TermAppl("s59831801", List())), CGRef(SymbolicName("Var", "x59834586"),TermAppl("s59831801", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x59834404"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x59834586"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  size;
  concat
end)
-----------------------------------
===================================
2016-12-15T11:29:57.712+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s60050718", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x60055159"))), TermAppl("Var", List(Var("x60055323"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x60055505"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60055687"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60057257"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x60057320"))))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s60052713", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s60050718", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s60050718", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s60052713", List()),Label('P'),TermAppl("s60050718", List())), CGRef(SymbolicName("Var", "x60055159"),TermAppl("s60050718", List())), CGRef(SymbolicName("Var", "x60055323"),TermAppl("s60050718", List())), CGRef(SymbolicName("Var", "x60055505"),TermAppl("s60052713", List())), CGRef(SymbolicName("Var", "x60055687"),TermAppl("s60052713", List())), CGRef(SymbolicName("Var", "x60057257"),TermAppl("s60052713", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x60055687"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x60055323"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x60057257"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x60055159"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x60055505"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(print = print) >= let
 in
  exit;
  not;
  exit;
  - 6
end)
-----------------------------------
===================================
2016-12-15T11:30:21.584+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s60460318", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x60461451"))), TermAppl("And", List(TermAppl("Var", List(Var("x60463899"))), TermAppl("Var", List(Var("x60464257"))))))), TermAppl("Int", List(Var("x60464320"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s60460318", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s60460318", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x60463899"),TermAppl("s60460318", List())), CGRef(SymbolicName("Var", "x60464257"),TermAppl("s60460318", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x60463899"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x60464257"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(9772 - (substring & substring)) * 7)
-----------------------------------
===================================
2016-12-15T11:30:26.305+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s60564863", List())), State(TermAppl("Mod", List(As(Var("x60564905"),TermAppl("For", List(TermAppl("Var", List(Var("x60564906"))), TermAppl("Int", List(Var("x60565607"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x60567962"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x60570870"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60570706"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60571052"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60571234"))), TermAppl("Nil", List()))))))))))))), As(Var("x60568015"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s60564863", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s60564863", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s60564903", List()),Label('P'),TermAppl("s60564863", List())), CGDecl(TermAppl("s60564903", List()),SymbolicName("Var", "x60564906")), CGDecl(TermAppl("s60564903", List()),SymbolicName("Loop", "n60564910")), CGRef(SymbolicName("Var", "x60567962"),TermAppl("s60564863", List())), CGRef(SymbolicName("Loop", "n60568016"),TermAppl("s60564903", List())), CGRef(SymbolicName("Var", "x60570706"),TermAppl("s60564863", List())), CGRef(SymbolicName("Var", "x60570870"),TermAppl("s60564863", List())), CGRef(SymbolicName("Var", "x60571052"),TermAppl("s60564863", List())), CGRef(SymbolicName("Var", "x60571234"),TermAppl("s60564863", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x60564906"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n60568016"), SymbolicName("Loop", "n60564910")), Tuple2(SymbolicName("Var", "x60571052"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x60570706"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x60570870"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x60571234"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x60567962"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for ogPmYp_ := 7 to print <> (
  chr;
  concat;
  substring;
  print
) do
  break)
-----------------------------------
===================================
2016-12-15T11:30:38.531+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s60738663", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x60741452"), TermAppl("Tid", List(Var("x60741472"))), TermAppl("String", List(Var("x60741629"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x60741436"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x60741217"))))))),List(CDistinct(Declarations(TermAppl("s60738845", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s60738663", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s60738663", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x60741217"),TermAppl("s60738663", List())), CGDirectEdge(TermAppl("s60738845", List()),Label('P'),TermAppl("s60738663", List())), CGRef(SymbolicName("Var", "x60741436"),TermAppl("s60738845", List())), CGDecl(TermAppl("s60738845", List()),SymbolicName("Var", "x60741452")), CGRef(SymbolicName("Type", "x60741472"),TermAppl("s60738663", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x60741452"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x60741217"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x60741436"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x60741472"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  var O : string := ""
 in
  print
end = print)
-----------------------------------
===================================
2016-12-15T11:30:54.399+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s60965332", List())), State(TermAppl("Mod", List(As(Var("x60965374"),TermAppl("For", List(TermAppl("Var", List(Var("x60965375"))), TermAppl("Uminus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x60969646"))), TermAppl("Nil", List()))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x60968020"))), TermAppl("Var", List(Var("x60969006"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List())))))))),List(CDistinct(Declarations(TermAppl("s60969028", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s60965332", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s60965332", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s60965372", List()),Label('P'),TermAppl("s60965332", List())), CGDecl(TermAppl("s60965372", List()),SymbolicName("Var", "x60965375")), CGDecl(TermAppl("s60965372", List()),SymbolicName("Loop", "n60965379")), CGRef(SymbolicName("Var", "x60968020"),TermAppl("s60965332", List())), CGRef(SymbolicName("Var", "x60969006"),TermAppl("s60965332", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s60969028", List()),Label('P'),TermAppl("s60965372", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x60965375"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x60968020"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x60969006"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for S := - (
  8
) to not | not do
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T11:30:58.94+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s61055513", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Int", List(Var("x61061446"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x61060242"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61058616"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x61061075"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s61055695", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s61055513", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s61055513", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s61055695", List()),Label('P'),TermAppl("s61055513", List())), CGRef(SymbolicName("Var", "x61058616"),TermAppl("s61055695", List())), CGRef(SymbolicName("Var", "x61060242"),TermAppl("s61055695", List())), CGRef(SymbolicName("Var", "x61061075"),TermAppl("s61055695", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x61058616"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x61060242"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x61061075"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if 01 then
  let
   in
    substring;
    flush;
    flush()
  end)
-----------------------------------
===================================
2016-12-15T11:31:07.444+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s61288054", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x61295975"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61296139"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61291001"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61293733"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61297979"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s61288072", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s61288054", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s61288054", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s61288072", List()),Label('P'),TermAppl("s61288054", List())), CGRef(SymbolicName("Var", "x61291001"),TermAppl("s61288072", List())), CGRef(SymbolicName("Var", "x61293733"),TermAppl("s61288072", List())), CGRef(SymbolicName("Var", "x61295975"),TermAppl("s61288072", List())), CGRef(SymbolicName("Var", "x61296139"),TermAppl("s61288072", List())), CGRef(SymbolicName("Var", "x61297979"),TermAppl("s61288072", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x61291001"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x61293733"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x61295975"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x61296139"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x61297979"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  size;
  ord;
  ord;
  size;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:31:15.19+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x61569471")), List(TermAppl("s61566814", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("And", List(TermAppl("Var", List(Var("x61571282"))), TermAppl("Var", List(Var("x61571446"))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61569469"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s61566832", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s61566814", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s61566814", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s61566832", List()),Label('P'),TermAppl("s61566814", List())), CGRef(SymbolicName("Var", "x61569469"),TermAppl("s61566832", List())), CGRef(SymbolicName("Var", "x61571282"),TermAppl("s61566832", List())), CGRef(SymbolicName("Var", "x61571446"),TermAppl("s61566832", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x61569469"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x61571282"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x61571446"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  concat & concat;
  exit
end)
-----------------------------------
===================================
2016-12-15T11:31:22.599+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x61787227")), List(TermAppl("s61786682", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x61787022"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x61787225"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s61786700", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s61786682", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s61786682", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s61786700", List()),Label('P'),TermAppl("s61786682", List())), CGRef(SymbolicName("Var", "x61787225"),TermAppl("s61786700", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x61787225"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  size
end)
-----------------------------------
===================================
2016-12-15T11:31:23.342+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s61809111", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x61812502"))), TermAppl("Var", List(Var("x61813138"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x61814951"))), TermAppl("Var", List(Var("x61815115"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s61809111", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s61809111", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x61812502"),TermAppl("s61809111", List())), CGRef(SymbolicName("Var", "x61813138"),TermAppl("s61809111", List())), CGRef(SymbolicName("Var", "x61814951"),TermAppl("s61809111", List())), CGRef(SymbolicName("Var", "x61815115"),TermAppl("s61809111", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x61812502"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x61813138"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x61814951"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x61815115"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(ord = ord) - (size <= ord))
-----------------------------------
===================================
2016-12-15T11:31:37.762+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s62239845", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s62239863", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s62239845", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s62239845", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s62239863", List()),Label('P'),TermAppl("s62239845", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:31:44.231+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x62436111")), List(TermAppl("s62433600", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x62437913"))), TermAppl("Cons", List(TermAppl("String", List(Var("x62438075"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x62436109"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s62433618", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s62433600", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s62433600", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s62433618", List()),Label('P'),TermAppl("s62433600", List())), CGRef(SymbolicName("Var", "x62436109"),TermAppl("s62433618", List())), CGRef(SymbolicName("Var", "x62437913"),TermAppl("s62433618", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x62436109"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x62437913"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  "j";
  flush
end)
-----------------------------------
===================================
2016-12-15T11:31:55.717+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x62752132")), List(TermAppl("s62749147", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x62749549"), TermAppl("Var", List(Var("x62751948"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x62751784"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x62752130"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s62749165", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s62749147", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s62749147", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s62749165", List()),Label('P'),TermAppl("s62749147", List())), CGDecl(TermAppl("s62749165", List()),SymbolicName("Var", "x62749549")), CGRef(SymbolicName("Var", "x62751784"),TermAppl("s62749165", List())), CGRef(SymbolicName("Var", "x62751948"),TermAppl("s62749147", List())), CGRef(SymbolicName("Var", "x62752130"),TermAppl("s62749165", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x62749549"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x62751784"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x62751948"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x62752130"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  var M := ord
 in
  nil;
  size;
  size
end)
-----------------------------------
===================================
2016-12-15T11:31:59.768+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s62813429", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Plus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x62817010"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x62828912"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x62823215"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x62827184"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x62820690"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x62825042"))), TermAppl("Nil", List()))))))))))))))), TermAppl("Plus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x62827247"))), TermAppl("Nil", List()))))), TermAppl("And", List(TermAppl("Int", List(Var("x62830552"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x62832866"))), TermAppl("Var", List(Var("x62833030"))))))))))), TermAppl("Int", List(Var("x62814562"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s62813429", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s62813429", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x62817010"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62820690"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62825042"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62827184"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62828912"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62832866"),TermAppl("s62813429", List())), CGRef(SymbolicName("Var", "x62833030"),TermAppl("s62813429", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x62820690"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x62817010"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x62833030"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x62827184"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x62832866"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x62828912"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x62825042"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring > (
  substring;
  21;
  concat;
  concat;
  substring
)) + ((
  10
) + (8 & not <= not)) + 527)
-----------------------------------
===================================
2016-12-15T11:32:01.747+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s62864841", List())), State(TermAppl("Mod", List(As(Var("x62864883"),TermAppl("For", List(TermAppl("Var", List(Var("x62864884"))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x62865975"), TermAppl("Cons", List(TermAppl("String", List(Var("x62869159"))), TermAppl("Nil", List()))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x62870974"))), TermAppl("Var", List(Var("x62871145"))))), TermAppl("Call", List(Var("x62865058"), TermAppl("Nil", List())))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s62864841", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s62864841", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s62864881", List()),Label('P'),TermAppl("s62864841", List())), CGDecl(TermAppl("s62864881", List()),SymbolicName("Var", "x62864884")), CGDecl(TermAppl("s62864881", List()),SymbolicName("Loop", "n62864888")), CGRef(SymbolicName("Var", "x62865058"),TermAppl("s62864881", List())), CGRef(SymbolicName("Var", "x62865975"),TermAppl("s62864841", List())), CGRef(SymbolicName("Var", "x62870974"),TermAppl("s62864841", List())), CGRef(SymbolicName("Var", "x62871145"),TermAppl("s62864841", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x62864884"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x62865058"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x62865975"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x62870974"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x62871145"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),for fW := - size("\"") to chr | chr do
  flush())
-----------------------------------
===================================
2016-12-15T11:32:16.992+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s63258359", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s63258377", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s63258359", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s63258359", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s63258377", List()),Label('P'),TermAppl("s63258359", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:32:38.424+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x63567418")), List(TermAppl("s63557855", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x63558216"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63560494"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63562754"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63562918"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63563100"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63563282"))), TermAppl("Cons", List(TermAppl("String", List(Var("x63567578"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63565612"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x63567416"))), TermAppl("Nil", List()))))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s63557873", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s63557855", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s63557855", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s63557873", List()),Label('P'),TermAppl("s63557855", List())), CGRef(SymbolicName("Var", "x63558216"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63560494"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63562754"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63562918"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63563100"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63563282"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63565612"),TermAppl("s63557873", List())), CGRef(SymbolicName("Var", "x63567416"),TermAppl("s63557873", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x63565612"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x63567416"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x63558216"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x63563100"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x63563282"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x63562918"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x63560494"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x63562754"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  exit;
  exit;
  size;
  size;
  concat;
  "";
  substring;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:32:43.832+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s63652071", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x63654034"))), TermAppl("Int", List(Var("x63653204"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x63656584"))), TermAppl("Var", List(Var("x63656420"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s63652071", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s63652071", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x63656420"),TermAppl("s63652071", List())), CGRef(SymbolicName("Var", "x63656584"),TermAppl("s63652071", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x63656420"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x63656584"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),30 - 49 + (substring > substring))
-----------------------------------
===================================
2016-12-15T11:32:48.405+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s63744454", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("String", List(Var("x63752871"))), TermAppl("String", List(Var("x63753035"))))), TermAppl("Int", List(Var("x63750487"))))), TermAppl("Times", List(TermAppl("Or", List(TermAppl("Var", List(Var("x63749048"))), TermAppl("Var", List(Var("x63749902"))))), TermAppl("Int", List(Var("x63749111"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s63744454", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s63744454", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x63749048"),TermAppl("s63744454", List())), CGRef(SymbolicName("Var", "x63749902"),TermAppl("s63744454", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x63749048"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x63749902"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),("" >= "\\\413\t") + 34 & (print | print) * 81)
-----------------------------------
===================================
2016-12-15T11:33:03.762+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s64108714", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x64111604"))), TermAppl("Var", List(Var("x64111768"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x64114046"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64115198"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x64115261"))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s64108896", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s64108714", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s64108714", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s64108896", List()),Label('P'),TermAppl("s64108714", List())), CGRef(SymbolicName("Var", "x64111604"),TermAppl("s64108714", List())), CGRef(SymbolicName("Var", "x64111768"),TermAppl("s64108714", List())), CGRef(SymbolicName("Var", "x64114046"),TermAppl("s64108896", List())), CGRef(SymbolicName("Var", "x64115198"),TermAppl("s64108896", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x64111604"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x64111768"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x64114046"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x64115198"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(chr <> chr) * let
 in
  (
    chr;
    ord;
    6
  )
end)
-----------------------------------
===================================
2016-12-15T11:33:08.285+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s64229285", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("Var", List(Var("x64236744"))), TermAppl("Var", List(Var("x64236580"))))), TermAppl("And", List(TermAppl("Var", List(Var("x64234767"))), TermAppl("Var", List(Var("x64234131"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s64229285", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s64229285", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x64234131"),TermAppl("s64229285", List())), CGRef(SymbolicName("Var", "x64234767"),TermAppl("s64229285", List())), CGRef(SymbolicName("Var", "x64236580"),TermAppl("s64229285", List())), CGRef(SymbolicName("Var", "x64236744"),TermAppl("s64229285", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x64234131"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x64234767"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x64236580"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x64236744"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat & concat) < (chr & chr))
-----------------------------------
===================================
2016-12-15T11:33:14.944+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s64353524", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x64357551"))), TermAppl("Var", List(Var("x64356915"))))), TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x64359710"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x64359364"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s64353524", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s64353524", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x64356915"),TermAppl("s64353524", List())), CGRef(SymbolicName("Var", "x64357551"),TermAppl("s64353524", List())), CGRef(SymbolicName("Var", "x64359364"),TermAppl("s64353524", List())), CGRef(SymbolicName("Var", "x64359710"),TermAppl("s64353524", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x64356915"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x64357551"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x64359364"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x64359710"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(substring > substring) * ((
  getchar
) < getchar))
-----------------------------------
===================================
2016-12-15T11:33:21.855+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x64533433")), List(TermAppl("s64527218", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x64529107"), TermAppl("Tid", List(Var("x64529120"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64529073"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64529297"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64531627"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64533595"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x64533431"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s64527236", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s64527218", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s64527218", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s64527236", List()),Label('P'),TermAppl("s64527218", List())), CGRef(SymbolicName("Var", "x64529073"),TermAppl("s64527236", List())), CGDecl(TermAppl("s64527236", List()),SymbolicName("Type", "x64529107")), CGRef(SymbolicName("Type", "x64529120"),TermAppl("s64527236", List())), CGRef(SymbolicName("Var", "x64529297"),TermAppl("s64527236", List())), CGRef(SymbolicName("Var", "x64531627"),TermAppl("s64527236", List())), CGRef(SymbolicName("Var", "x64533431"),TermAppl("s64527236", List())), CGRef(SymbolicName("Var", "x64533595"),TermAppl("s64527236", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x64529107"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x64529073"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x64531627"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x64529297"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x64529120"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x64533595"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x64533431"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  type iO = int
 in
  substring;
  substring;
  print;
  exit;
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:33:22.789+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x64549531")), List(TermAppl("s64549521", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x64550098"))), TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x64554528"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x64554609"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s64549521", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s64549521", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x64550098"),TermAppl("s64549521", List())), CGRef(SymbolicName("Var", "x64554528"),TermAppl("s64549521", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x64550098"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x64554528"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),int[nil > nil] of (
  not;
  11
))
-----------------------------------
===================================
2016-12-15T11:33:55.525+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s65211761", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Or", List(TermAppl("Var", List(Var("x65217187"))), TermAppl("Var", List(Var("x65216721"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x65215152"))), TermAppl("Var", List(Var("x65217023"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s65211761", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s65211761", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x65215152"),TermAppl("s65211761", List())), CGRef(SymbolicName("Var", "x65216721"),TermAppl("s65211761", List())), CGRef(SymbolicName("Var", "x65217023"),TermAppl("s65211761", List())), CGRef(SymbolicName("Var", "x65217187"),TermAppl("s65211761", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x65215152"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x65216721"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x65217023"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x65217187"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring | substring) + (flush | flush))
-----------------------------------
===================================
2016-12-15T11:34:08.515+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s65597812", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s65597830", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s65597812", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s65597812", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s65597830", List()),Label('P'),TermAppl("s65597812", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:34:23.571+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s66013288", List())), State(TermAppl("Mod", List(As(Var("x66013330"),TermAppl("For", List(TermAppl("Var", List(Var("x66013331"))), TermAppl("Lt", List(TermAppl("String", List(Var("x66015974"))), TermAppl("Call", List(Var("x66016033"), TermAppl("Nil", List()))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x66020813"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x66019679"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x66021166"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x66021247"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))), TermAppl("Call", List(Var("x66016881"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s66013288", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s66013288", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s66013328", List()),Label('P'),TermAppl("s66013288", List())), CGDecl(TermAppl("s66013328", List()),SymbolicName("Var", "x66013331")), CGDecl(TermAppl("s66013328", List()),SymbolicName("Loop", "n66013335")), CGRef(SymbolicName("Var", "x66016033"),TermAppl("s66013288", List())), CGRef(SymbolicName("Var", "x66016881"),TermAppl("s66013328", List())), CGRef(SymbolicName("Var", "x66019679"),TermAppl("s66013288", List())), CGRef(SymbolicName("Var", "x66020813"),TermAppl("s66013288", List())), CGRef(SymbolicName("Var", "x66021166"),TermAppl("s66013288", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x66013331"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x66016033"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x66020813"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x66019679"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x66021166"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x66016881"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for Tw := "" < getchar() to (
  flush;
  chr;
  (
    size;
    5
  )
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:34:26.467+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s66111599", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s66111617", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s66111599", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s66111599", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s66111617", List()),Label('P'),TermAppl("s66111599", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:34:49.772+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s66824990", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x66827252"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x66830409"))), TermAppl("Var", List(Var("x66829700"))))))), TermAppl("Call", List(Var("x66829757"), TermAppl("Cons", List(TermAppl("String", List(Var("x66830571"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s66824990", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s66824990", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x66829700"),TermAppl("s66824990", List())), CGRef(SymbolicName("Var", "x66829757"),TermAppl("s66824990", List())), CGRef(SymbolicName("Var", "x66830409"),TermAppl("s66824990", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x66829700"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x66829757"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x66830409"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(4 = (getchar < getchar)) + ord(""))
-----------------------------------
===================================
2016-12-15T11:35:11.962+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x67457851")), List(TermAppl("s67455955", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x67457858"), TermAppl("Tid", List(Var("x67457875"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x67457849"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s67455973", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s67455955", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s67455955", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s67455973", List()),Label('P'),TermAppl("s67455955", List())), CGRef(SymbolicName("Var", "x67457849"),TermAppl("s67455973", List())), CGDecl(TermAppl("s67455973", List()),SymbolicName("Type", "x67457858")), CGRef(SymbolicName("Type", "x67457875"),TermAppl("s67455973", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x67457858"), Var("x67457877")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x67457849"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x67457875"), SymbolicName("Type", "x67457858")))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  nil;
  substring
end)
-----------------------------------
===================================
2016-12-15T11:35:25.979+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s67880809", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x67888451"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x67894324"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x67889631"))), TermAppl("Nil", List()))))))))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x67884782"), TermAppl("Var", List(Var("x67895592"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x67892215"), TermAppl("Var", List(Var("x67895756"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("And", List(TermAppl("String", List(Var("x67892190"))), TermAppl("String", List(Var("x67894956"))))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s67880991", List()), "All")), CDistinct(Declarations(TermAppl("s67883317", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s67880809", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s67880809", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s67883317", List()),Label('P'),TermAppl("s67880809", List())), CGDecl(TermAppl("s67883317", List()),SymbolicName("Var", "x67884782")), CGRef(SymbolicName("Var", "x67888451"),TermAppl("s67880809", List())), CGDirectEdge(TermAppl("s67880991", List()),Label('P'),TermAppl("s67883317", List())), CGRef(SymbolicName("Var", "x67889631"),TermAppl("s67880809", List())), CGDecl(TermAppl("s67880991", List()),SymbolicName("Var", "x67892215")), CGRef(SymbolicName("Var", "x67894324"),TermAppl("s67880809", List())), CGRef(SymbolicName("Var", "x67895592"),TermAppl("s67880809", List())), CGRef(SymbolicName("Var", "x67895756"),TermAppl("s67883317", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x67892215"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x67884782"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x67888451"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x67895756"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x67894324"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x67895592"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x67889631"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(ord >= (
  ord;
  ord
)) * let
  var P4 := print
  var c_ := ord
 in
  "J\t" & "\"\371"
end)
-----------------------------------
===================================
2016-12-15T11:35:36.056+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s68142258", List())), State(TermAppl("Mod", List(As(Var("x68142300"),TermAppl("For", List(TermAppl("Var", List(Var("x68142301"))), TermAppl("Int", List(Var("x68143033"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x68145476"))), TermAppl("Var", List(Var("x68145312"))))), TermAppl("Call", List(Var("x68142475"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s68142258", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s68142258", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s68142298", List()),Label('P'),TermAppl("s68142258", List())), CGDecl(TermAppl("s68142298", List()),SymbolicName("Var", "x68142301")), CGDecl(TermAppl("s68142298", List()),SymbolicName("Loop", "n68142305")), CGRef(SymbolicName("Var", "x68142475"),TermAppl("s68142298", List())), CGRef(SymbolicName("Var", "x68145312"),TermAppl("s68142258", List())), CGRef(SymbolicName("Var", "x68145476"),TermAppl("s68142258", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x68142301"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x68142475"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x68145312"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x68145476"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),for H := 29 to getchar = getchar do
  flush())
-----------------------------------
===================================
2016-12-15T11:35:53.876+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x68713026")), List(TermAppl("s68710517", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x68710719"), TermAppl("Var", List(Var("x68714990"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x68714826"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x68713024"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s68710535", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s68710517", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s68710517", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s68710535", List()),Label('P'),TermAppl("s68710517", List())), CGDecl(TermAppl("s68710535", List()),SymbolicName("Var", "x68710719")), CGRef(SymbolicName("Var", "x68713024"),TermAppl("s68710535", List())), CGRef(SymbolicName("Var", "x68714826"),TermAppl("s68710535", List())), CGRef(SymbolicName("Var", "x68714990"),TermAppl("s68710517", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x68710719"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x68713024"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x68714826"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x68714990"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
  var g := exit
 in
  print;
  ord
end)
-----------------------------------
===================================
2016-12-15T11:35:55.895+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s68784267", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Geq", List(TermAppl("Int", List(Var("x68786104"))), TermAppl("Int", List(Var("x68786504"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s68784285", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s68784267", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s68784267", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s68784285", List()),Label('P'),TermAppl("s68784267", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  39 >= 1
end)
-----------------------------------
===================================
2016-12-15T11:36:04.925+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x69079806")), List(TermAppl("s69069399", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x69069655"), TermAppl("Var", List(Var("x69079804"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x69072834"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69075546"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69079640"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s69069417", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s69069399", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s69069399", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s69069417", List()),Label('P'),TermAppl("s69069399", List())), CGDecl(TermAppl("s69069417", List()),SymbolicName("Var", "x69069655")), CGRef(SymbolicName("Var", "x69072834"),TermAppl("s69069417", List())), CGRef(SymbolicName("Var", "x69075546"),TermAppl("s69069417", List())), CGRef(SymbolicName("Var", "x69079640"),TermAppl("s69069417", List())), CGRef(SymbolicName("Var", "x69079804"),TermAppl("s69069399", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x69069655"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x69072834"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x69075546"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x69079640"), SymbolicName("Var", "x69069655")), Tuple2(SymbolicName("Var", "x69079804"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  var n1 := getchar
 in
  nil;
  substring;
  not;
  n1
end)
-----------------------------------
===================================
2016-12-15T11:36:27.674+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s69855522", List())), State(TermAppl("Mod", List(As(Var("x69855564"),TermAppl("For", List(TermAppl("Var", List(Var("x69855565"))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x69858738"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x69858210"))), TermAppl("Var", List(Var("x69859467"))))), TermAppl("Seq", List(TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s69855522", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s69855522", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s69855562", List()),Label('P'),TermAppl("s69855522", List())), CGDecl(TermAppl("s69855562", List()),SymbolicName("Var", "x69855565")), CGDecl(TermAppl("s69855562", List()),SymbolicName("Loop", "n69855569")), CGRef(SymbolicName("Var", "x69858210"),TermAppl("s69855522", List())), CGRef(SymbolicName("Var", "x69859467"),TermAppl("s69855522", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x69855565"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x69858210"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x69859467"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),for l := - 55 to concat | concat do
  (
  ))
-----------------------------------
===================================
2016-12-15T11:36:30.068+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s69916726", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x69924021"))), TermAppl("Var", List(Var("x69924185"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x69921572"))), TermAppl("Var", List(Var("x69922208"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s69916726", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s69916726", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x69921572"),TermAppl("s69916726", List())), CGRef(SymbolicName("Var", "x69922208"),TermAppl("s69916726", List())), CGRef(SymbolicName("Var", "x69924021"),TermAppl("s69916726", List())), CGRef(SymbolicName("Var", "x69924185"),TermAppl("s69916726", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x69921572"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x69922208"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x69924021"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x69924185"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(substring > substring) = (ord > size))
-----------------------------------
===================================
2016-12-15T11:36:31.594+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s69942727", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x69943862"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69946241"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69946405"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69946587"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69948865"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69955052"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x69952285"))), TermAppl("Cons", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x69954488"))), TermAppl("Var", List(Var("x69954888"))))), TermAppl("Nil", List()))))))))))))))))))), TermAppl("Call", List(Var("x69942944"), TermAppl("Cons", List(TermAppl("Int", List(Var("x69943315"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s69942727", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s69942727", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s69942762", List()),Label('P'),TermAppl("s69942727", List())), CGDecl(TermAppl("s69942762", List()),ConcreteName("Loop", "", 69942766)), CGRef(SymbolicName("Var", "x69942944"),TermAppl("s69942762", List())), CGRef(SymbolicName("Var", "x69946241"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69946405"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69946587"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69948865"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69952285"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69954488"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69954888"),TermAppl("s69942727", List())), CGRef(SymbolicName("Var", "x69955052"),TermAppl("s69942727", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x69952285"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x69942944"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x69954888"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x69946241"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x69955052"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x69946587"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x69946405"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x69954488"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x69948865"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),while (
  4404;
  substring;
  size;
  size;
  print;
  print;
  getchar;
  print = print
) do
  exit(2))
-----------------------------------
===================================
2016-12-15T11:36:36.098+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s70057682", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Plus", List(TermAppl("Int", List(Var("x70065311"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x70061761"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x70062230"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x70068538"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x70069102"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x70068938"))), TermAppl("Nil", List()))))))))))))))), TermAppl("And", List(TermAppl("Var", List(Var("x70066440"))), TermAppl("Var", List(Var("x70065248"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s70057682", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s70057682", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x70061761"),TermAppl("s70057682", List())), CGRef(SymbolicName("Var", "x70065248"),TermAppl("s70057682", List())), CGRef(SymbolicName("Var", "x70066440"),TermAppl("s70057682", List())), CGRef(SymbolicName("Var", "x70068538"),TermAppl("s70057682", List())), CGRef(SymbolicName("Var", "x70068938"),TermAppl("s70057682", List())), CGRef(SymbolicName("Var", "x70069102"),TermAppl("s70057682", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x70066440"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x70069102"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x70065248"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x70068538"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x70068938"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x70061761"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),06 + (substring > (
  4;
  getchar;
  chr;
  substring
)) + (chr & chr))
-----------------------------------
===================================
2016-12-15T11:36:45.651+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s70304577", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x70308012"))), TermAppl("Var", List(Var("x70307848"))))), TermAppl("Call", List(Var("x70305570"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s70304577", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s70304577", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x70305570"),TermAppl("s70304577", List())), CGRef(SymbolicName("Var", "x70307848"),TermAppl("s70304577", List())), CGRef(SymbolicName("Var", "x70308012"),TermAppl("s70304577", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x70305570"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x70307848"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x70308012"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if chr > chr then
  flush())
-----------------------------------
===================================
2016-12-15T11:36:48.184+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s70386514", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s70386532", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s70386514", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s70386514", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s70386532", List()),Label('P'),TermAppl("s70386514", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:37:14.246+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s71182648", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s71182666", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s71182648", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s71182648", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s71182666", List()),Label('P'),TermAppl("s71182648", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:37:16.701+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s71209905", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Int", List(Var("x71212410"))), TermAppl("Call", List(Var("x71210898"), TermAppl("Cons", List(TermAppl("String", List(Var("x71212345"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s71209905", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s71209905", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x71210898"),TermAppl("s71209905", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x71210898"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),if 5 then
  print(""))
-----------------------------------
===================================
2016-12-15T11:37:36.525+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s71650717", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x71655563"))), TermAppl("Var", List(Var("x71657598"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x71657132"))), TermAppl("Var", List(Var("x71657434"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s71650717", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s71650717", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x71655563"),TermAppl("s71650717", List())), CGRef(SymbolicName("Var", "x71657132"),TermAppl("s71650717", List())), CGRef(SymbolicName("Var", "x71657434"),TermAppl("s71650717", List())), CGRef(SymbolicName("Var", "x71657598"),TermAppl("s71650717", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x71655563"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x71657132"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x71657434"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x71657598"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(size >= ord) < (ord >= ord))
-----------------------------------
===================================
2016-12-15T11:37:37.141+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x71677114")), List(TermAppl("s71666221", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x71671410"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71671574"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71669168"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71671756"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71676766"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71676930"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71674524"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x71677112"))), TermAppl("Nil", List()))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s71666239", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s71666221", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s71666221", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s71666239", List()),Label('P'),TermAppl("s71666221", List())), CGRef(SymbolicName("Var", "x71669168"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71671410"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71671574"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71671756"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71674524"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71676766"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71676930"),TermAppl("s71666239", List())), CGRef(SymbolicName("Var", "x71677112"),TermAppl("s71666239", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x71669168"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x71671574"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x71677112"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x71676766"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x71676930"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x71671756"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x71674524"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x71671410"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  exit;
  getchar;
  getchar;
  chr;
  flush;
  size;
  ord;
  not
end)
-----------------------------------
===================================
2016-12-15T11:37:48.028+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s72004093", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Eq", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x72013658"))), TermAppl("Var", List(Var("x72013022"))))), TermAppl("Times", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x72009302"))))), TermAppl("Int", List(Var("x72008556"))))))), TermAppl("Lt", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x72015836"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x72015471"))))))))),List(CDistinct(Declarations(TermAppl("s72015493", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s72004093", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s72004093", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x72013022"),TermAppl("s72004093", List())), CGRef(SymbolicName("Var", "x72013658"),TermAppl("s72004093", List())), CGRef(SymbolicName("Var", "x72015471"),TermAppl("s72004093", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s72015493", List()),Label('P'),TermAppl("s72004093", List())), CGRef(SymbolicName("Var", "x72015836"),TermAppl("s72015493", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x72013022"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x72013658"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x72015471"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x72015836"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),((exit >= exit) = - 87255071 * 33) <= (let
 in
  substring
end < substring))
-----------------------------------
===================================
2016-12-15T11:37:48.726+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s72035620", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x72037639"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x72037702"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s72035638", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s72035620", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s72035620", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s72035638", List()),Label('P'),TermAppl("s72035620", List())), CGRef(SymbolicName("Var", "x72037639"),TermAppl("s72035638", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x72037639"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  not;
  83
end)
-----------------------------------
===================================
2016-12-15T11:37:49.619+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s72063843", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x72070904"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x72071088"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x72068689"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s72063843", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s72063843", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x72068689"),TermAppl("s72063843", List())), CGRef(SymbolicName("Var", "x72071088"),TermAppl("s72063843", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x72068689"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x72071088"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),nil & nil | (
  "";
  not
) <> not)
-----------------------------------
===================================
2016-12-15T11:38:09.138+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s72569909", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x72575310"))))), TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x72574945"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x72575895"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x72576077"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x72576259"))), TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x72576642"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x72576824"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x72577188"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x72577370"))), TermAppl("Nil", List()))))))))))))), TermAppl("Nil", List()))))))))))))), TermAppl("Int", List(Var("x72572497"))))))))),List(CDistinct(Declarations(TermAppl("s72576299", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s72569909", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s72569909", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x72574945"),TermAppl("s72569909", List())), CGRef(SymbolicName("Var", "x72575895"),TermAppl("s72569909", List())), CGRef(SymbolicName("Var", "x72576077"),TermAppl("s72569909", List())), CGRef(SymbolicName("Var", "x72576259"),TermAppl("s72569909", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s72576299", List()),Label('P'),TermAppl("s72569909", List())), CGRef(SymbolicName("Var", "x72576642"),TermAppl("s72576299", List())), CGRef(SymbolicName("Var", "x72576824"),TermAppl("s72576299", List())), CGRef(SymbolicName("Var", "x72577188"),TermAppl("s72576299", List())), CGRef(SymbolicName("Var", "x72577370"),TermAppl("s72576299", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x72576259"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x72575895"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x72577188"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x72576824"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x72576077"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x72574945"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x72577370"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x72576642"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),- 062357 = (not >= (
  not;
  flush;
  getchar;
  let
   in
    substring;
    flush;
    nil;
    exit;
    not
  end
)) + 4)
-----------------------------------
===================================
2016-12-15T11:38:09.417+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s72587410", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Int", List(Var("x72587998"))), TermAppl("Call", List(Var("x72587627"), TermAppl("Cons", List(TermAppl("String", List(Var("x72588497"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s72587410", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s72587410", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s72587445", List()),Label('P'),TermAppl("s72587410", List())), CGDecl(TermAppl("s72587445", List()),ConcreteName("Loop", "", 72587449)), CGRef(SymbolicName("Var", "x72587627"),TermAppl("s72587445", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x72587627"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),while 5 do
  print("\t\\\\"))
-----------------------------------
===================================
2016-12-15T11:38:31.384+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s73207673", List())), State(TermAppl("Mod", List(As(Var("x73207715"),TermAppl("For", List(TermAppl("Var", List(Var("x73207716"))), TermAppl("Call", List(Var("x73209241"), TermAppl("Cons", List(TermAppl("String", List(Var("x73220108"))), TermAppl("Nil", List()))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x73211633"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x73211986"))), TermAppl("Cons", List(TermAppl("String", List(Var("x73219537"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x73215192"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x73217872"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x73219939"))), TermAppl("Nil", List()))))))))))))))), TermAppl("Call", List(Var("x73208411"), TermAppl("Nil", List())))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s73207673", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s73207673", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s73207713", List()),Label('P'),TermAppl("s73207673", List())), CGDecl(TermAppl("s73207713", List()),SymbolicName("Var", "x73207716")), CGDecl(TermAppl("s73207713", List()),SymbolicName("Loop", "n73207720")), CGRef(SymbolicName("Var", "x73208411"),TermAppl("s73207713", List())), CGRef(SymbolicName("Var", "x73209241"),TermAppl("s73207673", List())), CGRef(SymbolicName("Var", "x73211633"),TermAppl("s73207673", List())), CGRef(SymbolicName("Var", "x73211986"),TermAppl("s73207673", List())), CGRef(SymbolicName("Var", "x73215192"),TermAppl("s73207673", List())), CGRef(SymbolicName("Var", "x73217872"),TermAppl("s73207673", List())), CGRef(SymbolicName("Var", "x73219939"),TermAppl("s73207673", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x73207716"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x73215192"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x73209241"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x73211986"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x73219939"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x73208411"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x73211633"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x73217872"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for orV := size("\n") to print > (
  ord;
  "";
  exit;
  not;
  print
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:38:37.665+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s73402438", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Or", List(TermAppl("NilExp", List()), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x73408067"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x73408431"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x73407885"))), TermAppl("Var", List(Var("x73407400"))))))))),List(CDistinct(Declarations(TermAppl("s73407422", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s73402438", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s73402438", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x73407400"),TermAppl("s73402438", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s73407422", List()),Label('P'),TermAppl("s73402438", List())), CGRef(SymbolicName("Var", "x73407885"),TermAppl("s73402438", List())), CGRef(SymbolicName("Var", "x73408067"),TermAppl("s73407422", List())), CGRef(SymbolicName("Var", "x73408431"),TermAppl("s73407422", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x73407400"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x73407885"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x73408067"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x73408431"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(nil | let
 in
  substring;
  (
    getchar;
    nil
  )
end) * (size > ord))
-----------------------------------
===================================
2016-12-15T11:38:43.312+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s73585798", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x73595598"), TermAppl("Nil", List()), TermAppl("Call", List(Var("x73597235"), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x73597398"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x73597419"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Int", List(Var("x73591697"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("NilExp", List()))))),List(CDistinct(Declarations(TermAppl("s73585980", List()), "All")), CDistinct(Declarations(TermAppl("s73587802", List()), "All")), CDistinct(Declarations(TermAppl("s73595595", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s73585798", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s73585798", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s73587802", List()),Label('P'),TermAppl("s73585798", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s73595595", List()),Label('P'),TermAppl("s73587802", List())), CGDecl(TermAppl("s73587802", List()),SymbolicName("Var", "x73595598")), CGRef(SymbolicName("Var", "x73597235"),TermAppl("s73595595", List())), CGDirectEdge(TermAppl("s73585980", List()),Label('P'),TermAppl("s73587802", List())), CGDecl(TermAppl("s73585980", List()),SymbolicName("Type", "x73597398")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x73597419"),TermAppl("s73585980", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x73595598"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x73597398"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s73597405", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x73597235"), SymbolicName("Var", "x73595598")), Tuple2(SymbolicName("Type", "x73597419"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  function n1() =
    n1()
  type Q = array of string
 in
  54;
  (
    nil
  )
end <> nil)
-----------------------------------
===================================
2016-12-15T11:38:50.805+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s73795409", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Lt", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Or", List(TermAppl("Var", List(Var("x73799238"))), TermAppl("Var", List(Var("x73801110"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s73795409", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s73795409", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x73799238"),TermAppl("s73795409", List())), CGRef(SymbolicName("Var", "x73801110"),TermAppl("s73795409", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x73799238"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x73801110"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(nil < nil) * (substring | substring))
-----------------------------------
===================================
2016-12-15T11:39:05.492+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x74226747")), List(TermAppl("s74223580", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x74223800"), TermAppl("Var", List(Var("x74226199"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74226035"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74226381"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74226563"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74226745"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s74223598", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s74223580", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s74223580", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s74223598", List()),Label('P'),TermAppl("s74223580", List())), CGDecl(TermAppl("s74223598", List()),SymbolicName("Var", "x74223800")), CGRef(SymbolicName("Var", "x74226035"),TermAppl("s74223598", List())), CGRef(SymbolicName("Var", "x74226199"),TermAppl("s74223580", List())), CGRef(SymbolicName("Var", "x74226381"),TermAppl("s74223598", List())), CGRef(SymbolicName("Var", "x74226563"),TermAppl("s74223598", List())), CGRef(SymbolicName("Var", "x74226745"),TermAppl("s74223598", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x74223800"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x74226563"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x74226381"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x74226199"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x74226745"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x74226035"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
  var BK := ord
 in
  exit;
  not;
  flush;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:39:05.527+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x74227752")), List(TermAppl("s74226931", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x74227759"), TermAppl("Tid", List(Var("x74227772"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x74227202"), TermAppl("Tid", List(Var("x74227519"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x74227480"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x74227541"))))))), TermAppl("Nil", List()))))))))), TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x74227187"), TermAppl("Nil", List()), TermAppl("Call", List(Var("x74227326"), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74227750"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s74226949", List()), "All")), CDistinct(Declarations(TermAppl("s74227111", List()), "All")), CDistinct(Declarations(TermAppl("s74227184", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s74226931", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s74226931", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s74227111", List()),Label('P'),TermAppl("s74226931", List())), CGDirectEdge(TermAppl("s74226949", List()),Label('P'),TermAppl("s74227111", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s74227184", List()),Label('P'),TermAppl("s74226949", List())), CGDecl(TermAppl("s74226949", List()),SymbolicName("Var", "x74227187")), CGDecl(TermAppl("s74227111", List()),SymbolicName("Type", "x74227202")), CGRef(SymbolicName("Var", "x74227326"),TermAppl("s74227184", List())), CGDecl(TermAppl("s74227111", List()),SymbolicName("Type", "x74227480")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x74227519"),TermAppl("s74227111", List())), CGRef(SymbolicName("Type", "x74227541"),TermAppl("s74227111", List())), CGRef(SymbolicName("Var", "x74227750"),TermAppl("s74226949", List())), CGDecl(TermAppl("s74227111", List()),SymbolicName("Type", "x74227759")), CGRef(SymbolicName("Type", "x74227772"),TermAppl("s74227111", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x74227202"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s74227483", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x74227759"), Var("x74227774")), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x74227480"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s74227483", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x74227187"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x74227541"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x74227750"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x74227772"), SymbolicName("Type", "x74227759")), Tuple2(SymbolicName("Type", "x74227519"), SymbolicName("Type", "x74227480")), Tuple2(SymbolicName("Var", "x74227326"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  type n2 = n2
  type L = n1
  type n1 = array of string
  function O() =
    flush()
 in
  not
end)
-----------------------------------
===================================
2016-12-15T11:39:10.868+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s74426831", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s74426849", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s74426831", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s74426831", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s74426849", List()),Label('P'),TermAppl("s74426831", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:39:10.876+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s74427036", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s74427054", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s74427036", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s74427036", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s74427054", List()),Label('P'),TermAppl("s74427036", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:39:11.069+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x74435147")), List(TermAppl("s74434717", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x74435154"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x74435171"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x74435145"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s74434735", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s74434717", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s74434717", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s74434735", List()),Label('P'),TermAppl("s74434717", List())), CGRef(SymbolicName("Var", "x74435145"),TermAppl("s74434735", List())), CGDecl(TermAppl("s74434735", List()),SymbolicName("Type", "x74435154")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x74435171"),TermAppl("s74434735", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x74435154"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s74435157", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x74435145"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Type", "x74435171"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type q86j = array of string
 in
  chr
end)
-----------------------------------
===================================
2016-12-15T11:39:34.913+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s75228289", List())), State(TermAppl("Mod", List(As(Var("x75228331"),TermAppl("For", List(TermAppl("Var", List(Var("x75228332"))), TermAppl("Int", List(Var("x75232503"))), TermAppl("Times", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Nil", List()))))))), TermAppl("Seq", List(TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s75228289", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s75228289", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s75228329", List()),Label('P'),TermAppl("s75228289", List())), CGDecl(TermAppl("s75228329", List()),SymbolicName("Var", "x75228332")), CGDecl(TermAppl("s75228329", List()),SymbolicName("Loop", "n75228336"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x75228332"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),for V_r4l := 76 to (nil <= nil) * (
  nil <> nil
) do
  (
  ))
-----------------------------------
===================================
2016-12-15T11:39:39.68+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s75395982", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s75396000", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s75395982", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s75395982", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s75396000", List()),Label('P'),TermAppl("s75395982", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:39:44.177+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s75543575", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x75543802"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x75543823"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s75543593", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s75543575", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s75543575", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s75543593", List()),Label('P'),TermAppl("s75543575", List())), CGDecl(TermAppl("s75543593", List()),SymbolicName("Type", "x75543802")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x75543823"),TermAppl("s75543593", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x75543802"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(Var("x75543825"), TermAppl("s75543805", List()))), TermAppl("s75543805", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x75543823"), SymbolicName("Type", "x75543802")))),SubtypeRelation(List()),List())),let
  type n1 = array of n1
 in
end)
-----------------------------------
===================================
2016-12-15T11:39:48.336+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s75690727", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s75690745", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s75690727", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s75690727", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s75690745", List()),Label('P'),TermAppl("s75690727", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:40:08.036+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s76243323", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x76249209"), TermAppl("Tid", List(Var("x76253082"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x76249155"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x76255045"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x76254881"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x76252473"))), TermAppl("Nil", List()))))))))))))), TermAppl("Int", List(Var("x76245904"))))))),List(CDistinct(Declarations(TermAppl("s76243505", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s76243323", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s76243323", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s76243505", List()),Label('P'),TermAppl("s76243323", List())), CGDecl(TermAppl("s76243505", List()),SymbolicName("Type", "x76249209")), CGRef(SymbolicName("Type", "x76253082"),TermAppl("s76243505", List())), CGRef(SymbolicName("Var", "x76254881"),TermAppl("s76243505", List())), CGRef(SymbolicName("Var", "x76255045"),TermAppl("s76243505", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x76249209"), Var("x76253084")), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x76253082"), SymbolicName("Type", "x76249209")), Tuple2(SymbolicName("Var", "x76254881"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x76255045"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  "\"\300";
  print;
  nil;
  flush;
  4
end | 6)
-----------------------------------
===================================
2016-12-15T11:40:24.116+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x76706378")), List(TermAppl("s76706368", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x76712243"))), TermAppl("Or", List(TermAppl("Var", List(Var("x76712062"))), TermAppl("Var", List(Var("x76710605"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x76711752"))), TermAppl("Var", List(Var("x76712234"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s76706368", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s76706368", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x76710605"),TermAppl("s76706368", List())), CGRef(SymbolicName("Var", "x76711752"),TermAppl("s76706368", List())), CGRef(SymbolicName("Var", "x76712062"),TermAppl("s76706368", List())), CGRef(SymbolicName("Var", "x76712234"),TermAppl("s76706368", List())), CGRef(SymbolicName("Type", "x76712243"),TermAppl("s76706368", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x76711752"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x76712234"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x76712243"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x76712062"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x76710605"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),int[print | print] of substring >= substring)
-----------------------------------
===================================
2016-12-15T11:40:55.657+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x77731886")), List(TermAppl("s77731876", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x77732045"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x77746494"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x77746511"))))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x77746529"), TermAppl("Int", List(Var("x77748827"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("String", List(Var("x77743023"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x77739086"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x77746485"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x77748764"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x77749110"))), TermAppl("Nil", List()))))))))))))), TermAppl("Int", List(Var("x77734234"))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CDistinct(Declarations(TermAppl("s77732062", List()), "All")), CDistinct(Declarations(TermAppl("s77732453", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s77731876", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s77731876", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x77732045"),TermAppl("s77731876", List())), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s77732453", List()),Label('P'),TermAppl("s77731876", List())), CGDirectEdge(TermAppl("s77732062", List()),Label('P'),TermAppl("s77732453", List())), CGRef(SymbolicName("Var", "x77739086"),TermAppl("s77732062", List())), CGRef(SymbolicName("Var", "x77746485"),TermAppl("s77732062", List())), CGDecl(TermAppl("s77732453", List()),SymbolicName("Type", "x77746494")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x77746511"),TermAppl("s77732453", List())), CGDecl(TermAppl("s77732062", List()),SymbolicName("Var", "x77746529")), CGRef(SymbolicName("Var", "x77748764"),TermAppl("s77732062", List())), CGRef(SymbolicName("Var", "x77749110"),TermAppl("s77732062", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x77746494"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s77746497", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x77746529"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x77746485"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x77732045"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x77748764"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x77739086"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x77749110"), SymbolicName("Var", "x77746529")), Tuple2(SymbolicName("Type", "x77746511"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),int[let
  type j = array of string
  var n1 := 81
 in
  "\\\n";
  getchar;
  not;
  not;
  n1
end] of 302)
-----------------------------------
===================================
2016-12-15T11:41:03.668+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s78022285", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("And", List(TermAppl("Var", List(Var("x78025556"))), TermAppl("Var", List(Var("x78025727"))))), TermAppl("Call", List(Var("x78023278"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s78022285", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s78022285", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x78023278"),TermAppl("s78022285", List())), CGRef(SymbolicName("Var", "x78025556"),TermAppl("s78022285", List())), CGRef(SymbolicName("Var", "x78025727"),TermAppl("s78022285", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x78023278"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x78025556"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x78025727"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if exit & exit then
  flush())
-----------------------------------
===================================
2016-12-15T11:41:11.773+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s78241376", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x78243833"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x78245819"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x78245318"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s78241394", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s78241376", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s78241376", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s78241394", List()),Label('P'),TermAppl("s78241376", List())), CGRef(SymbolicName("Var", "x78243833"),TermAppl("s78241394", List())), CGRef(SymbolicName("Var", "x78245819"),TermAppl("s78241394", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x78243833"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x78245819"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  substring;
  0
end)
-----------------------------------
===================================
2016-12-15T11:41:27.652+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s78663521", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("And", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x78670289"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x78670871"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x78673921"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x78673007"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))), TermAppl("NilExp", List()))), TermAppl("Neq", List(TermAppl("Var", List(Var("x78670707"))), TermAppl("Var", List(Var("x78669361"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s78663521", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s78663521", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x78669361"),TermAppl("s78663521", List())), CGRef(SymbolicName("Var", "x78670289"),TermAppl("s78663521", List())), CGRef(SymbolicName("Var", "x78670707"),TermAppl("s78663521", List())), CGRef(SymbolicName("Var", "x78670871"),TermAppl("s78663521", List())), CGRef(SymbolicName("Var", "x78673007"),TermAppl("s78663521", List())), CGRef(SymbolicName("Var", "x78673921"),TermAppl("s78663521", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x78673921"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x78670871"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x78670707"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x78669361"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x78673007"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x78670289"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),((
  exit;
  substring;
  size;
  substring;
  nil
) & nil) / (concat <> concat))
-----------------------------------
===================================
2016-12-15T11:41:28.727+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s78704333", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s78704351", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s78704333", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s78704333", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s78704351", List()),Label('P'),TermAppl("s78704333", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:41:29.137+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s78718260", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("And", List(TermAppl("Var", List(Var("x78720598"))), TermAppl("Var", List(Var("x78720434"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s78718278", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s78718260", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s78718260", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s78718278", List()),Label('P'),TermAppl("s78718260", List())), CGRef(SymbolicName("Var", "x78720434"),TermAppl("s78718278", List())), CGRef(SymbolicName("Var", "x78720598"),TermAppl("s78718278", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x78720434"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x78720598"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  not & not
end)
-----------------------------------
===================================
2016-12-15T11:41:49.435+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s79389721", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x79394907"))), TermAppl("Gt", List(TermAppl("Int", List(Var("x79394052"))), TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s79389721", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s79389721", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),6 - (16 > (nil <> nil)))
-----------------------------------
===================================
2016-12-15T11:41:50.683+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s79439122", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Or", List(TermAppl("Var", List(Var("x79444268"))), TermAppl("Var", List(Var("x79443716"))))), TermAppl("Minus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x79445395"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x79444847"), TermAppl("Cons", List(TermAppl("Int", List(Var("x79445024"))), TermAppl("Nil", List()))))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s79439122", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s79439122", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x79443716"),TermAppl("s79439122", List())), CGRef(SymbolicName("Var", "x79444268"),TermAppl("s79439122", List())), CGRef(SymbolicName("Var", "x79444847"),TermAppl("s79439122", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x79443716"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x79444268"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x79444847"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),(size | ord) > (
  (
    9563962
  )
) - - not(990))
-----------------------------------
===================================
2016-12-15T11:41:51.103+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s79450545", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Call", List(Var("x79456571"), TermAppl("Nil", List()))), TermAppl("If", List(TermAppl("Plus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x79463615"))), TermAppl("Var", List(Var("x79463306"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x79461435"))), TermAppl("Cons", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x79460607"))), TermAppl("Var", List(Var("x79463779"))))), TermAppl("Nil", List()))))))))), TermAppl("String", List(Var("x79455856"))), TermAppl("String", List(Var("x79457840"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s79450545", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s79450545", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x79456571"),TermAppl("s79450545", List())), CGRef(SymbolicName("Var", "x79460607"),TermAppl("s79450545", List())), CGRef(SymbolicName("Var", "x79461435"),TermAppl("s79450545", List())), CGRef(SymbolicName("Var", "x79463306"),TermAppl("s79450545", List())), CGRef(SymbolicName("Var", "x79463615"),TermAppl("s79450545", List())), CGRef(SymbolicName("Var", "x79463779"),TermAppl("s79450545", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x79463306"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x79460607"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x79463615"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x79461435"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x79463779"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x79456571"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),getchar() >= (if (substring >= substring) + (
  chr;
  print = print
) then
  "~"
else
  ""))
-----------------------------------
===================================
2016-12-15T11:41:54.469+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s79575874", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Int", List(Var("x79583066"))), TermAppl("Leq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x79582645"))), TermAppl("Var", List(Var("x79581597"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x79582708"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s79575874", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s79575874", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x79581597"),TermAppl("s79575874", List())), CGRef(SymbolicName("Var", "x79582645"),TermAppl("s79575874", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x79581597"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x79582645"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),1 > ((ord > size) <= - 3))
-----------------------------------
===================================
2016-12-15T11:42:10.559+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x80096726")), List(TermAppl("s80096345", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x80096740"), TermAppl("Tid", List(Var("x80096753"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x80096724"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s80096363", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s80096345", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s80096345", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s80096363", List()),Label('P'),TermAppl("s80096345", List())), CGRef(SymbolicName("Var", "x80096724"),TermAppl("s80096363", List())), CGDecl(TermAppl("s80096363", List()),SymbolicName("Type", "x80096740")), CGRef(SymbolicName("Type", "x80096753"),TermAppl("s80096363", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x80096740"), Var("x80096755")), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x80096724"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x80096753"), SymbolicName("Type", "x80096740")))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  exit
end)
-----------------------------------
===================================
2016-12-15T11:42:31.669+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s80744205", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Leq", List(TermAppl("Call", List(Var("x80752785"), TermAppl("Cons", List(TermAppl("Int", List(Var("x80752962"))), TermAppl("Nil", List()))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x80749859"))), TermAppl("Var", List(Var("x80750689"))))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x80752370"))), TermAppl("Var", List(Var("x80752728"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s80744205", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s80744205", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x80749859"),TermAppl("s80744205", List())), CGRef(SymbolicName("Var", "x80750689"),TermAppl("s80744205", List())), CGRef(SymbolicName("Var", "x80752370"),TermAppl("s80744205", List())), CGRef(SymbolicName("Var", "x80752728"),TermAppl("s80744205", List())), CGRef(SymbolicName("Var", "x80752785"),TermAppl("s80744205", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x80752370"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x80750689"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x80752785"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x80752728"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x80749859"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(not(39) <= (getchar > getchar)) / (substring >= substring))
-----------------------------------
===================================
2016-12-15T11:42:36.184+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s80898215", List())), State(TermAppl("Mod", List(As(Var("x80898257"),TermAppl("For", List(TermAppl("Var", List(Var("x80898258"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x80900903"))), TermAppl("Var", List(Var("x80902059"))))), TermAppl("Uminus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x80904200"))), TermAppl("Var", List(Var("x80904036"))))))), As(Var("x80900956"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s80898215", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s80898215", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s80898255", List()),Label('P'),TermAppl("s80898215", List())), CGDecl(TermAppl("s80898255", List()),SymbolicName("Var", "x80898258")), CGDecl(TermAppl("s80898255", List()),SymbolicName("Loop", "n80898262")), CGRef(SymbolicName("Var", "x80900903"),TermAppl("s80898215", List())), CGRef(SymbolicName("Loop", "n80900957"),TermAppl("s80898255", List())), CGRef(SymbolicName("Var", "x80902059"),TermAppl("s80898215", List())), CGRef(SymbolicName("Var", "x80904036"),TermAppl("s80898215", List())), CGRef(SymbolicName("Var", "x80904200"),TermAppl("s80898215", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x80898258"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x80900903"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Loop", "n80900957"), SymbolicName("Loop", "n80898262")), Tuple2(SymbolicName("Var", "x80904200"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x80902059"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x80904036"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for D6 := chr <= chr to - (not = not) do
  break)
-----------------------------------
===================================
2016-12-15T11:42:37.757+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s80962958", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s80962976", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s80962958", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s80962958", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s80962976", List()),Label('P'),TermAppl("s80962958", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  nil;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:42:54.995+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x81484046")), List(TermAppl("s81482665", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x81482867"), TermAppl("Var", List(Var("x81483516"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x81483680"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x81483862"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x81484044"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s81482683", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s81482665", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s81482665", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s81482683", List()),Label('P'),TermAppl("s81482665", List())), CGDecl(TermAppl("s81482683", List()),SymbolicName("Var", "x81482867")), CGRef(SymbolicName("Var", "x81483516"),TermAppl("s81482665", List())), CGRef(SymbolicName("Var", "x81483680"),TermAppl("s81482683", List())), CGRef(SymbolicName("Var", "x81483862"),TermAppl("s81482683", List())), CGRef(SymbolicName("Var", "x81484044"),TermAppl("s81482683", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x81482867"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x81483516"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x81483680"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x81483862"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x81484044"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  var ZWR := flush
 in
  exit;
  exit;
  ord
end)
-----------------------------------
===================================
2016-12-15T11:42:55.085+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x81484062")), List(TermAppl("s81484052", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x81484221"))), TermAppl("Int", List(Var("x81487452"))), TermAppl("Gt", List(TermAppl("String", List(Var("x81487387"))), TermAppl("String", List(Var("x81487029"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s81484052", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s81484052", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x81484221"),TermAppl("s81484052", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x81484221"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int[6439] of "" > "\\")
-----------------------------------
===================================
2016-12-15T11:42:55.552+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s81502704", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x81504887"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s81502722", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s81502704", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s81502704", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s81502722", List()),Label('P'),TermAppl("s81502704", List())), CGRef(SymbolicName("Var", "x81504887"),TermAppl("s81502722", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x81504887"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:43:02.85+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s81736421", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("String", List(Var("x81743272"))), TermAppl("Call", List(Var("x81743635"), TermAppl("Nil", List()))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x81741705"))), TermAppl("Var", List(Var("x81743578"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s81736421", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s81736421", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x81741705"),TermAppl("s81736421", List())), CGRef(SymbolicName("Var", "x81743578"),TermAppl("s81736421", List())), CGRef(SymbolicName("Var", "x81743635"),TermAppl("s81736421", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x81741705"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x81743578"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x81743635"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),("" & getchar()) < (print <= print))
-----------------------------------
===================================
2016-12-15T11:43:15.564+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s82116614", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x82122896"))), TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x82124703"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x82124768"))), TermAppl("Nil", List()))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x82122337"))), TermAppl("Var", List(Var("x82123553"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s82116614", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s82116614", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x82122337"),TermAppl("s82116614", List())), CGRef(SymbolicName("Var", "x82123553"),TermAppl("s82116614", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x82122337"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x82123553"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),3 = ((
  "";
  1
) | (size | ord)))
-----------------------------------
===================================
2016-12-15T11:43:48.246+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x83092043")), List(TermAppl("s83090186", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x83092064"), TermAppl("String", List(Var("x83092221"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x83092041"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s83090204", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s83090186", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s83090186", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s83090204", List()),Label('P'),TermAppl("s83090186", List())), CGRef(SymbolicName("Var", "x83092041"),TermAppl("s83090204", List())), CGDecl(TermAppl("s83090204", List()),SymbolicName("Var", "x83092064"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x83092064"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x83092041"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
  var e := ""
 in
  substring
end)
-----------------------------------
===================================
2016-12-15T11:43:56.664+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s83339366", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Or", List(TermAppl("Var", List(Var("x83343942"))), TermAppl("Var", List(Var("x83344113"))))), TermAppl("Call", List(Var("x83341550"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s83339366", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s83339366", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x83341550"),TermAppl("s83339366", List())), CGRef(SymbolicName("Var", "x83343942"),TermAppl("s83339366", List())), CGRef(SymbolicName("Var", "x83344113"),TermAppl("s83339366", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x83341550"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x83343942"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x83344113"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if exit | exit then
  flush())
-----------------------------------
===================================
2016-12-15T11:43:59.755+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s83441018", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Int", List(Var("x83444110"))), TermAppl("Neq", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x83446660"))), TermAppl("Var", List(Var("x83446496"))))), TermAppl("Int", List(Var("x83443280"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s83441018", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s83441018", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x83446496"),TermAppl("s83441018", List())), CGRef(SymbolicName("Var", "x83446660"),TermAppl("s83441018", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x83446496"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x83446660"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),9 / ((exit < exit) <> 2))
-----------------------------------
===================================
2016-12-15T11:44:20.527+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s84048523", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x84054004"))), TermAppl("If", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x84056591"))), TermAppl("Var", List(Var("x84055849"))))), TermAppl("Var", List(Var("x84056289"))), TermAppl("Var", List(Var("x84056755"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s84048523", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84048523", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x84054004"),TermAppl("s84048523", List())), CGRef(SymbolicName("Var", "x84055849"),TermAppl("s84048523", List())), CGRef(SymbolicName("Var", "x84056289"),TermAppl("s84048523", List())), CGRef(SymbolicName("Var", "x84056591"),TermAppl("s84048523", List())), CGRef(SymbolicName("Var", "x84056755"),TermAppl("s84048523", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x84054004"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x84056755"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x84055849"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x84056591"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x84056289"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush >= (if concat >= concat then
  flush
else
  flush))
-----------------------------------
===================================
2016-12-15T11:44:21.979+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s84107212", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Divide", List(TermAppl("Int", List(Var("x84112863"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x84113146"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x84113227"))), TermAppl("Nil", List()))))))))), TermAppl("And", List(TermAppl("Var", List(Var("x84112442"))), TermAppl("Var", List(Var("x84111890"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s84107212", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84107212", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x84111890"),TermAppl("s84107212", List())), CGRef(SymbolicName("Var", "x84112442"),TermAppl("s84107212", List())), CGRef(SymbolicName("Var", "x84113146"),TermAppl("s84107212", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x84111890"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x84112442"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x84113146"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),31132 / (
  size;
  5
) = (getchar & getchar))
-----------------------------------
===================================
2016-12-15T11:44:24.138+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s84147941", List())), State(TermAppl("Mod", List(As(Var("x84147983"),TermAppl("For", List(TermAppl("Var", List(Var("x84147984"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x84151624"))), TermAppl("Var", List(Var("x84151460"))))), TermAppl("Int", List(Var("x84149074"))), As(Var("x84148154"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s84147941", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84147941", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s84147981", List()),Label('P'),TermAppl("s84147941", List())), CGDecl(TermAppl("s84147981", List()),SymbolicName("Var", "x84147984")), CGDecl(TermAppl("s84147981", List()),SymbolicName("Loop", "n84147988")), CGRef(SymbolicName("Loop", "n84148155"),TermAppl("s84147981", List())), CGRef(SymbolicName("Var", "x84151460"),TermAppl("s84147941", List())), CGRef(SymbolicName("Var", "x84151624"),TermAppl("s84147941", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x84147984"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n84148155"), SymbolicName("Loop", "n84147988")), Tuple2(SymbolicName("Var", "x84151460"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x84151624"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for pt := flush <> flush to 9 do
  break)
-----------------------------------
===================================
2016-12-15T11:44:27.575+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x84270386")), List(TermAppl("s84270376", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x84270545"))), TermAppl("Call", List(Var("x84271731"), TermAppl("Cons", List(TermAppl("String", List(Var("x84275038"))), TermAppl("Nil", List()))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x84274123"))), TermAppl("Var", List(Var("x84275204"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s84270376", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84270376", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x84270545"),TermAppl("s84270376", List())), CGRef(SymbolicName("Var", "x84271731"),TermAppl("s84270376", List())), CGRef(SymbolicName("Var", "x84274123"),TermAppl("s84270376", List())), CGRef(SymbolicName("Var", "x84275204"),TermAppl("s84270376", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x84270545"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x84271731"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x84274123"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x84275204"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),int[size("\148\"")] of exit < exit)
-----------------------------------
===================================
2016-12-15T11:44:31.639+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x84381617")), List(TermAppl("s84381607", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x84387000"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x84387461"))), TermAppl("Var", List(Var("x84385844"))))), TermAppl("Leq", List(TermAppl("Int", List(Var("x84387058"))), TermAppl("Int", List(Var("x84386508"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s84381607", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84381607", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x84385844"),TermAppl("s84381607", List())), CGRef(SymbolicName("Type", "x84387000"),TermAppl("s84381607", List())), CGRef(SymbolicName("Var", "x84387461"),TermAppl("s84381607", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x84385844"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x84387000"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x84387461"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),int[flush < flush] of 54 <= 6882)
-----------------------------------
===================================
2016-12-15T11:44:32.518+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s84408992", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x84414254"))), TermAppl("Var", List(Var("x84413952"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x84412383"))), TermAppl("Var", List(Var("x84414418"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s84408992", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84408992", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x84412383"),TermAppl("s84408992", List())), CGRef(SymbolicName("Var", "x84413952"),TermAppl("s84408992", List())), CGRef(SymbolicName("Var", "x84414254"),TermAppl("s84408992", List())), CGRef(SymbolicName("Var", "x84414418"),TermAppl("s84408992", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x84412383"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x84413952"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x84414254"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x84414418"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(exit < exit) / (chr | chr))
-----------------------------------
===================================
2016-12-15T11:44:40.75+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s84675151", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x84675360"), TermAppl("Tid", List(Var("x84675373"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x84675399"), TermAppl("Tid", List(Var("x84675416"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s84675169", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s84675151", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84675151", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s84675169", List()),Label('P'),TermAppl("s84675151", List())), CGDecl(TermAppl("s84675169", List()),SymbolicName("Type", "x84675360")), CGRef(SymbolicName("Type", "x84675373"),TermAppl("s84675169", List())), CGDecl(TermAppl("s84675169", List()),SymbolicName("Type", "x84675399")), CGRef(SymbolicName("Type", "x84675416"),TermAppl("s84675169", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x84675399"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x84675360"), Var("x84675375")))),Resolution(Map(Tuple2(SymbolicName("Type", "x84675373"), SymbolicName("Type", "x84675360")), Tuple2(SymbolicName("Type", "x84675416"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type Sh = int
 in
end)
-----------------------------------
===================================
2016-12-15T11:44:43.437+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s84773763", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Divide", List(TermAppl("Int", List(Var("x84774873"))), TermAppl("Int", List(Var("x84774515"))))), TermAppl("Call", List(Var("x84773980"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s84773763", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s84773763", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s84773798", List()),Label('P'),TermAppl("s84773763", List())), CGDecl(TermAppl("s84773798", List()),ConcreteName("Loop", "", 84773802)), CGRef(SymbolicName("Var", "x84773980"),TermAppl("s84773798", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x84773980"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),while 129942 / 7 do
  flush())
-----------------------------------
===================================
2016-12-15T11:45:11.028+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s85576060", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x85578681"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x85578517"))), TermAppl("Cons", List(TermAppl("String", List(Var("x85578861"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s85576078", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s85576060", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s85576060", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s85576078", List()),Label('P'),TermAppl("s85576060", List())), CGRef(SymbolicName("Var", "x85578517"),TermAppl("s85576078", List())), CGRef(SymbolicName("Var", "x85578681"),TermAppl("s85576078", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x85578517"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x85578681"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  ord;
  substring;
  ""
end)
-----------------------------------
===================================
2016-12-15T11:45:11.21+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s85582715", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Divide", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x85583515"))), TermAppl("Nil", List()))))), TermAppl("Geq", List(TermAppl("String", List(Var("x85585785"))), TermAppl("String", List(Var("x85585949"))))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s85582733", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s85582715", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s85582715", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s85582733", List()),Label('P'),TermAppl("s85582715", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  (
    482
  ) / ("" >= "")
end)
-----------------------------------
===================================
2016-12-15T11:45:12.619+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s85636263", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("And", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x85643360"))), TermAppl("Var", List(Var("x85643196"))))), TermAppl("Int", List(Var("x85639980"))))), TermAppl("Int", List(Var("x85640810"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s85636263", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s85636263", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x85643196"),TermAppl("s85636263", List())), CGRef(SymbolicName("Var", "x85643360"),TermAppl("s85636263", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x85643196"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x85643360"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(size = size & 9) = 852)
-----------------------------------
===================================
2016-12-15T11:45:29.624+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s86143946", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s86143964", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s86143946", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s86143946", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s86143964", List()),Label('P'),TermAppl("s86143946", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:45:43.358+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x86515433")), List(TermAppl("s86508056", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x86513245"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x86510430"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x86513409"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x86513591"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x86515595"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x86515431"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s86508074", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s86508056", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s86508056", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s86508074", List()),Label('P'),TermAppl("s86508056", List())), CGRef(SymbolicName("Var", "x86513245"),TermAppl("s86508074", List())), CGRef(SymbolicName("Var", "x86513409"),TermAppl("s86508074", List())), CGRef(SymbolicName("Var", "x86513591"),TermAppl("s86508074", List())), CGRef(SymbolicName("Var", "x86515431"),TermAppl("s86508074", List())), CGRef(SymbolicName("Var", "x86515595"),TermAppl("s86508074", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x86515431"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x86515595"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x86513591"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x86513245"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x86513409"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  9;
  ord;
  getchar;
  exit;
  print
end)
-----------------------------------
===================================
2016-12-15T11:45:47.339+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s86633311", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("And", List(TermAppl("Var", List(Var("x86640028"))), TermAppl("Var", List(Var("x86638157"))))), TermAppl("And", List(TermAppl("Var", List(Var("x86640192"))), TermAppl("Var", List(Var("x86639726"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s86633311", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s86633311", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x86638157"),TermAppl("s86633311", List())), CGRef(SymbolicName("Var", "x86639726"),TermAppl("s86633311", List())), CGRef(SymbolicName("Var", "x86640028"),TermAppl("s86633311", List())), CGRef(SymbolicName("Var", "x86640192"),TermAppl("s86633311", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x86638157"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x86639726"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x86640028"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x86640192"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(exit & exit) <> (size & size))
-----------------------------------
===================================
2016-12-15T11:45:57.097+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s86939803", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x86941977"))), TermAppl("Var", List(Var("x86942141"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s86939821", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s86939803", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s86939803", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s86939821", List()),Label('P'),TermAppl("s86939803", List())), CGRef(SymbolicName("Var", "x86941977"),TermAppl("s86939821", List())), CGRef(SymbolicName("Var", "x86942141"),TermAppl("s86939821", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x86941977"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x86942141"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar >= getchar
end)
-----------------------------------
===================================
2016-12-15T11:46:19.749+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s87638843", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x87644707"))), TermAppl("Var", List(Var("x87644241"))))), TermAppl("And", List(TermAppl("Var", List(Var("x87642672"))), TermAppl("Var", List(Var("x87644543"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s87638843", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s87638843", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x87642672"),TermAppl("s87638843", List())), CGRef(SymbolicName("Var", "x87644241"),TermAppl("s87638843", List())), CGRef(SymbolicName("Var", "x87644543"),TermAppl("s87638843", List())), CGRef(SymbolicName("Var", "x87644707"),TermAppl("s87638843", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x87642672"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x87644241"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x87644543"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x87644707"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(exit = exit) + (concat & concat))
-----------------------------------
===================================
2016-12-15T11:46:21.083+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s87666831", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x87668728"), TermAppl("Var", List(Var("x87669377"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x87667052"), TermAppl("Var", List(Var("x87668705"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x87675957"), TermAppl("Var", List(Var("x87678862"))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x87675916"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x87672910"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x87679026"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s87666849", List()), "All")), CDistinct(Declarations(TermAppl("s87667004", List()), "All")), CDistinct(Declarations(TermAppl("s87667030", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s87666831", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s87666831", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s87667004", List()),Label('P'),TermAppl("s87666831", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s87667030", List()),Label('P'),TermAppl("s87667004", List())), CGDecl(TermAppl("s87667030", List()),SymbolicName("Var", "x87667052")), CGRef(SymbolicName("Var", "x87668705"),TermAppl("s87667004", List())), CGDecl(TermAppl("s87667004", List()),SymbolicName("Var", "x87668728")), CGRef(SymbolicName("Var", "x87669377"),TermAppl("s87666831", List())), CGDirectEdge(TermAppl("s87666849", List()),Label('P'),TermAppl("s87667030", List())), CGRef(SymbolicName("Var", "x87672910"),TermAppl("s87666849", List())), CGRef(SymbolicName("Var", "x87675916"),TermAppl("s87666849", List())), CGDecl(TermAppl("s87666849", List()),SymbolicName("Var", "x87675957")), CGRef(SymbolicName("Var", "x87678862"),TermAppl("s87667030", List())), CGRef(SymbolicName("Var", "x87679026"),TermAppl("s87666849", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x87667052"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x87675957"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x87668728"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x87668705"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x87675916"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x87669377"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x87679026"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x87672910"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x87678862"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
  var y := ord
  var v_ := concat
  var K_ := chr
 in
  ord;
  chr;
  ord;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:46:34.985+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s88108966", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x88114429"), TermAppl("Tid", List(Var("x88114442"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x88112806"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s88108984", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s88108966", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88108966", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s88108984", List()),Label('P'),TermAppl("s88108966", List())), CGDecl(TermAppl("s88108984", List()),SymbolicName("Type", "x88114429")), CGRef(SymbolicName("Type", "x88114442"),TermAppl("s88108984", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x88114429"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x88114442"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type a = string
 in
  "";
  nil
end)
-----------------------------------
===================================
2016-12-15T11:46:35.612+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s88134641", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s88134659", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s88134641", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88134641", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s88134659", List()),Label('P'),TermAppl("s88134641", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:46:53.483+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x88688461")), List(TermAppl("s88680300", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x88680560"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88683429"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88688095"))), TermAppl("Cons", List(TermAppl("String", List(Var("x88685669"))), TermAppl("Cons", List(TermAppl("String", List(Var("x88687929"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88688277"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88688459"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s88680318", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s88680300", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88680300", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s88680318", List()),Label('P'),TermAppl("s88680300", List())), CGRef(SymbolicName("Var", "x88683429"),TermAppl("s88680318", List())), CGRef(SymbolicName("Var", "x88688095"),TermAppl("s88680318", List())), CGRef(SymbolicName("Var", "x88688277"),TermAppl("s88680318", List())), CGRef(SymbolicName("Var", "x88688459"),TermAppl("s88680318", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x88683429"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x88688095"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x88688277"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x88688459"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  0;
  substring;
  flush;
  "";
  "\	\\"";
  getchar;
  print
end)
-----------------------------------
===================================
2016-12-15T11:46:59.382+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s88876579", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Int", List(Var("x88877536"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Call", List(Var("x88877172"), TermAppl("Cons", List(TermAppl("Int", List(Var("x88877707"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s88876579", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88876579", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s88876614", List()),Label('P'),TermAppl("s88876579", List())), CGDecl(TermAppl("s88876614", List()),ConcreteName("Loop", "", 88876618)), CGRef(SymbolicName("Var", "x88877172"),TermAppl("s88876614", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x88877172"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),while 47 do
  (
    exit(50)
  ))
-----------------------------------
===================================
2016-12-15T11:47:00.248+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x88910199")), List(TermAppl("s88905138", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x88905358"), TermAppl("Var", List(Var("x88910015"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88907593"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88909851"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x88910197"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s88905156", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s88905138", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88905138", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s88905156", List()),Label('P'),TermAppl("s88905138", List())), CGDecl(TermAppl("s88905156", List()),SymbolicName("Var", "x88905358")), CGRef(SymbolicName("Var", "x88907593"),TermAppl("s88905156", List())), CGRef(SymbolicName("Var", "x88909851"),TermAppl("s88905156", List())), CGRef(SymbolicName("Var", "x88910015"),TermAppl("s88905138", List())), CGRef(SymbolicName("Var", "x88910197"),TermAppl("s88905156", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x88905358"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x88907593"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x88909851"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x88910015"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x88910197"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
  var g := concat
 in
  flush;
  getchar;
  chr
end)
-----------------------------------
===================================
2016-12-15T11:47:00.916+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s88924161", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Call", List(Var("x88928575"), TermAppl("Nil", List()))), TermAppl("IfThen", List(TermAppl("Int", List(Var("x88928939"))), TermAppl("Seq", List(TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s88924161", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s88924161", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x88928575"),TermAppl("s88924161", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x88928575"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),flush() <= if 1 then
  (
  ))
-----------------------------------
===================================
2016-12-15T11:47:04.706+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s89045475", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("And", List(TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x89054823"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x89054037"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x89054659"))), TermAppl("Var", List(Var("x89051198"))))))), TermAppl("Int", List(Var("x89051757"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s89045475", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s89045475", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x89051198"),TermAppl("s89045475", List())), CGRef(SymbolicName("Var", "x89054037"),TermAppl("s89045475", List())), CGRef(SymbolicName("Var", "x89054659"),TermAppl("s89045475", List())), CGRef(SymbolicName("Var", "x89054823"),TermAppl("s89045475", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x89051198"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x89054037"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x89054659"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x89054823"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(
  concat
) < concat & substring <> substring | 89)
-----------------------------------
===================================
2016-12-15T11:47:12.612+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s89312420", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Lt", List(TermAppl("Geq", List(TermAppl("If", List(TermAppl("Int", List(Var("x89319006"))), TermAppl("String", List(Var("x89320077"))), TermAppl("Call", List(Var("x89320440"), TermAppl("Nil", List()))))), TermAppl("String", List(Var("x89318583"))))), TermAppl("Int", List(Var("x89316137"))))), TermAppl("Int", List(Var("x89320142"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s89312420", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s89312420", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x89320440"),TermAppl("s89312420", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x89320440"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(((if 5 then
  "\^Q"
else
  getchar()) >= "") < 16414) > 95)
-----------------------------------
===================================
2016-12-15T11:47:17.991+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s89474548", List())), State(TermAppl("Mod", List(As(Var("x89474590"),TermAppl("For", List(TermAppl("Var", List(Var("x89474591"))), TermAppl("Int", List(Var("x89477820"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x89477757"))), TermAppl("Var", List(Var("x89477236"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List())))))))),List(CDistinct(Declarations(TermAppl("s89478106", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s89474548", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s89474548", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s89474588", List()),Label('P'),TermAppl("s89474548", List())), CGDecl(TermAppl("s89474588", List()),SymbolicName("Var", "x89474591")), CGDecl(TermAppl("s89474588", List()),SymbolicName("Loop", "n89474595")), CGRef(SymbolicName("Var", "x89477236"),TermAppl("s89474548", List())), CGRef(SymbolicName("Var", "x89477757"),TermAppl("s89474548", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s89478106", List()),Label('P'),TermAppl("s89474588", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x89474591"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x89477236"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x89477757"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for q := 8075 to not < not do
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T11:47:21.046+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x89553650")), List(TermAppl("s89551534", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x89553437"), TermAppl("Tid", List(Var("x89553678"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x89553661"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x89553695"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x89553387"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x89553648"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s89551552", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s89551534", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s89551534", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s89551552", List()),Label('P'),TermAppl("s89551534", List())), CGDecl(TermAppl("s89551552", List()),SymbolicName("Type", "x89553437")), CGRef(SymbolicName("Var", "x89553648"),TermAppl("s89551552", List())), CGDecl(TermAppl("s89551552", List()),SymbolicName("Type", "x89553661")), CGRef(SymbolicName("Type", "x89553678"),TermAppl("s89551552", List())), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x89553695"),TermAppl("s89551552", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x89553437"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(Var("x89553697"), TermAppl("s89553681", List()))), TermAppl("s89553681", List())))), Binding(SymbolicName("Type", "x89553661"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(Var("x89553697"), TermAppl("s89553681", List()))), TermAppl("s89553681", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x89553648"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x89553678"), SymbolicName("Type", "x89553661")), Tuple2(SymbolicName("Type", "x89553695"), SymbolicName("Type", "x89553661")))),SubtypeRelation(List()),List())),let
  type S = n1
  type n1 = array of n1
 in
  "\"";
  print
end)
-----------------------------------
===================================
2016-12-15T11:47:37.372+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s90076491", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Int", List(Var("x90082277"))), TermAppl("Neq", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x90082214"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x90084414"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x90084578"))), TermAppl("Nil", List()))))))))), TermAppl("Int", List(Var("x90083149"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s90076491", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s90076491", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x90082214"),TermAppl("s90076491", List())), CGRef(SymbolicName("Var", "x90084414"),TermAppl("s90076491", List())), CGRef(SymbolicName("Var", "x90084578"),TermAppl("s90076491", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x90082214"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x90084414"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x90084578"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),67 <> ((ord = (
  chr;
  ord
)) <> 5))
-----------------------------------
===================================
2016-12-15T11:47:48.686+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x90476684")), List(TermAppl("s90474827", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x90476705"), TermAppl("Var", List(Var("x90476864"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x90476682"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s90474845", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s90474827", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s90474827", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s90474845", List()),Label('P'),TermAppl("s90474827", List())), CGRef(SymbolicName("Var", "x90476682"),TermAppl("s90474845", List())), CGDecl(TermAppl("s90474845", List()),SymbolicName("Var", "x90476705")), CGRef(SymbolicName("Var", "x90476864"),TermAppl("s90474827", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x90476705"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x90476682"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x90476864"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  var X_ := flush
 in
  concat
end)
-----------------------------------
===================================
2016-12-15T11:47:50.5+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s90529358", List())), State(TermAppl("Mod", List(As(Var("x90529400"),TermAppl("For", List(TermAppl("Var", List(Var("x90529401"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x90533327"))), TermAppl("Nil", List()))))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x90532046"))), TermAppl("Var", List(Var("x90532900"))))), As(Var("x90532099"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s90529358", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s90529358", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s90529398", List()),Label('P'),TermAppl("s90529358", List())), CGDecl(TermAppl("s90529398", List()),SymbolicName("Var", "x90529401")), CGDecl(TermAppl("s90529398", List()),SymbolicName("Loop", "n90529405")), CGRef(SymbolicName("Var", "x90532046"),TermAppl("s90529358", List())), CGRef(SymbolicName("Loop", "n90532100"),TermAppl("s90529398", List())), CGRef(SymbolicName("Var", "x90532900"),TermAppl("s90529358", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x90529401"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x90532046"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Loop", "n90532100"), SymbolicName("Loop", "n90529405")), Tuple2(SymbolicName("Var", "x90532900"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for o := (
  nil;
  7
) to ord <= ord do
  break)
-----------------------------------
===================================
2016-12-15T11:47:55.354+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s90673452", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s90673470", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s90673452", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s90673452", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s90673470", List()),Label('P'),TermAppl("s90673452", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:47:59.615+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s90816156", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s90816174", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s90816156", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s90816156", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s90816174", List()),Label('P'),TermAppl("s90816156", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:48:13.414+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s91257986", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x91262225"))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x91262826"))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s91258495", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s91257986", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s91257986", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s91258495", List()),Label('P'),TermAppl("s91257986", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),if 2 = - 8 then
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T11:48:14.642+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s91305645", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x91312172"))), TermAppl("Var", List(Var("x91312638"))))), TermAppl("Eq", List(TermAppl("Int", List(Var("x91309682"))), TermAppl("Int", List(Var("x91312235"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s91305645", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s91305645", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x91312172"),TermAppl("s91305645", List())), CGRef(SymbolicName("Var", "x91312638"),TermAppl("s91305645", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x91312172"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x91312638"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(chr < chr) < (83 = 5))
-----------------------------------
===================================
2016-12-15T11:48:19.332+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s91470315", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x91483179"))), TermAppl("Cons", List(TermAppl("String", List(Var("x91486201"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x91486039"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x91486385"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x91479582"))))), TermAppl("Divide", List(TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Leq", List(TermAppl("Var", List(Var("x91476295"))), TermAppl("Var", List(Var("x91482247"))))))))))),List(CDistinct(Declarations(TermAppl("s91479604", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s91470315", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s91470315", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x91476295"),TermAppl("s91470315", List())), CGRef(SymbolicName("Var", "x91479582"),TermAppl("s91470315", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s91479604", List()),Label('P'),TermAppl("s91470315", List())), CGRef(SymbolicName("Var", "x91482247"),TermAppl("s91470315", List())), CGRef(SymbolicName("Var", "x91483179"),TermAppl("s91479604", List())), CGRef(SymbolicName("Var", "x91486039"),TermAppl("s91479604", List())), CGRef(SymbolicName("Var", "x91486385"),TermAppl("s91479604", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x91476295"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x91479582"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x91482247"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x91486385"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x91486039"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x91483179"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(let
 in
  concat;
  "\"";
  (
    substring;
    chr
  )
end & chr) < (nil & nil) / (size <= ord))
-----------------------------------
===================================
2016-12-15T11:48:31.614+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s91900402", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x91900633"), TermAppl("Tid", List(Var("x91900854"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("String", List(Var("x91900834"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s91900420", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s91900402", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s91900402", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s91900420", List()),Label('P'),TermAppl("s91900402", List())), CGDecl(TermAppl("s91900420", List()),SymbolicName("Type", "x91900633")), CGRef(SymbolicName("Type", "x91900854"),TermAppl("s91900420", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x91900633"), TermAppl("INT", List())), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x91900854"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type e_44Y = int
 in
  "\n"
end)
-----------------------------------
===================================
2016-12-15T11:49:04.038+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s92920034", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x92927931"))), TermAppl("Var", List(Var("x92927767"))))), TermAppl("And", List(TermAppl("Var", List(Var("x92925954"))), TermAppl("Var", List(Var("x92925318"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s92920034", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s92920034", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x92925318"),TermAppl("s92920034", List())), CGRef(SymbolicName("Var", "x92925954"),TermAppl("s92920034", List())), CGRef(SymbolicName("Var", "x92927767"),TermAppl("s92920034", List())), CGRef(SymbolicName("Var", "x92927931"),TermAppl("s92920034", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x92925318"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x92925954"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x92927767"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x92927931"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(exit < exit) <> (flush & flush))
-----------------------------------
===================================
2016-12-15T11:49:16.575+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s93243698", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Times", List(TermAppl("Plus", List(TermAppl("Call", List(Var("x93246643"), TermAppl("Cons", List(TermAppl("Int", List(Var("x93250319"))), TermAppl("Nil", List()))))), TermAppl("Int", List(Var("x93247201"))))), TermAppl("Uminus", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x93251832"))), TermAppl("Int", List(Var("x93249136"))))))))), TermAppl("Call", List(Var("x93245345"), TermAppl("Cons", List(TermAppl("String", List(Var("x93251760"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s93243698", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s93243698", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x93245345"),TermAppl("s93243698", List())), CGRef(SymbolicName("Var", "x93246643"),TermAppl("s93243698", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x93245345"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x93246643"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),if (not(51) + 74) * - (6 = 9) then
  print(""))
-----------------------------------
===================================
2016-12-15T11:49:20.498+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s93328588", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x93333927"))), TermAppl("Cons", List(TermAppl("String", List(Var("x93339492"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x93341303"))), TermAppl("Nil", List()))))))))), TermAppl("Int", List(Var("x93330765"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x93338032"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x93341240"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x93339575"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s93328770", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s93328588", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s93328588", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s93328770", List()),Label('P'),TermAppl("s93328588", List())), CGRef(SymbolicName("Var", "x93338032"),TermAppl("s93328770", List())), CGRef(SymbolicName("Var", "x93341240"),TermAppl("s93328770", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x93338032"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x93341240"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),((
  20;
  "\\\882\t\077\

\\835\\";
  44
) < 5) - let
 in
  print;
  not;
  2119
end)
-----------------------------------
===================================
2016-12-15T11:49:29.195+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s93547008", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x93547276"), TermAppl("Tid", List(Var("x93547321"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x93547280"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x93547359"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x93547325"), TermAppl("Tid", List(Var("x93547338"))))), TermAppl("Nil", List()))))))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x93547342"), TermAppl("Tid", List(Var("x93547355"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s93547026", List()), "All")), CDistinct(Declarations(TermAppl("s93547188", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s93547008", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s93547008", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s93547188", List()),Label('P'),TermAppl("s93547008", List())), CGDirectEdge(TermAppl("s93547026", List()),Label('P'),TermAppl("s93547188", List())), CGDecl(TermAppl("s93547188", List()),SymbolicName("Type", "x93547276")), CGDecl(TermAppl("s93547188", List()),SymbolicName("Type", "x93547280")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x93547321"),TermAppl("s93547188", List())), CGDecl(TermAppl("s93547188", List()),SymbolicName("Type", "x93547325")), CGRef(SymbolicName("Type", "x93547338"),TermAppl("s93547188", List())), CGDecl(TermAppl("s93547026", List()),SymbolicName("Type", "x93547342")), CGRef(SymbolicName("Type", "x93547355"),TermAppl("s93547026", List())), CGRef(SymbolicName("Type", "x93547359"),TermAppl("s93547188", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x93547342"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x93547325"), Var("x93547340")), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x93547276"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x93547280"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s93547283", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x93547321"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x93547338"), SymbolicName("Type", "x93547325")), Tuple2(SymbolicName("Type", "x93547355"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x93547359"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type E = int
  type e = array of string
  type n1 = n1
  type Xve = int
 in
end)
-----------------------------------
===================================
2016-12-15T11:49:34.418+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s93716668", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x93720059"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x93722362"))), TermAppl("Nil", List()))))))), TermAppl("Gt", List(TermAppl("Int", List(Var("x93721153"))), TermAppl("Int", List(Var("x93722425"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s93716668", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s93716668", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x93720059"),TermAppl("s93716668", List())), CGRef(SymbolicName("Var", "x93722362"),TermAppl("s93716668", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x93720059"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x93722362"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(flush = (
  flush
)) + (5 > 23))
-----------------------------------
===================================
2016-12-15T11:49:34.705+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s93729405", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x93733720"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x93733795"), TermAppl("Cons", List(TermAppl("Int", List(Var("x93733979"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("And", List(TermAppl("String", List(Var("x93733353"))), TermAppl("Call", List(Var("x93733412"), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s93729587", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s93729405", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s93729405", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x93733412"),TermAppl("s93729405", List())), CGDirectEdge(TermAppl("s93729587", List()),Label('P'),TermAppl("s93729405", List())), CGRef(SymbolicName("Var", "x93733720"),TermAppl("s93729587", List())), CGRef(SymbolicName("Var", "x93733795"),TermAppl("s93729587", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x93733412"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x93733720"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x93733795"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  exit;
  not(8)
end <= ("" & getchar()))
-----------------------------------
===================================
2016-12-15T11:50:01.561+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s94523668", List())), State(TermAppl("Mod", List(As(Var("x94523710"),TermAppl("For", List(TermAppl("Var", List(Var("x94523711"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x94529664"))), TermAppl("Var", List(Var("x94526356"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x94528716"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x94530130"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x94529721"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s94523668", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s94523668", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s94523708", List()),Label('P'),TermAppl("s94523668", List())), CGDecl(TermAppl("s94523708", List()),SymbolicName("Var", "x94523711")), CGDecl(TermAppl("s94523708", List()),SymbolicName("Loop", "n94523715")), CGRef(SymbolicName("Var", "x94526356"),TermAppl("s94523668", List())), CGRef(SymbolicName("Var", "x94528716"),TermAppl("s94523668", List())), CGRef(SymbolicName("Var", "x94529664"),TermAppl("s94523668", List())), CGRef(SymbolicName("Var", "x94529721"),TermAppl("s94523708", List())), CGRef(SymbolicName("Var", "x94530130"),TermAppl("s94523668", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x94523711"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x94526356"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x94529664"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x94530130"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x94529721"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x94528716"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for g := size > ord to not = (
  not
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:50:10.487+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x94822550")), List(TermAppl("s94818269", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x94820726"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x94822712"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x94822548"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s94818287", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s94818269", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s94818269", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s94818287", List()),Label('P'),TermAppl("s94818269", List())), CGRef(SymbolicName("Var", "x94820726"),TermAppl("s94818287", List())), CGRef(SymbolicName("Var", "x94822548"),TermAppl("s94818287", List())), CGRef(SymbolicName("Var", "x94822712"),TermAppl("s94818287", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x94820726"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x94822548"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x94822712"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  chr;
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:50:15.675+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s94971604", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("And", List(TermAppl("Var", List(Var("x94975631"))), TermAppl("Var", List(Var("x94974995"))))), TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x94977790"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x94977444"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s94971604", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s94971604", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x94974995"),TermAppl("s94971604", List())), CGRef(SymbolicName("Var", "x94975631"),TermAppl("s94971604", List())), CGRef(SymbolicName("Var", "x94977444"),TermAppl("s94971604", List())), CGRef(SymbolicName("Var", "x94977790"),TermAppl("s94971604", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x94974995"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x94975631"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x94977444"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x94977790"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(print & print) / ((
  getchar
) | getchar))
-----------------------------------
===================================
2016-12-15T11:50:32.522+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x95486763")), List(TermAppl("s95479876", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x95482333"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x95484757"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x95484593"))), TermAppl("Cons", List(TermAppl("String", List(Var("x95486595"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x95486761"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s95479894", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s95479876", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s95479876", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s95479894", List()),Label('P'),TermAppl("s95479876", List())), CGRef(SymbolicName("Var", "x95482333"),TermAppl("s95479894", List())), CGRef(SymbolicName("Var", "x95484593"),TermAppl("s95479894", List())), CGRef(SymbolicName("Var", "x95484757"),TermAppl("s95479894", List())), CGRef(SymbolicName("Var", "x95486761"),TermAppl("s95479894", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x95482333"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x95484593"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x95484757"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x95486761"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  substring;
  flush;
  "\n";
  size
end)
-----------------------------------
===================================
2016-12-15T11:50:44.596+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x95715513")), List(TermAppl("s95708260", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x95715347"))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x95715511"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s95708278", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s95708260", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s95708260", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s95708278", List()),Label('P'),TermAppl("s95708260", List())), CGRef(SymbolicName("Var", "x95715347"),TermAppl("s95708278", List())), CGRef(SymbolicName("Var", "x95715511"),TermAppl("s95708278", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x95715347"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x95715511"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  (
    ord
  );
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:51:08.304+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s96421992", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("And", List(TermAppl("Var", List(Var("x96429147"))), TermAppl("Var", List(Var("x96427276"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x96428845"))), TermAppl("Var", List(Var("x96429311"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s96421992", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s96421992", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x96427276"),TermAppl("s96421992", List())), CGRef(SymbolicName("Var", "x96428845"),TermAppl("s96421992", List())), CGRef(SymbolicName("Var", "x96429147"),TermAppl("s96421992", List())), CGRef(SymbolicName("Var", "x96429311"),TermAppl("s96421992", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x96427276"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x96428845"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x96429147"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x96429311"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(size & size) >= (getchar > getchar))
-----------------------------------
===================================
2016-12-15T11:51:17.583+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x96729362")), List(TermAppl("s96715029", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x96720236"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96717486"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96727556"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96722478"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96729524"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96725280"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x96729360"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s96715047", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s96715029", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s96715029", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s96715047", List()),Label('P'),TermAppl("s96715029", List())), CGRef(SymbolicName("Var", "x96717486"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96720236"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96722478"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96725280"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96727556"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96729360"),TermAppl("s96715047", List())), CGRef(SymbolicName("Var", "x96729524"),TermAppl("s96715047", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x96720236"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x96729360"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x96722478"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x96717486"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x96725280"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x96727556"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x96729524"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  chr;
  exit;
  print;
  exit;
  concat;
  ord
end)
-----------------------------------
===================================
2016-12-15T11:51:50.52+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s97700295", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Or", List(TermAppl("Var", List(Var("x97707508"))), TermAppl("Var", List(Var("x97708029"))))), TermAppl("Divide", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x97714506"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x97712100"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x97714589"))), TermAppl("Nil", List()))))))))))), TermAppl("Lt", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("Call", List(Var("x97708862"), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s97700295", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s97700295", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x97707508"),TermAppl("s97700295", List())), CGRef(SymbolicName("Var", "x97708029"),TermAppl("s97700295", List())), CGRef(SymbolicName("Var", "x97708862"),TermAppl("s97700295", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x97707508"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x97708029"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x97708862"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(print | print) | (
  "";
  nil;
  "\\";
  6
) / ((
) < flush()))
-----------------------------------
===================================
2016-12-15T11:51:55.869+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s97882012", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x97887841"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x97888403"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x97886806"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x97888241"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s97882194", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s97882012", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s97882012", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s97882194", List()),Label('P'),TermAppl("s97882012", List())), CGRef(SymbolicName("Var", "x97886806"),TermAppl("s97882194", List())), CGRef(SymbolicName("Var", "x97887841"),TermAppl("s97882012", List())), CGRef(SymbolicName("Var", "x97888241"),TermAppl("s97882194", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x97886806"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x97887841"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x97888241"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit <> let
 in
  "";
  size;
  exit
end)
-----------------------------------
===================================
2016-12-15T11:52:03.387+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s98149866", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x98152973"))), TermAppl("Var", List(Var("x98152802"))))), TermAppl("Call", List(Var("x98150410"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s98149866", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s98149866", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s98149901", List()),Label('P'),TermAppl("s98149866", List())), CGDecl(TermAppl("s98149901", List()),ConcreteName("Loop", "", 98149905)), CGRef(SymbolicName("Var", "x98150410"),TermAppl("s98149901", List())), CGRef(SymbolicName("Var", "x98152802"),TermAppl("s98149866", List())), CGRef(SymbolicName("Var", "x98152973"),TermAppl("s98149866", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x98150410"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x98152802"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x98152973"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),while not <> not do
  flush())
-----------------------------------
===================================
2016-12-15T11:52:13.914+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x98447011")), List(TermAppl("s98446980", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Int", List(Var("x98455698"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x98455635"))), TermAppl("Var", List(Var("x98456101"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x98452276"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x98453954"))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s98446980", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s98446980", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x98452276"),TermAppl("s98446980", List())), CGRef(SymbolicName("Var", "x98453954"),TermAppl("s98446980", List())), CGRef(SymbolicName("Var", "x98455635"),TermAppl("s98446980", List())), CGRef(SymbolicName("Var", "x98456101"),TermAppl("s98446980", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x98452276"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x98453954"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x98455635"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x98456101"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if 7 then
  ord < ord
else
  chr = (
    chr
  ))
-----------------------------------
===================================
2016-12-15T11:52:41.19+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s99310974", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s99311156", List()), "All")), CDistinct(Declarations(TermAppl("s99312987", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s99310974", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s99310974", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s99311156", List()),Label('P'),TermAppl("s99310974", List())), CGDirectEdge(TermAppl("s99312987", List()),Label('P'),TermAppl("s99310974", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end <= let
 in
end)
-----------------------------------
===================================
2016-12-15T11:52:51.08+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s99610731", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s99610749", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s99610731", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s99610731", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s99610749", List()),Label('P'),TermAppl("s99610731", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:53:01.887+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s99911312", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("If", List(TermAppl("And", List(TermAppl("Var", List(Var("x99920014"))), TermAppl("Var", List(Var("x99917304"))))), TermAppl("Var", List(Var("x99919272"))), TermAppl("Var", List(Var("x99919712"))))), TermAppl("Var", List(Var("x99920178"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s99911312", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s99911312", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x99917304"),TermAppl("s99911312", List())), CGRef(SymbolicName("Var", "x99919272"),TermAppl("s99911312", List())), CGRef(SymbolicName("Var", "x99919712"),TermAppl("s99911312", List())), CGRef(SymbolicName("Var", "x99920014"),TermAppl("s99911312", List())), CGRef(SymbolicName("Var", "x99920178"),TermAppl("s99911312", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x99919712"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x99919272"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x99920178"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x99917304"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x99920014"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(if ord & ord then
  ord
else
  size) <= size)
-----------------------------------
===================================
2016-12-15T11:53:03.605+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s99970402", List())), State(TermAppl("Mod", List(As(Var("x99970444"),TermAppl("For", List(TermAppl("Var", List(Var("x99970445"))), TermAppl("Minus", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x99975901"))), TermAppl("Var", List(Var("x99975186"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x99976516"))))))), TermAppl("Int", List(Var("x99976874"))), As(Var("x99975954"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s99970402", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s99970402", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s99970442", List()),Label('P'),TermAppl("s99970402", List())), CGDecl(TermAppl("s99970442", List()),SymbolicName("Var", "x99970445")), CGDecl(TermAppl("s99970442", List()),SymbolicName("Loop", "n99970449")), CGRef(SymbolicName("Var", "x99975186"),TermAppl("s99970402", List())), CGRef(SymbolicName("Var", "x99975901"),TermAppl("s99970402", List())), CGRef(SymbolicName("Loop", "n99975955"),TermAppl("s99970442", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x99970445"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x99975186"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x99975901"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Loop", "n99975955"), SymbolicName("Loop", "n99970449")))),SubtypeRelation(List()),List())),for i_ := (concat <> concat) - - 4 to 7 do
  break)
-----------------------------------
===================================
2016-12-15T11:53:05.886+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s100047592", List())), State(TermAppl("Mod", List(As(Var("x100047634"),TermAppl("For", List(TermAppl("Var", List(Var("x100047635"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x100050726"))), TermAppl("Var", List(Var("x100051084"))))), TermAppl("Nil", List()))))), TermAppl("Int", List(Var("x100051147"))), TermAppl("Call", List(Var("x100047809"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s100047592", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s100047592", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s100047632", List()),Label('P'),TermAppl("s100047592", List())), CGDecl(TermAppl("s100047632", List()),SymbolicName("Var", "x100047635")), CGDecl(TermAppl("s100047632", List()),SymbolicName("Loop", "n100047639")), CGRef(SymbolicName("Var", "x100047809"),TermAppl("s100047632", List())), CGRef(SymbolicName("Var", "x100050726"),TermAppl("s100047592", List())), CGRef(SymbolicName("Var", "x100051084"),TermAppl("s100047592", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x100047635"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x100047809"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x100050726"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x100051084"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for U := (
  size < ord
) to 9 do
  flush())
-----------------------------------
===================================
2016-12-15T11:53:13.779+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x100287415")), List(TermAppl("s100287405", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x100287574"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x100292650"))), TermAppl("Var", List(Var("x100292014"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x100294627"))), TermAppl("Var", List(Var("x100294463"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s100287405", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s100287405", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x100287574"),TermAppl("s100287405", List())), CGRef(SymbolicName("Var", "x100292014"),TermAppl("s100287405", List())), CGRef(SymbolicName("Var", "x100292650"),TermAppl("s100287405", List())), CGRef(SymbolicName("Var", "x100294463"),TermAppl("s100287405", List())), CGRef(SymbolicName("Var", "x100294627"),TermAppl("s100287405", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x100294463"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x100294627"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x100292650"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x100287574"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x100292014"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),int[ord > size] of print <= print)
-----------------------------------
===================================
2016-12-15T11:54:09.536+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x101977666")), List(TermAppl("s101977635", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("And", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x101994776"), TermAppl("Var", List(Var("x101996153"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x101997063"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x101997815"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x101998281"))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x101991493"))))), TermAppl("Minus", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x101988206"))), TermAppl("Var", List(Var("x101984259"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x101992267"))), TermAppl("Var", List(Var("x101986604"))))))), TermAppl("And", List(TermAppl("Var", List(Var("x101994716"))), TermAppl("Var", List(Var("x101998117"))))))))),List(CDistinct(Declarations(TermAppl("s101992289", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s101977635", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s101977635", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x101984259"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101986604"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101988206"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101991493"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101992267"),TermAppl("s101977635", List())), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x101994716"),TermAppl("s101977635", List())), CGDirectEdge(TermAppl("s101992289", List()),Label('P'),TermAppl("s101977635", List())), CGDecl(TermAppl("s101992289", List()),SymbolicName("Var", "x101994776")), CGRef(SymbolicName("Var", "x101996153"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101997063"),TermAppl("s101992289", List())), CGRef(SymbolicName("Var", "x101997815"),TermAppl("s101992289", List())), CGRef(SymbolicName("Var", "x101998117"),TermAppl("s101977635", List())), CGRef(SymbolicName("Var", "x101998281"),TermAppl("s101992289", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x101994776"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x101984259"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x101986604"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x101996153"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x101991493"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x101992267"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x101997063"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x101998281"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x101988206"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x101997815"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x101994716"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x101998117"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),if let
  var g := not
 in
  size;
  ord;
  not
end & not then
  (chr <= chr) - (ord <> ord)
else
  getchar & getchar)
-----------------------------------
===================================
2016-12-15T11:54:10.076+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x102009882")), List(TermAppl("s102009872", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x102010041"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x102015526"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x102016408"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x102016590"))), TermAppl("Nil", List()))))))))), TermAppl("Neq", List(TermAppl("Int", List(Var("x102012320"))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x102015941"), TermAppl("Cons", List(TermAppl("Int", List(Var("x102016118"))), TermAppl("Nil", List()))))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s102009872", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s102009872", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x102010041"),TermAppl("s102009872", List())), CGRef(SymbolicName("Var", "x102015526"),TermAppl("s102009872", List())), CGRef(SymbolicName("Var", "x102015941"),TermAppl("s102009872", List())), CGRef(SymbolicName("Var", "x102016408"),TermAppl("s102009872", List())), CGRef(SymbolicName("Var", "x102016590"),TermAppl("s102009872", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x102010041"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x102015941"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x102016408"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x102015526"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x102016590"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),int[ord < (
  substring;
  ord
)] of 423596 <> - not(6))
-----------------------------------
===================================
2016-12-15T11:54:36.303+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x102764821")), List(TermAppl("s102762800", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x102764983"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x102764819"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s102762818", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s102762800", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s102762800", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s102762818", List()),Label('P'),TermAppl("s102762800", List())), CGRef(SymbolicName("Var", "x102764819"),TermAppl("s102762818", List())), CGRef(SymbolicName("Var", "x102764983"),TermAppl("s102762818", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x102764819"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x102764983"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  print
end)
-----------------------------------
===================================
2016-12-15T11:54:49.902+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s103137119", List())), State(TermAppl("Mod", List(As(Var("x103137161"),TermAppl("For", List(TermAppl("Var", List(Var("x103137162"))), TermAppl("Geq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x103143833"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x103143997"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x103142402"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x103139877"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x103142887"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x103137336"), TermAppl("Nil", List())))))))),List(CResolve(SymbolicName("Var", "x103143997"),Var("x103143998")), CDistinct(Declarations(TermAppl("s103142424", List()), "All")), CTypeOf(Var("x103143998"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s103137119", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s103137119", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s103137159", List()),Label('P'),TermAppl("s103137119", List())), CGDecl(TermAppl("s103137159", List()),SymbolicName("Var", "x103137162")), CGDecl(TermAppl("s103137159", List()),SymbolicName("Loop", "n103137166")), CGRef(SymbolicName("Var", "x103137336"),TermAppl("s103137159", List())), CGRef(SymbolicName("Var", "x103139877"),TermAppl("s103137119", List())), CGRef(SymbolicName("Var", "x103142402"),TermAppl("s103137119", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s103142424", List()),Label('P'),TermAppl("s103137119", List())), CGRef(SymbolicName("Var", "x103142887"),TermAppl("s103137119", List())), CGRef(SymbolicName("Var", "x103143833"),TermAppl("s103142424", List())), CGRef(SymbolicName("Var", "x103143997"),TermAppl("s103142424", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x103137162"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x103143833"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x103142887"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x103137336"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x103139877"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x103142402"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for q := let
 in
  size;
  not
end >= not to flush <= (
  flush
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:54:50.895+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s103164248", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Int", List(Var("x103169433"))), TermAppl("Lt", List(TermAppl("Int", List(Var("x103168579"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x103168516"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x103170281"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s103169756", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s103164248", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s103164248", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x103168516"),TermAppl("s103164248", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s103169756", List()),Label('P'),TermAppl("s103164248", List())), CGRef(SymbolicName("Var", "x103170281"),TermAppl("s103169756", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x103168516"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x103170281"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),2 * (1 < (concat <= (
  (
    let
     in
      (
        concat
      )
    end
  )
))))
-----------------------------------
===================================
2016-12-15T11:55:05.494+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s103514346", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s103514364", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s103514346", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s103514346", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s103514364", List()),Label('P'),TermAppl("s103514346", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:55:28.872+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s104076185", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s104076203", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s104076185", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s104076185", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s104076203", List()),Label('P'),TermAppl("s104076185", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:55:31.886+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s104162996", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x104163198"), TermAppl("Var", List(Var("x104163357"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x104167457"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x104165635"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s104163014", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s104162996", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s104162996", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s104163014", List()),Label('P'),TermAppl("s104162996", List())), CGDecl(TermAppl("s104163014", List()),SymbolicName("Var", "x104163198")), CGRef(SymbolicName("Var", "x104163357"),TermAppl("s104162996", List())), CGRef(SymbolicName("Var", "x104165635"),TermAppl("s104163014", List())), CGRef(SymbolicName("Var", "x104167457"),TermAppl("s104163014", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x104163198"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x104163357"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x104165635"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x104167457"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
  var F2 := chr
 in
  substring;
  exit;
  nil
end)
-----------------------------------
===================================
2016-12-15T11:55:42.915+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s104449786", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Or", List(TermAppl("Var", List(Var("x104452288"))), TermAppl("Var", List(Var("x104452452"))))), TermAppl("Call", List(Var("x104450003"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s104449786", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s104449786", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s104449821", List()),Label('P'),TermAppl("s104449786", List())), CGDecl(TermAppl("s104449821", List()),ConcreteName("Loop", "", 104449825)), CGRef(SymbolicName("Var", "x104450003"),TermAppl("s104449821", List())), CGRef(SymbolicName("Var", "x104452288"),TermAppl("s104449786", List())), CGRef(SymbolicName("Var", "x104452452"),TermAppl("s104449786", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x104450003"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x104452288"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x104452452"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),while size | ord do
  flush())
-----------------------------------
===================================
2016-12-15T11:55:50.106+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s104602569", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("While", List(TermAppl("Divide", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x104610472"))), TermAppl("Var", List(Var("x104610830"))))), TermAppl("Int", List(Var("x104608024"))))), TermAppl("Call", List(Var("x104606720"), TermAppl("Nil", List()))))), TermAppl("While", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x104612814"))), TermAppl("Var", List(Var("x104612978"))))), TermAppl("Call", List(Var("x104605477"), TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s104602569", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s104602569", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s104602768", List()),Label('P'),TermAppl("s104602569", List())), CGDecl(TermAppl("s104602768", List()),ConcreteName("Loop", "", 104602772)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s104604581", List()),Label('P'),TermAppl("s104602569", List())), CGDecl(TermAppl("s104604581", List()),ConcreteName("Loop", "", 104604585)), CGRef(SymbolicName("Var", "x104605477"),TermAppl("s104604581", List())), CGRef(SymbolicName("Var", "x104606720"),TermAppl("s104602768", List())), CGRef(SymbolicName("Var", "x104610472"),TermAppl("s104602569", List())), CGRef(SymbolicName("Var", "x104610830"),TermAppl("s104602569", List())), CGRef(SymbolicName("Var", "x104612814"),TermAppl("s104602569", List())), CGRef(SymbolicName("Var", "x104612978"),TermAppl("s104602569", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x104606720"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x104610830"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x104612978"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x104612814"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x104605477"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x104610472"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(while (getchar > getchar) / 752 do
  flush()) | (while flush < flush do
  flush()))
-----------------------------------
===================================
2016-12-15T11:56:13.273+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s105091508", List())), State(TermAppl("Mod", List(As(Var("x105091550"),TermAppl("For", List(TermAppl("Var", List(Var("x105091551"))), TermAppl("Int", List(Var("x105092641"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x105092924"))), TermAppl("Cons", List(TermAppl("String", List(Var("x105093104"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x105095391"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x105097815"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x105097651"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x105098415"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x105097914"))), TermAppl("Nil", List()))))))))))))))))), TermAppl("Call", List(Var("x105091725"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s105091508", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s105091508", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s105091548", List()),Label('P'),TermAppl("s105091508", List())), CGDecl(TermAppl("s105091548", List()),SymbolicName("Var", "x105091551")), CGDecl(TermAppl("s105091548", List()),SymbolicName("Loop", "n105091555")), CGRef(SymbolicName("Var", "x105091725"),TermAppl("s105091548", List())), CGRef(SymbolicName("Var", "x105092924"),TermAppl("s105091508", List())), CGRef(SymbolicName("Var", "x105095391"),TermAppl("s105091508", List())), CGRef(SymbolicName("Var", "x105097651"),TermAppl("s105091508", List())), CGRef(SymbolicName("Var", "x105097815"),TermAppl("s105091508", List())), CGRef(SymbolicName("Var", "x105098415"),TermAppl("s105091508", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x105091551"), TermAppl("INT", List())), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x105092924"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x105097815"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x105097651"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x105098415"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x105095391"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x105091725"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for N := 54 to (
  flush;
  "\"\752\	\\^JB\	\'\t\	  
 
\";
  ord;
  substring;
  print;
  exit;
  923
) do
  flush())
-----------------------------------
===================================
2016-12-15T11:56:22.538+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s105410393", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x105418126"))), TermAppl("Var", List(Var("x105418290"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x105416313"))), TermAppl("Var", List(Var("x105415677"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s105410393", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s105410393", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x105415677"),TermAppl("s105410393", List())), CGRef(SymbolicName("Var", "x105416313"),TermAppl("s105410393", List())), CGRef(SymbolicName("Var", "x105418126"),TermAppl("s105410393", List())), CGRef(SymbolicName("Var", "x105418290"),TermAppl("s105410393", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x105415677"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x105416313"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x105418126"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x105418290"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print >= print | getchar = getchar)
-----------------------------------
===================================
2016-12-15T11:56:30.282+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s105651114", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Plus", List(TermAppl("Gt", List(TermAppl("Call", List(Var("x105656511"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x105656148"))))), TermAppl("Int", List(Var("x105656213"))))), TermAppl("Int", List(Var("x105653702"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s105651114", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s105651114", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x105656511"),TermAppl("s105651114", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x105656511"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar() > "\t\t") + 5 | 19)
-----------------------------------
===================================
2016-12-15T11:56:32.729+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s105743435", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s105743453", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s105743435", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s105743435", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s105743453", List()),Label('P'),TermAppl("s105743435", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:56:39.216+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s105963263", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x105963499"), TermAppl("Nil", List()), TermAppl("Seq", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s105963281", List()), "All")), CDistinct(Declarations(TermAppl("s105963496", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s105963263", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s105963263", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s105963281", List()),Label('P'),TermAppl("s105963263", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s105963496", List()),Label('P'),TermAppl("s105963281", List())), CGDecl(TermAppl("s105963281", List()),SymbolicName("Var", "x105963499"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x105963499"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))))),Resolution(Map()),SubtypeRelation(List()),List())),let
  function vt2L() =
    (
    )
 in
end)
-----------------------------------
===================================
2016-12-15T11:57:28.629+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x107557369")), List(TermAppl("s107551940", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x107554561"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x107554397"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x107556839"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x107557003"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x107557185"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x107557367"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s107551958", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s107551940", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s107551940", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s107551958", List()),Label('P'),TermAppl("s107551940", List())), CGRef(SymbolicName("Var", "x107554397"),TermAppl("s107551958", List())), CGRef(SymbolicName("Var", "x107554561"),TermAppl("s107551958", List())), CGRef(SymbolicName("Var", "x107556839"),TermAppl("s107551958", List())), CGRef(SymbolicName("Var", "x107557003"),TermAppl("s107551958", List())), CGRef(SymbolicName("Var", "x107557185"),TermAppl("s107551958", List())), CGRef(SymbolicName("Var", "x107557367"),TermAppl("s107551958", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x107554561"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x107557003"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x107557367"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x107556839"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x107557185"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x107554397"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  concat;
  print;
  substring;
  size;
  flush
end)
-----------------------------------
===================================
2016-12-15T11:57:52.378+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s108296498", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x108296737"), TermAppl("Tid", List(Var("x108296750"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x108296729"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x108296767"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s108296516", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s108296498", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s108296498", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s108296516", List()),Label('P'),TermAppl("s108296498", List())), CGDecl(TermAppl("s108296516", List()),SymbolicName("Type", "x108296729")), CGDecl(TermAppl("s108296516", List()),SymbolicName("Type", "x108296737")), CGRef(SymbolicName("Type", "x108296750"),TermAppl("s108296516", List())), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x108296767"),TermAppl("s108296516", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x108296737"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x108296729"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(Var("x108296769"), TermAppl("s108296753", List()))), TermAppl("s108296753", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x108296750"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x108296767"), SymbolicName("Type", "x108296729")))),SubtypeRelation(List()),List())),let
  type Ff_ = string
  type n1 = array of n1
 in
end)
-----------------------------------
===================================
2016-12-15T11:58:14.758+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s109006051", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x109006287"), TermAppl("Cons", List(TermAppl("FArg", List(Var("x109006547"), TermAppl("Tid", List(Var("x109006936"))))), TermAppl("Nil", List()))), TermAppl("While", List(TermAppl("Int", List(Var("x109007001"))), TermAppl("Call", List(Var("x109006599"), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s109006069", List()), "All")), CDistinct(Declarations(TermAppl("s109006284", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s109006051", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s109006051", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s109006069", List()),Label('P'),TermAppl("s109006051", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s109006284", List()),Label('P'),TermAppl("s109006069", List())), CGDecl(TermAppl("s109006069", List()),SymbolicName("Var", "x109006287")), NewScope(Var("s'")), CGDirectEdge(TermAppl("s109006340", List()),Label('P'),TermAppl("s109006284", List())), CGDecl(TermAppl("s109006340", List()),ConcreteName("Loop", "", 109006344)), CGDecl(TermAppl("s109006284", List()),SymbolicName("Var", "x109006547")), CGRef(SymbolicName("Var", "x109006599"),TermAppl("s109006340", List())), CGRef(SymbolicName("Type", "x109006936"),TermAppl("s109006051", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x109006287"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x109006547"), TermAppl("INT", List())), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x109006599"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x109006936"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  function X(Gm : int) =
    while 69871 do
      flush()
 in
end)
-----------------------------------
===================================
2016-12-15T11:58:16.231+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x109049778")), List(TermAppl("s109044654", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x109044875"), TermAppl("String", List(Var("x109047770"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x109047600"), TermAppl("Tid", List(Var("x109047613"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x109047584"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x109049612"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x109049776"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s109044672", List()), "All")), CDistinct(Declarations(TermAppl("s109044827", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s109044654", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s109044654", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s109044827", List()),Label('P'),TermAppl("s109044654", List())), CGDirectEdge(TermAppl("s109044672", List()),Label('P'),TermAppl("s109044827", List())), CGDecl(TermAppl("s109044827", List()),SymbolicName("Var", "x109044875")), CGRef(SymbolicName("Var", "x109047584"),TermAppl("s109044672", List())), CGDecl(TermAppl("s109044672", List()),SymbolicName("Type", "x109047600")), CGRef(SymbolicName("Type", "x109047613"),TermAppl("s109044672", List())), CGRef(SymbolicName("Var", "x109049612"),TermAppl("s109044672", List())), CGRef(SymbolicName("Var", "x109049776"),TermAppl("s109044672", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(SymbolicName("Var", "x109044875"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x109047600"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x109047584"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x109047613"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x109049612"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x109049776"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
  var ze := ""
  type N = string
 in
  substring;
  substring;
  not
end)
-----------------------------------
===================================
2016-12-15T11:58:18.023+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s109105241", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Lt", List(TermAppl("Var", List(Var("x109111959"))), TermAppl("Var", List(Var("x109110087"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s109105241", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s109105241", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x109110087"),TermAppl("s109105241", List())), CGRef(SymbolicName("Var", "x109111959"),TermAppl("s109105241", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x109110087"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x109111959"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(nil <> nil) <= (substring < substring))
-----------------------------------
===================================
2016-12-15T11:58:37.387+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s109769066", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("String", List(Var("x109772129"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x109782051"), TermAppl("Var", List(Var("x109784809"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x109782010"))), TermAppl("Cons", List(TermAppl("And", List(TermAppl("Var", List(Var("x109785275"))), TermAppl("Var", List(Var("x109784089"))))), TermAppl("Cons", List(TermAppl("Call", List(Var("x109784866"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s109769248", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s109769066", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s109769066", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s109769248", List()),Label('P'),TermAppl("s109769066", List())), CGRef(SymbolicName("Var", "x109782010"),TermAppl("s109769248", List())), CGDecl(TermAppl("s109769248", List()),SymbolicName("Var", "x109782051")), CGRef(SymbolicName("Var", "x109784089"),TermAppl("s109769248", List())), CGRef(SymbolicName("Var", "x109784809"),TermAppl("s109769066", List())), CGRef(SymbolicName("Var", "x109784866"),TermAppl("s109769248", List())), CGRef(SymbolicName("Var", "x109785275"),TermAppl("s109769248", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x109782051"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x109784866"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x109782010"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x109784089"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x109785275"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x109784809"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),"" > let
  var p := concat
 in
  getchar;
  ord & size;
  getchar()
end)
-----------------------------------
===================================
2016-12-15T11:58:47.823+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s110131960", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Neq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x110139093"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x110137800"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x110135351"))), TermAppl("Var", List(Var("x110135987"))))))))),List(CDistinct(Declarations(TermAppl("s110137822", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s110131960", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s110131960", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x110135351"),TermAppl("s110131960", List())), CGRef(SymbolicName("Var", "x110135987"),TermAppl("s110131960", List())), CGRef(SymbolicName("Var", "x110137800"),TermAppl("s110131960", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s110137822", List()),Label('P'),TermAppl("s110131960", List())), CGRef(SymbolicName("Var", "x110139093"),TermAppl("s110137822", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x110135351"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x110135987"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x110137800"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x110139093"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(let
 in
  nil;
  getchar
end <> getchar) / (ord <> ord))
-----------------------------------
===================================
2016-12-15T11:58:48.939+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s110168600", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Int", List(Var("x110171182"))), TermAppl("Call", List(Var("x110174160"), TermAppl("Cons", List(TermAppl("Int", List(Var("x110179140"))), TermAppl("Nil", List()))))))), TermAppl("Or", List(TermAppl("Var", List(Var("x110173672"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x110174090"), TermAppl("Var", List(Var("x110178167"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x110181962"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x110182308"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s110173694", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s110168600", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s110168600", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x110173672"),TermAppl("s110168600", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s110173694", List()),Label('P'),TermAppl("s110168600", List())), CGDecl(TermAppl("s110173694", List()),SymbolicName("Var", "x110174090")), CGRef(SymbolicName("Var", "x110174160"),TermAppl("s110168600", List())), CGRef(SymbolicName("Var", "x110178167"),TermAppl("s110168600", List())), CGRef(SymbolicName("Var", "x110181962"),TermAppl("s110173694", List())), CGRef(SymbolicName("Var", "x110182308"),TermAppl("s110173694", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x110174090"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x110173672"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x110182308"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x110181962"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x110174160"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x110178167"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(542 = not(19)) + (print | let
  var H := print
 in
  nil;
  exit;
  print
end))
-----------------------------------
===================================
2016-12-15T11:58:50.523+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s110223332", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Int", List(Var("x110227049"))), TermAppl("Geq", List(TermAppl("And", List(TermAppl("Var", List(Var("x110229497"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x110231645"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x110233155"))), TermAppl("Nil", List()))))))))))), TermAppl("Int", List(Var("x110233218"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s110223332", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s110223332", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x110229497"),TermAppl("s110223332", List())), CGRef(SymbolicName("Var", "x110231645"),TermAppl("s110223332", List())), CGRef(SymbolicName("Var", "x110233155"),TermAppl("s110223332", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x110229497"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x110231645"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x110233155"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),6 & (print & (
  nil;
  getchar;
  print
)) >= 9)
-----------------------------------
===================================
2016-12-15T11:58:51.458+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x110267852")), List(TermAppl("s110267412", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x110267639"), TermAppl("Tid", List(Var("x110267872"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x110267850"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s110267430", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s110267412", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s110267412", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s110267430", List()),Label('P'),TermAppl("s110267412", List())), CGDecl(TermAppl("s110267430", List()),SymbolicName("Type", "x110267639")), CGRef(SymbolicName("Var", "x110267850"),TermAppl("s110267430", List())), CGRef(SymbolicName("Type", "x110267872"),TermAppl("s110267430", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x110267639"), TermAppl("INT", List())), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x110267850"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x110267872"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type r4 = int
 in
  print
end)
-----------------------------------
===================================
2016-12-15T11:59:16.513+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s110918920", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("IfThen", List(TermAppl("Int", List(Var("x110922564"))), TermAppl("Call", List(Var("x110922037"), TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x110922885"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s110918920", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s110918920", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x110922037"),TermAppl("s110918920", List())), CGRef(SymbolicName("Var", "x110922885"),TermAppl("s110918920", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x110922037"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x110922885"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if 754691 then
  flush() >= flush())
-----------------------------------
===================================
2016-12-15T11:59:24.357+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s111153880", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s111153898", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s111153880", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s111153880", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s111153898", List()),Label('P'),TermAppl("s111153880", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T11:59:53.862+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x112004966")), List(TermAppl("s112000521", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x112004463"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x112002641"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x112004964"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s112000539", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s112000521", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112000521", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s112000539", List()),Label('P'),TermAppl("s112000521", List())), CGRef(SymbolicName("Var", "x112004964"),TermAppl("s112000539", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x112004964"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  5;
  241528;
  getchar
end)
-----------------------------------
===================================
2016-12-15T11:59:57.22+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s112111738", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x112117332"))), TermAppl("Var", List(Var("x112118424"))))), TermAppl("Eq", List(TermAppl("Call", List(Var("x112118015"), TermAppl("Nil", List()))), TermAppl("Seq", List(TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s112111738", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112111738", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x112117332"),TermAppl("s112111738", List())), CGRef(SymbolicName("Var", "x112118015"),TermAppl("s112111738", List())), CGRef(SymbolicName("Var", "x112118424"),TermAppl("s112111738", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x112117332"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x112118015"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x112118424"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(chr = chr) / (flush() = (
)))
-----------------------------------
===================================
2016-12-15T11:59:58.236+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s112147839", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x112148059"), TermAppl("Var", List(Var("x112150057"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x112148096"), TermAppl("Var", List(Var("x112149893"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s112147857", List()), "All")), CDistinct(Declarations(TermAppl("s112148019", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s112147839", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112147839", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s112148019", List()),Label('P'),TermAppl("s112147839", List())), CGDecl(TermAppl("s112148019", List()),SymbolicName("Var", "x112148059")), CGDirectEdge(TermAppl("s112147857", List()),Label('P'),TermAppl("s112148019", List())), CGDecl(TermAppl("s112147857", List()),SymbolicName("Var", "x112148096")), CGRef(SymbolicName("Var", "x112149893"),TermAppl("s112148019", List())), CGRef(SymbolicName("Var", "x112150057"),TermAppl("s112147839", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x112148096"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x112148059"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x112149893"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x112150057"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  var B := size
  var R := ord
 in
end)
-----------------------------------
===================================
2016-12-15T12:00:10.08+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s112518702", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x112518929"), TermAppl("Tid", List(Var("x112518967"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x112518937"), TermAppl("Tid", List(Var("x112518954"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s112518720", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s112518702", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112518702", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s112518720", List()),Label('P'),TermAppl("s112518702", List())), CGDecl(TermAppl("s112518720", List()),SymbolicName("Type", "x112518929")), CGDecl(TermAppl("s112518720", List()),SymbolicName("Type", "x112518937")), CGRef(SymbolicName("Type", "x112518954"),TermAppl("s112518720", List())), CGRef(SymbolicName("Type", "x112518967"),TermAppl("s112518720", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x112518929"), Var("x112518969")), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x112518937"), Var("x112518969")), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x112518954"), SymbolicName("Type", "x112518929")), Tuple2(SymbolicName("Type", "x112518967"), SymbolicName("Type", "x112518929")))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type Al = n1
 in
end)
-----------------------------------
===================================
2016-12-15T12:00:15.717+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s112712046", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Neq", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Int", List(Var("x112716887"))), TermAppl("Int", List(Var("x112719258"))))), TermAppl("Call", List(Var("x112714302"), TermAppl("Cons", List(TermAppl("String", List(Var("x112720928"))), TermAppl("Nil", List()))))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x112723032"))))))), TermAppl("Uminus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x112722969"))), TermAppl("Var", List(Var("x112723435"))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s112712046", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112712046", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x112714302"),TermAppl("s112712046", List())), CGRef(SymbolicName("Var", "x112722969"),TermAppl("s112712046", List())), CGRef(SymbolicName("Var", "x112723435"),TermAppl("s112712046", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x112714302"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x112722969"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x112723435"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),((3 > 2) * ord("\^K") <> - 5) * - (print > print))
-----------------------------------
===================================
2016-12-15T12:00:20.341+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x112875161")), List(TermAppl("s112874616", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x112874857"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x112875159"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s112874634", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s112874616", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s112874616", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s112874634", List()),Label('P'),TermAppl("s112874616", List())), CGRef(SymbolicName("Var", "x112875159"),TermAppl("s112874634", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x112875159"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  2;
  exit
end)
-----------------------------------
===================================
2016-12-15T12:00:27.76+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s113143379", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x113146687"))), TermAppl("Var", List(Var("x113146851"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s113143561", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s113143379", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s113143379", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s113143561", List()),Label('P'),TermAppl("s113143379", List())), CGRef(SymbolicName("Var", "x113146687"),TermAppl("s113143379", List())), CGRef(SymbolicName("Var", "x113146851"),TermAppl("s113143379", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x113146687"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x113146851"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if exit = exit then
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T12:01:02.388+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s114184398", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Or", List(TermAppl("Var", List(Var("x114187789"))), TermAppl("Var", List(Var("x114189660"))))), TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x114190006"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x114190188"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x114189358"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s114184398", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s114184398", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x114187789"),TermAppl("s114184398", List())), CGRef(SymbolicName("Var", "x114189358"),TermAppl("s114184398", List())), CGRef(SymbolicName("Var", "x114189660"),TermAppl("s114184398", List())), CGRef(SymbolicName("Var", "x114190006"),TermAppl("s114184398", List())), CGRef(SymbolicName("Var", "x114190188"),TermAppl("s114184398", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x114189660"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x114187789"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x114190188"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x114189358"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x114190006"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(not | not) / ((
  chr;
  ord
) <> size))
-----------------------------------
===================================
2016-12-15T12:01:06.322+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x114316141")), List(TermAppl("s114313655", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x114315894"), TermAppl("Tid", List(Var("x114316174"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x114316148"), TermAppl("Tid", List(Var("x114316161"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x114315653"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x114315853"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x114316139"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s114313673", List()), "All")), CDistinct(Declarations(TermAppl("s114313835", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s114313655", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s114313655", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s114313835", List()),Label('P'),TermAppl("s114313655", List())), CGDirectEdge(TermAppl("s114313673", List()),Label('P'),TermAppl("s114313835", List())), CGRef(SymbolicName("Var", "x114315653"),TermAppl("s114313673", List())), CGRef(SymbolicName("Var", "x114315853"),TermAppl("s114313673", List())), CGDecl(TermAppl("s114313835", List()),SymbolicName("Type", "x114315894")), CGRef(SymbolicName("Var", "x114316139"),TermAppl("s114313673", List())), CGDecl(TermAppl("s114313673", List()),SymbolicName("Type", "x114316148")), CGRef(SymbolicName("Type", "x114316161"),TermAppl("s114313673", List())), CGRef(SymbolicName("Type", "x114316174"),TermAppl("s114313835", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x114315894"), Var("x114316176")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x114316148"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x114316139"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x114315653"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x114315853"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x114316161"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x114316174"), SymbolicName("Type", "x114315894")))),SubtypeRelation(List()),List())),let
  type n1 = n1
  type yr = int
 in
  print;
  exit;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:01:24.073+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s114923785", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x114930067"))))), TermAppl("Eq", List(TermAppl("Int", List(Var("x114930563"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x114930966"))), TermAppl("Var", List(Var("x114929508"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s114923785", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s114923785", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x114929508"),TermAppl("s114923785", List())), CGRef(SymbolicName("Var", "x114930966"),TermAppl("s114923785", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x114929508"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x114930966"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),- 15275 | 84506 = (not > not))
-----------------------------------
===================================
2016-12-15T12:01:31.03+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x115162930")), List(TermAppl("s115155721", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x115162681"), TermAppl("Tid", List(Var("x115162946"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x115162656"), TermAppl("Tid", List(Var("x115162669"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x115162677"), TermAppl("Tid", List(Var("x115162963"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115157576"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115159252"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115160928"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115162604"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115162928"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s115155739", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s115155721", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115155721", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s115155739", List()),Label('P'),TermAppl("s115155721", List())), CGRef(SymbolicName("Var", "x115157576"),TermAppl("s115155739", List())), CGRef(SymbolicName("Var", "x115159252"),TermAppl("s115155739", List())), CGRef(SymbolicName("Var", "x115160928"),TermAppl("s115155739", List())), CGRef(SymbolicName("Var", "x115162604"),TermAppl("s115155739", List())), CGDecl(TermAppl("s115155739", List()),SymbolicName("Type", "x115162656")), CGRef(SymbolicName("Type", "x115162669"),TermAppl("s115155739", List())), CGDecl(TermAppl("s115155739", List()),SymbolicName("Type", "x115162677")), CGDecl(TermAppl("s115155739", List()),SymbolicName("Type", "x115162681")), CGRef(SymbolicName("Var", "x115162928"),TermAppl("s115155739", List())), CGRef(SymbolicName("Type", "x115162946"),TermAppl("s115155739", List())), CGRef(SymbolicName("Type", "x115162963"),TermAppl("s115155739", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x115162656"), Var("x115162948")), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x115162677"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x115162681"), Var("x115162948")))),Resolution(Map(Tuple2(SymbolicName("Var", "x115160928"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x115162604"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x115159252"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x115162928"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x115162963"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x115157576"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x115162669"), SymbolicName("Type", "x115162656")), Tuple2(SymbolicName("Type", "x115162946"), SymbolicName("Type", "x115162656")))),SubtypeRelation(List()),List())),let
  type x9t = n1
  type n1 = n1
  type Gr5 = int
 in
  not;
  print;
  ord;
  chr;
  exit
end)
-----------------------------------
===================================
2016-12-15T12:01:32.763+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s115195378", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x115195739"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x115200340"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115198017"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115200277"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x115202279"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s115195396", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s115195378", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115195378", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s115195396", List()),Label('P'),TermAppl("s115195378", List())), CGRef(SymbolicName("Var", "x115195739"),TermAppl("s115195396", List())), CGRef(SymbolicName("Var", "x115198017"),TermAppl("s115195396", List())), CGRef(SymbolicName("Var", "x115200277"),TermAppl("s115195396", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115195739"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x115198017"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x115200277"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  print;
  00;
  size;
  concat;
  nil;
  "*"
end)
-----------------------------------
===================================
2016-12-15T12:01:34.835+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s115258995", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("And", List(TermAppl("Var", List(Var("x115268129"))), TermAppl("Var", List(Var("x115267965"))))), TermAppl("Gt", List(TermAppl("Int", List(Var("x115264781"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x115266152"))), TermAppl("Var", List(Var("x115264718"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s115258995", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115258995", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x115264718"),TermAppl("s115258995", List())), CGRef(SymbolicName("Var", "x115266152"),TermAppl("s115258995", List())), CGRef(SymbolicName("Var", "x115267965"),TermAppl("s115258995", List())), CGRef(SymbolicName("Var", "x115268129"),TermAppl("s115258995", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115264718"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x115266152"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x115267965"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x115268129"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat & concat) < (58 > (ord <> size)))
-----------------------------------
===================================
2016-12-15T12:01:42.865+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x115422059")), List(TermAppl("s115416230", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x115428381"))), TermAppl("Cons", List(TermAppl("String", List(Var("x115428543"))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("String", List(Var("x115424297"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115419307"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x115422057"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s115416248", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s115416230", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115416230", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s115416248", List()),Label('P'),TermAppl("s115416230", List())), CGRef(SymbolicName("Var", "x115419307"),TermAppl("s115416248", List())), CGRef(SymbolicName("Var", "x115422057"),TermAppl("s115416248", List())), CGRef(SymbolicName("Var", "x115428381"),TermAppl("s115416248", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115419307"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x115422057"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x115428381"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  (
    ord;
    ""
  );
  "\^C\n";
  ord;
  nil;
  substring
end)
-----------------------------------
===================================
2016-12-15T12:01:50.138+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s115602127", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Call", List(Var("x115604708"), TermAppl("Nil", List()))), As(Var("x115602333"),TermAppl("For", List(TermAppl("Var", List(Var("x115602334"))), TermAppl("Int", List(Var("x115605950"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x115608312"))), TermAppl("Var", List(Var("x115608639"))))), TermAppl("Seq", List(TermAppl("Nil", List())))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s115602127", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115602127", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s115602331", List()),Label('P'),TermAppl("s115602127", List())), CGDecl(TermAppl("s115602331", List()),SymbolicName("Var", "x115602334")), CGDecl(TermAppl("s115602331", List()),SymbolicName("Loop", "n115602338")), CGRef(SymbolicName("Var", "x115604708"),TermAppl("s115602127", List())), CGRef(SymbolicName("Var", "x115608312"),TermAppl("s115602127", List())), CGRef(SymbolicName("Var", "x115608639"),TermAppl("s115602127", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x115602334"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115604708"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x115608312"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x115608639"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),flush() = (for g := 3888 to chr >= chr do
  (
  )))
-----------------------------------
===================================
2016-12-15T12:01:51.858+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s115666127", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x115671553"))), TermAppl("Var", List(Var("x115669518"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x115671389"))), TermAppl("Var", List(Var("x115671087"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s115666127", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115666127", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x115669518"),TermAppl("s115666127", List())), CGRef(SymbolicName("Var", "x115671087"),TermAppl("s115666127", List())), CGRef(SymbolicName("Var", "x115671389"),TermAppl("s115666127", List())), CGRef(SymbolicName("Var", "x115671553"),TermAppl("s115666127", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115669518"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x115671087"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x115671389"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x115671553"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(exit = exit) * (ord | size))
-----------------------------------
===================================
2016-12-15T12:01:52.475+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x115691216")), List(TermAppl("s115684329", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x115686786"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x115689210"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115691050"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x115691214"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s115684347", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s115684329", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115684329", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s115684347", List()),Label('P'),TermAppl("s115684329", List())), CGRef(SymbolicName("Var", "x115686786"),TermAppl("s115684347", List())), CGRef(SymbolicName("Var", "x115689210"),TermAppl("s115684347", List())), CGRef(SymbolicName("Var", "x115691050"),TermAppl("s115684347", List())), CGRef(SymbolicName("Var", "x115691214"),TermAppl("s115684347", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115686786"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x115689210"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x115691050"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x115691214"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  nil;
  ord;
  not;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:02:07.898+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s115980334", List())), State(TermAppl("Mod", List(As(Var("x115980376"),TermAppl("For", List(TermAppl("Var", List(Var("x115980377"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x115985078"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x115985323"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x115982697"), TermAppl("Cons", List(TermAppl("String", List(Var("x115985240"))), TermAppl("Nil", List()))))), TermAppl("While", List(TermAppl("Var", List(Var("x115981761"))), As(Var("x115982335"),TermAppl("Break", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s115980334", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s115980334", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s115980374", List()),Label('P'),TermAppl("s115980334", List())), CGDecl(TermAppl("s115980374", List()),SymbolicName("Var", "x115980377")), CGDecl(TermAppl("s115980374", List()),SymbolicName("Loop", "n115980381")), NewScope(Var("s'")), CGDirectEdge(TermAppl("s115980533", List()),Label('P'),TermAppl("s115980374", List())), CGDecl(TermAppl("s115980533", List()),ConcreteName("Loop", "", 115980537)), CGRef(SymbolicName("Var", "x115981761"),TermAppl("s115980374", List())), CGRef(SymbolicName("Loop", "n115982336"),TermAppl("s115980533", List())), CGRef(SymbolicName("Var", "x115982697"),TermAppl("s115980334", List())), CGRef(SymbolicName("Var", "x115985078"),TermAppl("s115980334", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x115980377"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x115981761"), SymbolicName("Var", "x115980377")), Tuple2(SymbolicName("Loop", "n115982336"), SymbolicName("Loop", "n115980381")), Tuple2(SymbolicName("Var", "x115982697"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x115985078"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),for n2 := (
  substring;
  4
) to size("") do
  while n2 do
    break)
-----------------------------------
===================================
2016-12-15T12:02:23.778+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s116381872", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x116388287"))), TermAppl("Var", List(Var("x116389681"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x116386718"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x116389517"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x116395037"))), TermAppl("Cons", List(TermAppl("String", List(Var("x116392629"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116394873"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116395219"))), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s116381872", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s116381872", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x116386718"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116388287"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116389517"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116389681"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116394873"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116395037"),TermAppl("s116381872", List())), CGRef(SymbolicName("Var", "x116395219"),TermAppl("s116381872", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x116389681"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x116395037"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x116395219"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x116394873"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x116388287"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x116389517"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x116386718"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),exit >= exit | exit > (
  not;
  (
    exit;
    "";
    print;
    exit
  )
))
-----------------------------------
===================================
2016-12-15T12:02:25.535+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x116444310")), List(TermAppl("s116440119", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x116442384"))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116444308"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s116440137", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s116440119", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s116440119", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s116440137", List()),Label('P'),TermAppl("s116440119", List())), CGRef(SymbolicName("Var", "x116444308"),TermAppl("s116440137", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x116444308"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  - 2;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:02:28.015+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s116498533", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x116498742"), TermAppl("Tid", List(Var("x116498777"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s116498551", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s116498533", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s116498533", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s116498551", List()),Label('P'),TermAppl("s116498533", List())), CGDecl(TermAppl("s116498551", List()),SymbolicName("Type", "x116498742")), CGRef(SymbolicName("Type", "x116498777"),TermAppl("s116498551", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x116498742"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x116498777"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type w = string
 in
end)
-----------------------------------
===================================
2016-12-15T12:02:38.128+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s116711300", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x116717150"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116717332"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116717514"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116717696"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116718296"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))))))))), TermAppl("Minus", List(TermAppl("Int", List(Var("x116716509"))), TermAppl("Int", List(Var("x116716867"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s116711300", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s116711300", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x116717150"),TermAppl("s116711300", List())), CGRef(SymbolicName("Var", "x116717332"),TermAppl("s116711300", List())), CGRef(SymbolicName("Var", "x116717514"),TermAppl("s116711300", List())), CGRef(SymbolicName("Var", "x116717696"),TermAppl("s116711300", List())), CGRef(SymbolicName("Var", "x116718296"),TermAppl("s116711300", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x116717514"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x116717332"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x116717150"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x116717696"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x116718296"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(nil <> (
  print;
  substring;
  chr;
  ord;
  print;
  (
    nil
  )
)) > 03 - 71)
-----------------------------------
===================================
2016-12-15T12:02:40.379+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s116751288", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x116753932"), TermAppl("Var", List(Var("x116758771"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x116753950"), TermAppl("Var", List(Var("x116756091"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("IfThen", List(TermAppl("Uminus", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x116761611"))))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x116761384"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x116761894"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x116761969"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))))), TermAppl("Assign", List(TermAppl("Var", List(Var("x116753712"))), TermAppl("Var", List(Var("x116753871"))))))))),List(CDistinct(Declarations(TermAppl("s116751470", List()), "All")), CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), CDistinct(Declarations(TermAppl("s116753891", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s116751288", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s116751288", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x116753712"),TermAppl("s116751288", List())), CGRef(SymbolicName("Var", "x116753871"),TermAppl("s116751288", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s116753891", List()),Label('P'),TermAppl("s116751288", List())), CGDirectEdge(TermAppl("s116751470", List()),Label('P'),TermAppl("s116753891", List())), CGDecl(TermAppl("s116753891", List()),SymbolicName("Var", "x116753932")), CGDecl(TermAppl("s116751470", List()),SymbolicName("Var", "x116753950")), CGRef(SymbolicName("Var", "x116756091"),TermAppl("s116753891", List())), CGRef(SymbolicName("Var", "x116758771"),TermAppl("s116751288", List())), CGRef(SymbolicName("Var", "x116761384"),TermAppl("s116751470", List())), CGRef(SymbolicName("Var", "x116761894"),TermAppl("s116751470", List())), CGRef(SymbolicName("Var", "x116761969"),TermAppl("s116751470", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x116753950"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x116753932"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x116761894"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x116761969"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x116758771"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x116753871"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x116756091"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x116753712"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x116761384"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  var oF_ := substring
  var B := substring
 in
  if - - 068 then
    (
      print;
      substring;
      flush()
    )
end >= (not := not))
-----------------------------------
===================================
2016-12-15T12:02:58.693+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s117177317", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))), TermAppl("While", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x117189289"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117181873"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x117188788"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117189471"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117190641"))), TermAppl("Cons", List(TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x117192962"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117193146"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x117192618"))))), TermAppl("Nil", List()))))))))))))))), TermAppl("Call", List(Var("x117179347"), TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s117177317", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s117177317", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s117177516", List()),Label('P'),TermAppl("s117177317", List())), CGDecl(TermAppl("s117177516", List()),ConcreteName("Loop", "", 117177520)), CGRef(SymbolicName("Var", "x117179347"),TermAppl("s117177516", List())), CGRef(SymbolicName("Var", "x117181873"),TermAppl("s117177317", List())), CGRef(SymbolicName("Var", "x117189289"),TermAppl("s117177317", List())), CGRef(SymbolicName("Var", "x117189471"),TermAppl("s117177317", List())), CGRef(SymbolicName("Var", "x117190641"),TermAppl("s117177317", List())), CGRef(SymbolicName("Var", "x117192618"),TermAppl("s117177317", List())), CGRef(SymbolicName("Var", "x117193146"),TermAppl("s117177317", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x117190641"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x117179347"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x117189471"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x117192618"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x117181873"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x117189289"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x117193146"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),(
  (
  )
) & (while (
  ord;
  getchar;
  6;
  concat;
  print;
  (
    "\757";
    print
  ) <> print
) do
  flush()))
-----------------------------------
===================================
2016-12-15T12:03:17.292+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x117550672")), List(TermAppl("s117540615", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x117540976"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x117541057"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117541340"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x117543681"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x117543281"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117543964"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117544146"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117546424"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117548684"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117550506"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117550670"))), TermAppl("Nil", List()))))))))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s117540633", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s117540615", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s117540615", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s117540633", List()),Label('P'),TermAppl("s117540615", List())), CGRef(SymbolicName("Var", "x117540976"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117541340"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117543964"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117544146"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117546424"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117548684"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117550506"),TermAppl("s117540633", List())), CGRef(SymbolicName("Var", "x117550670"),TermAppl("s117540633", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x117548684"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x117543964"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x117546424"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x117540976"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x117550506"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x117544146"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x117550670"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x117541340"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  exit;
  143;
  concat;
  31;
  1;
  getchar;
  getchar;
  ord;
  concat;
  size;
  print
end)
-----------------------------------
===================================
2016-12-15T12:03:20.275+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s117621661", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Gt", List(TermAppl("String", List(Var("x117626943"))), TermAppl("Call", List(Var("x117629833"), TermAppl("Nil", List()))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x117628518"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x117629756"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x117630239"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x117630529"))), TermAppl("Nil", List()))))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s117621661", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s117621661", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x117628518"),TermAppl("s117621661", List())), CGRef(SymbolicName("Var", "x117629833"),TermAppl("s117621661", List())), CGRef(SymbolicName("Var", "x117630529"),TermAppl("s117621661", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x117628518"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x117629833"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x117630529"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),("" > getchar()) >= (flush <> (
  "\257";
  4;
  flush
)))
-----------------------------------
===================================
2016-12-15T12:03:36.704+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s118172415", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s118172433", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s118172415", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s118172415", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s118172433", List()),Label('P'),TermAppl("s118172415", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:03:39.913+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x118291763")), List(TermAppl("s118290746", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x118290966"), TermAppl("Var", List(Var("x118291597"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x118291761"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s118290764", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s118290746", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s118290746", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s118290764", List()),Label('P'),TermAppl("s118290746", List())), CGDecl(TermAppl("s118290764", List()),SymbolicName("Var", "x118290966")), CGRef(SymbolicName("Var", "x118291597"),TermAppl("s118290746", List())), CGRef(SymbolicName("Var", "x118291761"),TermAppl("s118290764", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x118290966"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x118291597"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x118291761"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  var f1_l := flush
 in
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:03:54.369+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x118711153")), List(TermAppl("s118711122", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Int", List(Var("x118715494"))), TermAppl("Var", List(Var("x118715431"))), TermAppl("If", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x118719150"))), TermAppl("Var", List(Var("x118718848"))))), TermAppl("Var", List(Var("x118719314"))), TermAppl("Var", List(Var("x118717279"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s118711122", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s118711122", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x118715431"),TermAppl("s118711122", List())), CGRef(SymbolicName("Var", "x118717279"),TermAppl("s118711122", List())), CGRef(SymbolicName("Var", "x118718848"),TermAppl("s118711122", List())), CGRef(SymbolicName("Var", "x118719150"),TermAppl("s118711122", List())), CGRef(SymbolicName("Var", "x118719314"),TermAppl("s118711122", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x118719150"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x118718848"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x118719314"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x118715431"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x118717279"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),if 7 then
  print
else
  if flush = flush then
    print
  else
    print)
-----------------------------------
===================================
2016-12-15T12:04:03.957+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119033643", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s119033661", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s119033643", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119033643", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119033661", List()),Label('P'),TermAppl("s119033643", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:04:07.966+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119159272", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Eq", List(TermAppl("String", List(Var("x119167595"))), TermAppl("String", List(Var("x119164940"))))), TermAppl("If", List(TermAppl("Int", List(Var("x119162098"))), TermAppl("Call", List(Var("x119166032"), TermAppl("Cons", List(TermAppl("Int", List(Var("x119167692"))), TermAppl("Nil", List()))))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x119167814"), TermAppl("Cons", List(TermAppl("FArg", List(Var("x119168002"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x119168034"))))))), TermAppl("Nil", List()))), TermAppl("Call", List(Var("x119167877"), TermAppl("Cons", List(TermAppl("String", List(Var("x119168191"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s119166464", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CDistinct(Declarations(TermAppl("s119167811", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s119159272", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119159272", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x119166032"),TermAppl("s119159272", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119166464", List()),Label('P'),TermAppl("s119159272", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s119167811", List()),Label('P'),TermAppl("s119166464", List())), CGDecl(TermAppl("s119166464", List()),SymbolicName("Var", "x119167814")), CGRef(SymbolicName("Var", "x119167877"),TermAppl("s119167811", List())), CGDecl(TermAppl("s119167811", List()),SymbolicName("Var", "x119168002")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x119168034"),TermAppl("s119159272", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x119167814"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s119168005", List()))), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x119168002"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s119168005", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x119166032"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x119167877"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x119168034"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),if "" = "\n\t\	\" then
  if 2 then
    exit(4)
  else
    let
      function RG(W : array of string) =
        print("")
     in
    end)
-----------------------------------
===================================
2016-12-15T12:04:20.703+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119533317", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s119533335", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s119533317", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119533317", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119533335", List()),Label('P'),TermAppl("s119533317", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:04:21.141+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119550459", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s119550477", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s119550459", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119550459", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119550477", List()),Label('P'),TermAppl("s119550459", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:04:28.921+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119788241", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Int", List(Var("x119790757"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Call", List(Var("x119790386"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s119788241", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119788241", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x119790386"),TermAppl("s119788241", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x119790386"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if 56 then
  (
    flush()
  ))
-----------------------------------
===================================
2016-12-15T12:04:33.419+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s119935509", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x119940920"))), TermAppl("Var", List(Var("x119941356"))))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("ProcDec", List(Var("x119941577"), TermAppl("Nil", List()), TermAppl("Seq", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x119941538"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x119941811"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s119936018", List()), "All")), CDistinct(Declarations(TermAppl("s119941574", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s119935509", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119935509", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119936018", List()),Label('P'),TermAppl("s119935509", List())), CGRef(SymbolicName("Var", "x119940920"),TermAppl("s119935509", List())), CGRef(SymbolicName("Var", "x119941356"),TermAppl("s119935509", List())), CGRef(SymbolicName("Var", "x119941538"),TermAppl("s119936018", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s119941574", List()),Label('P'),TermAppl("s119936018", List())), CGDecl(TermAppl("s119936018", List()),SymbolicName("Var", "x119941577")), CGRef(SymbolicName("Var", "x119941811"),TermAppl("s119936018", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x119941577"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x119940920"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x119941356"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x119941538"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x119941811"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if size < ord then
  let
    function I_() =
      (
      )
   in
    concat;
    flush()
  end)
-----------------------------------
===================================
2016-12-15T12:04:35.298+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x119987114")), List(TermAppl("s119984929", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x119986948"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x119987112"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s119984947", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s119984929", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s119984929", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s119984947", List()),Label('P'),TermAppl("s119984929", List())), CGRef(SymbolicName("Var", "x119986948"),TermAppl("s119984947", List())), CGRef(SymbolicName("Var", "x119987112"),TermAppl("s119984947", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x119986948"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x119987112"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  size;
  ord
end)
-----------------------------------
===================================
2016-12-15T12:04:43.504+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s120239723", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Times", List(TermAppl("Int", List(Var("x120243863"))), TermAppl("Int", List(Var("x120243009"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x120243800"))), TermAppl("Var", List(Var("x120242946"))))))))),List(CResolve(SymbolicName("Var", "x120243800"),Var("x120243801")), CTypeOf(Var("x120243801"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s120239723", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s120239723", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x120242946"),TermAppl("s120239723", List())), CGRef(SymbolicName("Var", "x120243800"),TermAppl("s120239723", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x120242946"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),2 * 95 / (substring <= substring))
-----------------------------------
===================================
2016-12-15T12:04:44.585+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s120282738", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s120282756", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s120282738", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s120282738", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s120282756", List()),Label('P'),TermAppl("s120282738", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:04:56.93+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x120670048")), List(TermAppl("s120654224", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x120659222"), TermAppl("Tid", List(Var("x120668083"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x120656160"), TermAppl("Var", List(Var("x120657779"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Int", List(Var("x120655979"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x120668065"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x120659213"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x120666175"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x120669882"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x120670046"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s120654242", List()), "All")), CDistinct(Declarations(TermAppl("s120654415", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s120654224", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s120654224", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s120654415", List()),Label('P'),TermAppl("s120654224", List())), CGDirectEdge(TermAppl("s120654242", List()),Label('P'),TermAppl("s120654415", List())), CGDecl(TermAppl("s120654242", List()),SymbolicName("Var", "x120656160")), CGRef(SymbolicName("Var", "x120657779"),TermAppl("s120654415", List())), CGRef(SymbolicName("Var", "x120659213"),TermAppl("s120654242", List())), CGDecl(TermAppl("s120654415", List()),SymbolicName("Type", "x120659222")), CGRef(SymbolicName("Var", "x120666175"),TermAppl("s120654242", List())), CGRef(SymbolicName("Var", "x120668065"),TermAppl("s120654242", List())), CGRef(SymbolicName("Type", "x120668083"),TermAppl("s120654415", List())), CGRef(SymbolicName("Var", "x120669882"),TermAppl("s120654242", List())), CGRef(SymbolicName("Var", "x120670046"),TermAppl("s120654242", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x120656160"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x120659222"), Var("x120668085")))),Resolution(Map(Tuple2(SymbolicName("Var", "x120659213"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x120669882"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x120668083"), SymbolicName("Type", "x120659222")), Tuple2(SymbolicName("Var", "x120670046"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x120657779"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x120668065"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x120666175"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
  var Q6 := concat
 in
  12;
  ord;
  flush;
  nil;
  ord;
  flush;
  substring
end)
-----------------------------------
===================================
2016-12-15T12:05:14.285+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s121270014", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Call", List(Var("x121276057"), TermAppl("Nil", List()))), TermAppl("IfThen", List(TermAppl("Or", List(TermAppl("Var", List(Var("x121278449"))), TermAppl("Var", List(Var("x121278638"))))), TermAppl("Seq", List(TermAppl("Nil", List()))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s121270014", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s121270014", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x121276057"),TermAppl("s121270014", List())), CGRef(SymbolicName("Var", "x121278449"),TermAppl("s121270014", List())), CGRef(SymbolicName("Var", "x121278638"),TermAppl("s121270014", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x121276057"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x121278449"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x121278638"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),flush() = if substring | substring then
  (
  ))
-----------------------------------
===================================
2016-12-15T12:05:23.834+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x121517494")), List(TermAppl("s121506129", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x121506490"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121517128"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121509258"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x121511990"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121514722"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121517310"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121517492"))), TermAppl("Nil", List()))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s121506147", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s121506129", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s121506129", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s121506147", List()),Label('P'),TermAppl("s121506129", List())), CGRef(SymbolicName("Var", "x121506490"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121509258"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121511990"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121514722"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121517128"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121517310"),TermAppl("s121506147", List())), CGRef(SymbolicName("Var", "x121517492"),TermAppl("s121506147", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x121517492"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x121517310"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x121506490"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x121511990"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x121509258"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x121517128"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x121514722"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  chr;
  ord;
  nil;
  exit;
  exit;
  flush;
  size
end)
-----------------------------------
===================================
2016-12-15T12:05:23.862+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x121518517")), List(TermAppl("s121517500", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x121517720"), TermAppl("String", List(Var("x121518349"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x121518515"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s121517518", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s121517500", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s121517500", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s121517518", List()),Label('P'),TermAppl("s121517500", List())), CGDecl(TermAppl("s121517518", List()),SymbolicName("Var", "x121517720")), CGRef(SymbolicName("Var", "x121518515"),TermAppl("s121517518", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x121517720"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x121518515"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
  var M_kp := "Z"
 in
  substring
end)
-----------------------------------
===================================
2016-12-15T12:05:53.973+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s122535034", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x122535557"), TermAppl("Tid", List(Var("x122535607"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x122535273"), TermAppl("Var", List(Var("x122535541"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x122535632"), TermAppl("Tid", List(Var("x122535645"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x122535657"), TermAppl("Tid", List(Var("x122535670"))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x122535625"), TermAppl("Var", List(Var("x122535829"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s122535052", List()), "All")), CDistinct(Declarations(TermAppl("s122535214", List()), "All")), CDistinct(Declarations(TermAppl("s122535251", List()), "All")), CDistinct(Declarations(TermAppl("s122535299", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s122535034", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s122535034", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s122535214", List()),Label('P'),TermAppl("s122535034", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s122535251", List()),Label('P'),TermAppl("s122535214", List())), CGDecl(TermAppl("s122535251", List()),SymbolicName("Var", "x122535273")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s122535299", List()),Label('P'),TermAppl("s122535251", List())), CGRef(SymbolicName("Var", "x122535541"),TermAppl("s122535214", List())), CGDecl(TermAppl("s122535214", List()),SymbolicName("Type", "x122535557")), CGDirectEdge(TermAppl("s122535052", List()),Label('P'),TermAppl("s122535299", List())), CGRef(SymbolicName("Type", "x122535607"),TermAppl("s122535214", List())), CGDecl(TermAppl("s122535052", List()),SymbolicName("Var", "x122535625")), CGDecl(TermAppl("s122535299", List()),SymbolicName("Type", "x122535632")), CGRef(SymbolicName("Type", "x122535645"),TermAppl("s122535299", List())), CGDecl(TermAppl("s122535299", List()),SymbolicName("Type", "x122535657")), CGRef(SymbolicName("Type", "x122535670"),TermAppl("s122535299", List())), CGRef(SymbolicName("Var", "x122535829"),TermAppl("s122535299", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x122535657"), Var("x122535672")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x122535625"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x122535557"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x122535632"), TermAppl("INT", List())), Binding(SymbolicName("Var", "x122535273"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x122535829"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x122535541"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x122535607"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x122535670"), SymbolicName("Type", "x122535657")), Tuple2(SymbolicName("Type", "x122535645"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type B = string
  var A := not
  type h = int
  type n1 = n1
  var k := exit
 in
end)
-----------------------------------
===================================
2016-12-15T12:06:09.788+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s122995845", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s122995863", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s122995845", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s122995845", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s122995863", List()),Label('P'),TermAppl("s122995845", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:06:12.611+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x123066284")), List(TermAppl("s123065903", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x123066298"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x123066315"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x123066282"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s123065921", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s123065903", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s123065903", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s123065921", List()),Label('P'),TermAppl("s123065903", List())), CGRef(SymbolicName("Var", "x123066282"),TermAppl("s123065921", List())), CGDecl(TermAppl("s123065921", List()),SymbolicName("Type", "x123066298")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x123066315"),TermAppl("s123065921", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x123066298"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s123066301", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x123066282"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x123066315"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type JccM = array of string
 in
  ord
end)
-----------------------------------
===================================
2016-12-15T12:06:14.544+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s123116837", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s123116855", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s123116837", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s123116837", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s123116855", List()),Label('P'),TermAppl("s123116837", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:06:26.432+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s123445191", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Times", List(TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))), TermAppl("NilExp", List()))), TermAppl("Gt", List(TermAppl("Var", List(Var("x123449887"))), TermAppl("Var", List(Var("x123450523"))))))), TermAppl("Call", List(Var("x123446184"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s123445191", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s123445191", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x123446184"),TermAppl("s123445191", List())), CGRef(SymbolicName("Var", "x123449887"),TermAppl("s123445191", List())), CGRef(SymbolicName("Var", "x123450523"),TermAppl("s123445191", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x123446184"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x123449887"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x123450523"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),if ((
  nil
) | nil) * (not > not) then
  flush())
-----------------------------------
===================================
2016-12-15T12:06:43.789+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s124024898", List())), State(TermAppl("Mod", List(As(Var("x124024940"),TermAppl("For", List(TermAppl("Var", List(Var("x124024941"))), TermAppl("Call", List(Var("x124025636"), TermAppl("Cons", List(TermAppl("Int", List(Var("x124027820"))), TermAppl("Nil", List()))))), TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), As(Var("x124030228"),TermAppl("Break", List()))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s124024898", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s124024898", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s124024938", List()),Label('P'),TermAppl("s124024898", List())), CGDecl(TermAppl("s124024938", List()),SymbolicName("Var", "x124024941")), CGDecl(TermAppl("s124024938", List()),SymbolicName("Loop", "n124024945")), CGRef(SymbolicName("Var", "x124025636"),TermAppl("s124024898", List())), CGRef(SymbolicName("Loop", "n124030229"),TermAppl("s124024938", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x124024941"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x124025636"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Loop", "n124030229"), SymbolicName("Loop", "n124024945")))),SubtypeRelation(List()),List())),for N0 := not(56) to nil = nil do
  break)
-----------------------------------
===================================
2016-12-15T12:06:57.549+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s124386329", List())), State(TermAppl("Mod", List(As(Var("x124386371"),TermAppl("For", List(TermAppl("Var", List(Var("x124386372"))), TermAppl("Int", List(Var("x124389601"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x124389017"))), TermAppl("Var", List(Var("x124389538"))))), As(Var("x124389918"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s124386329", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s124386329", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s124386369", List()),Label('P'),TermAppl("s124386329", List())), CGDecl(TermAppl("s124386369", List()),SymbolicName("Var", "x124386372")), CGDecl(TermAppl("s124386369", List()),SymbolicName("Loop", "n124386376")), CGRef(SymbolicName("Var", "x124389017"),TermAppl("s124386329", List())), CGRef(SymbolicName("Var", "x124389538"),TermAppl("s124386329", List())), CGRef(SymbolicName("Loop", "n124389919"),TermAppl("s124386369", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x124386372"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x124389017"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x124389538"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Loop", "n124389919"), SymbolicName("Loop", "n124386376")))),SubtypeRelation(List()),List())),for ZL := 5 to size = ord do
  break)
-----------------------------------
===================================
2016-12-15T12:07:11.664+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s124836426", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Int", List(Var("x124838389"))), TermAppl("Plus", List(TermAppl("Or", List(TermAppl("Var", List(Var("x124842109"))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x124844319"))), TermAppl("Nil", List()))))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x124844483"))), TermAppl("Var", List(Var("x124843678"))))))))))),List(CDistinct(Declarations(TermAppl("s124843700", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s124836426", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s124836426", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x124842109"),TermAppl("s124836426", List())), CGRef(SymbolicName("Var", "x124843678"),TermAppl("s124836426", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s124843700", List()),Label('P'),TermAppl("s124836426", List())), CGRef(SymbolicName("Var", "x124844319"),TermAppl("s124843700", List())), CGRef(SymbolicName("Var", "x124844483"),TermAppl("s124836426", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x124842109"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x124843678"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x124844319"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x124844483"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),3 + ((exit | let
 in
  exit
end) + (flush >= flush)))
-----------------------------------
===================================
2016-12-15T12:07:17.641+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s125000826", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x125007568"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x125003825"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s125000844", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s125000826", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s125000826", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s125000844", List()),Label('P'),TermAppl("s125000826", List())), CGRef(SymbolicName("Var", "x125003825"),TermAppl("s125000844", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x125003825"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  30;
  nil;
  concat;
  nil
end)
-----------------------------------
===================================
2016-12-15T12:07:17.763+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s125008077", List())), State(TermAppl("Mod", List(As(Var("x125008119"),TermAppl("For", List(TermAppl("Var", List(Var("x125008120"))), TermAppl("Call", List(Var("x125011684"), TermAppl("Cons", List(TermAppl("String", List(Var("x125012884"))), TermAppl("Nil", List()))))), TermAppl("And", List(TermAppl("Var", List(Var("x125011269"))), TermAppl("Var", List(Var("x125011627"))))), TermAppl("Call", List(Var("x125008815"), TermAppl("Cons", List(TermAppl("Var", List(Var("x125013050"))), TermAppl("Nil", List())))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s125008077", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s125008077", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s125008117", List()),Label('P'),TermAppl("s125008077", List())), CGDecl(TermAppl("s125008117", List()),SymbolicName("Var", "x125008120")), CGDecl(TermAppl("s125008117", List()),SymbolicName("Loop", "n125008124")), CGRef(SymbolicName("Var", "x125008815"),TermAppl("s125008117", List())), CGRef(SymbolicName("Var", "x125011269"),TermAppl("s125008077", List())), CGRef(SymbolicName("Var", "x125011627"),TermAppl("s125008077", List())), CGRef(SymbolicName("Var", "x125011684"),TermAppl("s125008077", List())), CGRef(SymbolicName("Var", "x125013050"),TermAppl("s125008117", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x125008120"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x125013050"), SymbolicName("Var", "x125008120")), Tuple2(SymbolicName("Var", "x125011684"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x125008815"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x125011269"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x125011627"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for n1 := ord("\t") to size & size do
  exit(n1))
-----------------------------------
===================================
2016-12-15T12:07:35.457+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x125554527")), List(TermAppl("s125547316", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x125552557"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x125550263"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x125554361"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x125554525"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s125547334", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s125547316", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s125547316", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s125547334", List()),Label('P'),TermAppl("s125547316", List())), CGRef(SymbolicName("Var", "x125550263"),TermAppl("s125547334", List())), CGRef(SymbolicName("Var", "x125552557"),TermAppl("s125547334", List())), CGRef(SymbolicName("Var", "x125554361"),TermAppl("s125547334", List())), CGRef(SymbolicName("Var", "x125554525"),TermAppl("s125547334", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x125550263"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x125552557"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x125554361"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x125554525"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  ord;
  ord;
  flush;
  not
end)
-----------------------------------
===================================
2016-12-15T12:07:41.688+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s125754328", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Geq", List(TermAppl("Int", List(Var("x125761776"))), TermAppl("Uminus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x125770094"))), TermAppl("Var", List(Var("x125769475"))))))))), TermAppl("While", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x125765895"))), TermAppl("Var", List(Var("x125766496"))))), TermAppl("While", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x125770452"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x125771344"))), TermAppl("Var", List(Var("x125771180"))))))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x125762805"), TermAppl("Cons", List(TermAppl("String", List(Var("x125766852"))), TermAppl("Nil", List()))))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s125754328", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s125754328", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s125754854", List()),Label('P'),TermAppl("s125754328", List())), CGDecl(TermAppl("s125754854", List()),ConcreteName("Loop", "", 125754858)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s125757130", List()),Label('P'),TermAppl("s125754854", List())), CGDecl(TermAppl("s125757130", List()),ConcreteName("Loop", "", 125757134)), CGRef(SymbolicName("Var", "x125762805"),TermAppl("s125757130", List())), CGRef(SymbolicName("Var", "x125765895"),TermAppl("s125754328", List())), CGRef(SymbolicName("Var", "x125766496"),TermAppl("s125754328", List())), CGRef(SymbolicName("Var", "x125769475"),TermAppl("s125754328", List())), CGRef(SymbolicName("Var", "x125770094"),TermAppl("s125754328", List())), CGRef(SymbolicName("Var", "x125770452"),TermAppl("s125754854", List())), CGRef(SymbolicName("Var", "x125771180"),TermAppl("s125754854", List())), CGRef(SymbolicName("Var", "x125771344"),TermAppl("s125754854", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x125769475"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x125771344"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x125770452"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x125762805"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x125771180"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x125765895"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x125770094"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x125766496"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if 50 >= - (size > ord) then
  while size = ord do
    while (
      getchar;
      - (concat <= concat)
    ) do
      print("P"))
-----------------------------------
===================================
2016-12-15T12:07:58.246+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x126293660")), List(TermAppl("s126290629", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x126291342"), TermAppl("Tid", List(Var("x126291859"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126291079"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126291329"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126291571"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126291805"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126293822"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x126293658"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s126290647", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s126290629", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s126290629", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s126290647", List()),Label('P'),TermAppl("s126290629", List())), CGRef(SymbolicName("Var", "x126291079"),TermAppl("s126290647", List())), CGRef(SymbolicName("Var", "x126291329"),TermAppl("s126290647", List())), CGDecl(TermAppl("s126290647", List()),SymbolicName("Type", "x126291342")), CGRef(SymbolicName("Var", "x126291571"),TermAppl("s126290647", List())), CGRef(SymbolicName("Var", "x126291805"),TermAppl("s126290647", List())), CGRef(SymbolicName("Type", "x126291859"),TermAppl("s126290647", List())), CGRef(SymbolicName("Var", "x126293658"),TermAppl("s126290647", List())), CGRef(SymbolicName("Var", "x126293822"),TermAppl("s126290647", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x126291342"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x126291329"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x126293658"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x126291805"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x126293822"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Type", "x126291859"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x126291571"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x126291079"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  type h50 = string
 in
  print;
  getchar;
  ord;
  getchar;
  concat;
  exit
end)
-----------------------------------
===================================
2016-12-15T12:08:13.363+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x126691637")), List(TermAppl("s126691606", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Or", List(TermAppl("Var", List(Var("x126699713"))), TermAppl("Var", List(Var("x126698859"))))), TermAppl("Int", List(Var("x126699776"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x126696902"))), TermAppl("Var", List(Var("x126699355"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s126691606", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s126691606", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x126696902"),TermAppl("s126691606", List())), CGRef(SymbolicName("Var", "x126698859"),TermAppl("s126691606", List())), CGRef(SymbolicName("Var", "x126699355"),TermAppl("s126691606", List())), CGRef(SymbolicName("Var", "x126699713"),TermAppl("s126691606", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x126696902"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x126698859"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x126699355"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x126699713"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if flush | flush then
  6
else
  getchar >= getchar)
-----------------------------------
===================================
2016-12-15T12:08:32.457+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s127313119", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x127315136"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x127315201"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s127313137", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s127313119", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s127313119", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s127313137", List()),Label('P'),TermAppl("s127313119", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  "\t\
\";
  0
end)
-----------------------------------
===================================
2016-12-15T12:08:37.403+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s127451418", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x127456264"))), TermAppl("Var", List(Var("x127456900"))))), TermAppl("Geq", List(TermAppl("Var", List(Var("x127458713"))), TermAppl("Var", List(Var("x127458877"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s127451418", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s127451418", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x127456264"),TermAppl("s127451418", List())), CGRef(SymbolicName("Var", "x127456900"),TermAppl("s127451418", List())), CGRef(SymbolicName("Var", "x127458713"),TermAppl("s127451418", List())), CGRef(SymbolicName("Var", "x127458877"),TermAppl("s127451418", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x127456264"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x127456900"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x127458713"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x127458877"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(exit < exit) = (chr >= chr))
-----------------------------------
===================================
2016-12-15T12:08:37.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s127469486", List())), State(TermAppl("Mod", List(As(Var("x127469528"),TermAppl("For", List(TermAppl("Var", List(Var("x127469529"))), TermAppl("Eq", List(TermAppl("Int", List(Var("x127473365"))), TermAppl("Uminus", List(TermAppl("Times", List(TermAppl("Int", List(Var("x127476502"))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x127477024"))))))))))), TermAppl("Int", List(Var("x127474153"))), TermAppl("IfThen", List(TermAppl("Uminus", List(TermAppl("Var", List(Var("x127476275"))))), TermAppl("Call", List(Var("x127471054"), TermAppl("Cons", List(TermAppl("Var", List(Var("x127475201"))), TermAppl("Nil", List())))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s127469486", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s127469486", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s127469526", List()),Label('P'),TermAppl("s127469486", List())), CGDecl(TermAppl("s127469526", List()),SymbolicName("Var", "x127469529")), CGDecl(TermAppl("s127469526", List()),SymbolicName("Loop", "n127469533")), CGRef(SymbolicName("Var", "x127471054"),TermAppl("s127469526", List())), CGRef(SymbolicName("Var", "x127475201"),TermAppl("s127469526", List())), CGRef(SymbolicName("Var", "x127476275"),TermAppl("s127469526", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x127469529"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x127471054"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x127475201"), SymbolicName("Var", "x127469529")), Tuple2(SymbolicName("Var", "x127476275"), SymbolicName("Var", "x127469529")))),SubtypeRelation(List()),List())),for n1 := 51 = - (87 * - 4) to 4 do
  if - n1 then
    exit(n1))
-----------------------------------
===================================
2016-12-15T12:08:55.158+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s127989954", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Or", List(TermAppl("Uminus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x128001614"))), TermAppl("Var", List(Var("x127999161"))))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x128001972"))), TermAppl("Var", List(Var("x128001118"))))))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x128002029"), TermAppl("Cons", List(TermAppl("String", List(Var("x128002312"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s127989954", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s127989954", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x127999161"),TermAppl("s127989954", List())), CGRef(SymbolicName("Var", "x128001118"),TermAppl("s127989954", List())), CGRef(SymbolicName("Var", "x128001614"),TermAppl("s127989954", List())), CGRef(SymbolicName("Var", "x128001972"),TermAppl("s127989954", List())), CGRef(SymbolicName("Var", "x128002029"),TermAppl("s127989954", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x128001614"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x128002029"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x128001972"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x128001118"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x127999161"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(- (chr < chr) | concat <= concat) > - ord(""))
-----------------------------------
===================================
2016-12-15T12:08:59.179+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s128123231", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x128127609"))))), TermAppl("Nil", List()))))), TermAppl("Plus", List(TermAppl("Gt", List(TermAppl("Int", List(Var("x128127967"))), TermAppl("Int", List(Var("x128126281"))))), TermAppl("Int", List(Var("x128124364"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s128123231", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128123231", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),(
  - 16
) / ((24130064353 > 9) + 593))
-----------------------------------
===================================
2016-12-15T12:08:59.918+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x128151207")), List(TermAppl("s128142008", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x128142369"))), TermAppl("Cons", List(TermAppl("String", List(Var("x128144645"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x128146570"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x128147071"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x128148828"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x128151205"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s128142026", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s128142008", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128142008", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s128142026", List()),Label('P'),TermAppl("s128142008", List())), CGRef(SymbolicName("Var", "x128142369"),TermAppl("s128142026", List())), CGRef(SymbolicName("Var", "x128147071"),TermAppl("s128142026", List())), CGRef(SymbolicName("Var", "x128151205"),TermAppl("s128142026", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x128142369"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x128147071"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x128151205"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  "3";
  36;
  exit;
  7;
  nil;
  flush
end)
-----------------------------------
===================================
2016-12-15T12:09:09.059+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s128422408", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x128422919"), TermAppl("Tid", List(Var("x128423158"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x128422647"), TermAppl("Var", List(Var("x128422887"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x128422937"), TermAppl("Var", List(Var("x128423140"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x128423195"), TermAppl("Var", List(Var("x128423354"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s128422426", List()), "All")), CDistinct(Declarations(TermAppl("s128422606", List()), "All")), CDistinct(Declarations(TermAppl("s128422625", List()), "All")), CDistinct(Declarations(TermAppl("s128422911", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s128422408", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128422408", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s128422606", List()),Label('P'),TermAppl("s128422408", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s128422625", List()),Label('P'),TermAppl("s128422606", List())), CGDecl(TermAppl("s128422625", List()),SymbolicName("Var", "x128422647")), CGRef(SymbolicName("Var", "x128422887"),TermAppl("s128422606", List())), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s128422911", List()),Label('P'),TermAppl("s128422625", List())), CGDecl(TermAppl("s128422606", List()),SymbolicName("Type", "x128422919")), CGDecl(TermAppl("s128422911", List()),SymbolicName("Var", "x128422937")), CGRef(SymbolicName("Var", "x128423140"),TermAppl("s128422625", List())), CGRef(SymbolicName("Type", "x128423158"),TermAppl("s128422606", List())), CGDirectEdge(TermAppl("s128422426", List()),Label('P'),TermAppl("s128422911", List())), CGDecl(TermAppl("s128422426", List()),SymbolicName("Var", "x128423195")), CGRef(SymbolicName("Var", "x128423354"),TermAppl("s128422911", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x128422937"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x128423195"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x128422647"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x128422919"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x128422887"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x128423140"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Type", "x128423158"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x128423354"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  type K_ = int
  var aH := size
  var M_r := getchar
  var P := getchar
 in
end)
-----------------------------------
===================================
2016-12-15T12:09:09.674+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s128443159", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x128443390"), TermAppl("Tid", List(Var("x128443403"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s128443177", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s128443159", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128443159", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s128443177", List()),Label('P'),TermAppl("s128443159", List())), CGDecl(TermAppl("s128443177", List()),SymbolicName("Type", "x128443390")), CGRef(SymbolicName("Type", "x128443403"),TermAppl("s128443177", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x128443390"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x128443403"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type Z = int
 in
end)
-----------------------------------
===================================
2016-12-15T12:09:09.688+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s128443578", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s128443596", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s128443578", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128443578", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s128443596", List()),Label('P'),TermAppl("s128443578", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:09:14.973+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s128609250", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x128615993"))), TermAppl("Cons", List(TermAppl("String", List(Var("x128613966"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x128617997"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s128609268", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s128609250", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128609250", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s128609268", List()),Label('P'),TermAppl("s128609250", List())), CGRef(SymbolicName("Var", "x128615993"),TermAppl("s128609268", List())), CGRef(SymbolicName("Var", "x128617997"),TermAppl("s128609268", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x128615993"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x128617997"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  flush;
  "";
  exit;
  nil
end)
-----------------------------------
===================================
2016-12-15T12:09:29.365+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s128993411", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x129001094"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129008586"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129008750"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129009696"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129009860"))), TermAppl("Nil", List()))))))))))))), TermAppl("Var", List(Var("x129000264"))))), TermAppl("Leq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x129000912"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129003666"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x129005989"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129004066"))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x128998695"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s128993411", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s128993411", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x128998695"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129000264"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129000912"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129001094"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129003666"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129004066"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129008586"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129008750"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129009696"),TermAppl("s128993411", List())), CGRef(SymbolicName("Var", "x129009860"),TermAppl("s128993411", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x129001094"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x129004066"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x129009860"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x129003666"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x129009696"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x129008586"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x129008750"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x128998695"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x129000264"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x129000912"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(
  ord;
  ord;
  exit;
  chr;
  substring
) > substring & (
  substring;
  ord;
  3;
  substring
) <= substring)
-----------------------------------
===================================
2016-12-15T12:09:30.695+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s129043534", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("If", List(TermAppl("And", List(TermAppl("Int", List(Var("x129050247"))), TermAppl("Uminus", List(TermAppl("Call", List(Var("x129054377"), TermAppl("Cons", List(TermAppl("String", List(Var("x129054660"))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x129049015"))), TermAppl("Var", List(Var("x129051356"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x129053168"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129054320"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129054844"))), TermAppl("Nil", List()))))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s129043534", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129043534", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x129049015"),TermAppl("s129043534", List())), CGRef(SymbolicName("Var", "x129051356"),TermAppl("s129043534", List())), CGRef(SymbolicName("Var", "x129053168"),TermAppl("s129043534", List())), CGRef(SymbolicName("Var", "x129054320"),TermAppl("s129043534", List())), CGRef(SymbolicName("Var", "x129054377"),TermAppl("s129043534", List())), CGRef(SymbolicName("Var", "x129054844"),TermAppl("s129043534", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x129054377"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x129049015"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x129054320"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x129051356"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x129054844"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x129053168"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(if 34 & - ord("") then
  concat
else
  concat) | (
  exit;
  substring;
  concat
))
-----------------------------------
===================================
2016-12-15T12:09:31.004+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x129062607")), List(TermAppl("s129054852", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x129056748"), TermAppl("Var", List(Var("x129061877"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129056707"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129061713"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x129058901"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x129061958"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129062241"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129062423"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129062605"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s129054870", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s129054852", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129054852", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s129054870", List()),Label('P'),TermAppl("s129054852", List())), CGRef(SymbolicName("Var", "x129056707"),TermAppl("s129054870", List())), CGDecl(TermAppl("s129054870", List()),SymbolicName("Var", "x129056748")), CGRef(SymbolicName("Var", "x129061713"),TermAppl("s129054870", List())), CGRef(SymbolicName("Var", "x129061877"),TermAppl("s129054852", List())), CGRef(SymbolicName("Var", "x129062241"),TermAppl("s129054870", List())), CGRef(SymbolicName("Var", "x129062423"),TermAppl("s129054870", List())), CGRef(SymbolicName("Var", "x129062605"),TermAppl("s129054870", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x129056748"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x129062423"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x129056707"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x129061877"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x129062605"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x129061713"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x129062241"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  var y := concat
 in
  print;
  getchar;
  3;
  461;
  print;
  getchar;
  chr
end)
-----------------------------------
===================================
2016-12-15T12:09:44.065+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s129458478", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("IfThen", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x129463564"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x129465842"))), TermAppl("Cons", List(TermAppl("And", List(TermAppl("Int", List(Var("x129468064"))), TermAppl("Int", List(Var("x129467664"))))), TermAppl("Nil", List()))))))))))), TermAppl("Seq", List(TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x129461595"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s129458478", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129458478", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x129461595"),TermAppl("s129458478", List())), CGRef(SymbolicName("Var", "x129463564"),TermAppl("s129458478", List())), CGRef(SymbolicName("Var", "x129465842"),TermAppl("s129458478", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x129461595"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x129463564"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x129465842"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),if (
  print;
  nil;
  substring;
  8563 & 3348843
) then
  (
  ) <> flush())
-----------------------------------
===================================
2016-12-15T12:09:53.13+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x129758990")), List(TermAppl("s129758980", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x129759149"))), TermAppl("Uminus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x129765176"))), TermAppl("Var", List(Var("x129765012"))))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x129763199"))), TermAppl("Var", List(Var("x129761959"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s129758980", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129758980", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x129759149"),TermAppl("s129758980", List())), CGRef(SymbolicName("Var", "x129761959"),TermAppl("s129758980", List())), CGRef(SymbolicName("Var", "x129763199"),TermAppl("s129758980", List())), CGRef(SymbolicName("Var", "x129765012"),TermAppl("s129758980", List())), CGRef(SymbolicName("Var", "x129765176"),TermAppl("s129758980", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x129761959"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x129763199"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Type", "x129759149"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x129765176"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x129765012"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),int[- (exit >= exit)] of getchar > getchar)
-----------------------------------
===================================
2016-12-15T12:09:56.908+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x129867710")), List(TermAppl("s129865689", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x129867872"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x129867708"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s129865707", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s129865689", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s129865689", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s129865707", List()),Label('P'),TermAppl("s129865689", List())), CGRef(SymbolicName("Var", "x129867708"),TermAppl("s129865707", List())), CGRef(SymbolicName("Var", "x129867872"),TermAppl("s129865707", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x129867708"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x129867872"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  not
end)
-----------------------------------
===================================
2016-12-15T12:10:03.471+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s130072244", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Int", List(Var("x130077701"))), TermAppl("Divide", List(TermAppl("Int", List(Var("x130074832"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x130077280"))), TermAppl("Var", List(Var("x130077638"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s130072244", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s130072244", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x130077280"),TermAppl("s130072244", List())), CGRef(SymbolicName("Var", "x130077638"),TermAppl("s130072244", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x130077280"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x130077638"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),4 > 66194 / (concat <> concat))
-----------------------------------
===================================
2016-12-15T12:10:23.134+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s130616848", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s130616866", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s130616848", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s130616848", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s130616866", List()),Label('P'),TermAppl("s130616848", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:10:37.049+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s131078111", List())), State(TermAppl("Mod", List(As(Var("x131078153"),TermAppl("For", List(TermAppl("Var", List(Var("x131078154"))), TermAppl("Uminus", List(TermAppl("And", List(TermAppl("Var", List(Var("x131083632"))), TermAppl("Var", List(Var("x131084570"))))))), TermAppl("Geq", List(TermAppl("Call", List(Var("x131083689"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x131080797"))))), TermAppl("Call", List(Var("x131084161"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s131078111", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131078111", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s131078151", List()),Label('P'),TermAppl("s131078111", List())), CGDecl(TermAppl("s131078151", List()),SymbolicName("Var", "x131078154")), CGDecl(TermAppl("s131078151", List()),SymbolicName("Loop", "n131078158")), CGRef(SymbolicName("Var", "x131083632"),TermAppl("s131078111", List())), CGRef(SymbolicName("Var", "x131083689"),TermAppl("s131078111", List())), CGRef(SymbolicName("Var", "x131084161"),TermAppl("s131078151", List())), CGRef(SymbolicName("Var", "x131084570"),TermAppl("s131078111", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x131078154"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x131083632"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x131083689"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x131084161"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x131084570"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),for i := - (size & ord) to getchar() >= "" do
  flush())
-----------------------------------
===================================
2016-12-15T12:10:40.645+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x131178606")), List(TermAppl("s131177697", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x131178058"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x131178240"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x131178422"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x131178604"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s131177715", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s131177697", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131177697", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s131177715", List()),Label('P'),TermAppl("s131177697", List())), CGRef(SymbolicName("Var", "x131178058"),TermAppl("s131177715", List())), CGRef(SymbolicName("Var", "x131178240"),TermAppl("s131177715", List())), CGRef(SymbolicName("Var", "x131178422"),TermAppl("s131177715", List())), CGRef(SymbolicName("Var", "x131178604"),TermAppl("s131177715", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x131178058"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x131178240"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x131178422"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x131178604"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  ord;
  size;
  not;
  flush
end)
-----------------------------------
===================================
2016-12-15T12:10:46.725+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x131355403")), List(TermAppl("s131355372", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Int", List(Var("x131360293"))), TermAppl("While", List(TermAppl("And", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x131364072"))), TermAppl("Var", List(Var("x131363745"))))), TermAppl("Int", List(Var("x131359373"))))), As(Var("x131364125"),TermAppl("Break", List())))), TermAppl("Call", List(Var("x131361328"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s131355372", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131355372", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s131355571", List()),Label('P'),TermAppl("s131355372", List())), CGDecl(TermAppl("s131355571", List()),ConcreteName("Loop", "", 131355575)), CGRef(SymbolicName("Var", "x131361328"),TermAppl("s131355372", List())), CGRef(SymbolicName("Var", "x131363745"),TermAppl("s131355372", List())), CGRef(SymbolicName("Var", "x131364072"),TermAppl("s131355372", List())), CGRef(SymbolicName("Loop", "n131364126"),TermAppl("s131355571", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x131361328"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x131363745"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x131364072"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n131364126"), ConcreteName("Loop", "", 131355575)))),SubtypeRelation(List()),List())),if 4 then
  while size >= size & 101 do
    break
else
  flush())
-----------------------------------
===================================
2016-12-15T12:10:59.391+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s131750457", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x131754232"))), TermAppl("Var", List(Var("x131753680"))))), TermAppl("Times", List(TermAppl("Uminus", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x131756987"))), TermAppl("Var", List(Var("x131756629"))))))), TermAppl("Int", List(Var("x131757050"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s131750457", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131750457", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x131753680"),TermAppl("s131750457", List())), CGRef(SymbolicName("Var", "x131754232"),TermAppl("s131750457", List())), CGRef(SymbolicName("Var", "x131756629"),TermAppl("s131750457", List())), CGRef(SymbolicName("Var", "x131756987"),TermAppl("s131750457", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x131753680"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x131754232"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x131756629"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x131756987"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(flush > flush) * (- (getchar <> getchar) * 4))
-----------------------------------
===================================
2016-12-15T12:11:03.649+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s131908695", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x131910869"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x131911397"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s131908713", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s131908695", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s131908695", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s131908713", List()),Label('P'),TermAppl("s131908695", List())), CGRef(SymbolicName("Var", "x131910869"),TermAppl("s131908713", List())), CGRef(SymbolicName("Var", "x131911397"),TermAppl("s131908713", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x131910869"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x131911397"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  print > (
    (
      print
    )
  )
end)
-----------------------------------
===================================
2016-12-15T12:11:08.772+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s132073447", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x132081180"))), TermAppl("Var", List(Var("x132081344"))))), TermAppl("And", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x132081526"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132081708"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x132078731"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s132073447", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s132073447", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x132078731"),TermAppl("s132073447", List())), CGRef(SymbolicName("Var", "x132081180"),TermAppl("s132073447", List())), CGRef(SymbolicName("Var", "x132081344"),TermAppl("s132073447", List())), CGRef(SymbolicName("Var", "x132081526"),TermAppl("s132073447", List())), CGRef(SymbolicName("Var", "x132081708"),TermAppl("s132073447", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x132081708"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x132081180"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x132081526"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x132078731"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x132081344"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(ord > ord) >= ((
  exit;
  size
) & ord))
-----------------------------------
===================================
2016-12-15T12:11:25.577+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x132542566")), List(TermAppl("s132542556", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x132544987"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x132547051"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x132559620"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132554026"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132557068"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132562498"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x132562844"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))))))), TermAppl("Minus", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x132549882"))), TermAppl("Var", List(Var("x132550300"))))), TermAppl("Call", List(Var("x132547108"), TermAppl("Cons", List(TermAppl("String", List(Var("x132562660"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s132542556", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s132542556", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x132544987"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132547051"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132547108"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132549882"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132550300"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132554026"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132557068"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132559620"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132562498"),TermAppl("s132542556", List())), CGRef(SymbolicName("Var", "x132562844"),TermAppl("s132542556", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x132544987"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x132557068"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x132547051"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132559620"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x132550300"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x132562844"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132562498"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x132554026"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x132549882"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x132547108"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),int[print <> (
  flush;
  not;
  size;
  getchar;
  (
    print
  )
)] of (exit >= exit) - ord(""))
-----------------------------------
===================================
2016-12-15T12:11:28.313+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s132636927", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x132645869"))), TermAppl("Var", List(Var("x132645469"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x132640318"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x132643686"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132646033"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132651043"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x132651207"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x132651389"))), TermAppl("Nil", List()))))))))))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s132636927", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s132636927", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x132640318"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132643686"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132645469"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132645869"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132646033"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132651043"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132651207"),TermAppl("s132636927", List())), CGRef(SymbolicName("Var", "x132651389"),TermAppl("s132636927", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x132645469"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x132645869"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x132640318"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132651207"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x132651389"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132646033"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132643686"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x132651043"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(substring < substring) + (print < (
  print;
  print;
  ord;
  nil;
  substring;
  print
)))
-----------------------------------
===================================
2016-12-15T12:11:34.132+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x132841777")), List(TermAppl("s132841767", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x132841936"))), TermAppl("Gt", List(TermAppl("Times", List(TermAppl("Int", List(Var("x132844997"))), TermAppl("Int", List(Var("x132846725"))))), TermAppl("Int", List(Var("x132843961"))))), TermAppl("Int", List(Var("x132846367"))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s132841767", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s132841767", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x132841936"),TermAppl("s132841767", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x132841936"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int[4 * 4094 > 9] of 3)
-----------------------------------
===================================
2016-12-15T12:12:05.008+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s133832630", List())), State(TermAppl("Mod", List(As(Var("x133832672"),TermAppl("For", List(TermAppl("Var", List(Var("x133832673"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x133835318"))), TermAppl("Var", List(Var("x133836280"))))), TermAppl("Int", List(Var("x133835877"))), As(Var("x133835371"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s133832630", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s133832630", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s133832670", List()),Label('P'),TermAppl("s133832630", List())), CGDecl(TermAppl("s133832670", List()),SymbolicName("Var", "x133832673")), CGDecl(TermAppl("s133832670", List()),SymbolicName("Loop", "n133832677")), CGRef(SymbolicName("Var", "x133835318"),TermAppl("s133832630", List())), CGRef(SymbolicName("Loop", "n133835372"),TermAppl("s133832670", List())), CGRef(SymbolicName("Var", "x133836280"),TermAppl("s133832630", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x133832673"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x133835318"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Loop", "n133835372"), SymbolicName("Loop", "n133832677")), Tuple2(SymbolicName("Var", "x133836280"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for H := print >= print to 7 do
  break)
-----------------------------------
===================================
2016-12-15T12:13:13.241+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x135982139")), List(TermAppl("s135977074", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x135981791"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x135979531"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x135982137"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s135977092", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s135977074", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s135977074", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s135977092", List()),Label('P'),TermAppl("s135977074", List())), CGRef(SymbolicName("Var", "x135979531"),TermAppl("s135977092", List())), CGRef(SymbolicName("Var", "x135981791"),TermAppl("s135977092", List())), CGRef(SymbolicName("Var", "x135982137"),TermAppl("s135977092", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x135979531"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x135981791"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x135982137"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  not;
  print;
  nil;
  substring
end)
-----------------------------------
===================================
2016-12-15T12:13:13.852+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s135991616", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x135994384"), TermAppl("Var", List(Var("x135996899"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Int", List(Var("x135994030"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x136002621"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x135999041"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x136003475"))), TermAppl("Nil", List()))))))))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x136003412"))), TermAppl("Var", List(Var("x136002226"))))))))),List(CDistinct(Declarations(TermAppl("s135991798", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s135991616", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s135991616", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s135991798", List()),Label('P'),TermAppl("s135991616", List())), CGDecl(TermAppl("s135991798", List()),SymbolicName("Var", "x135994384")), CGRef(SymbolicName("Var", "x135996899"),TermAppl("s135991616", List())), CGRef(SymbolicName("Var", "x135999041"),TermAppl("s135991798", List())), CGRef(SymbolicName("Var", "x136002226"),TermAppl("s135991616", List())), CGRef(SymbolicName("Var", "x136003412"),TermAppl("s135991616", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x135994384"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x135996899"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x135999041"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x136002226"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x136003412"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
  var V := substring
 in
  60;
  0;
  concat;
  0
end / (not <> not))
-----------------------------------
===================================
2016-12-15T12:13:30.701+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x136525842")), List(TermAppl("s136525279", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x136525856"), TermAppl("Tid", List(Var("x136525869"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x136525658"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x136525840"))), TermAppl("Nil", List()))))))))),List(CResolve(SymbolicName("Type", "x136525869"),Var("x136525870")), CDistinct(Declarations(TermAppl("s136525297", List()), "All")), CTypeOf(Var("x136525870"),Var("x136525871"))),List(NewScope(Var("s")), CGDecl(TermAppl("s136525279", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s136525279", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s136525297", List()),Label('P'),TermAppl("s136525279", List())), CGRef(SymbolicName("Var", "x136525658"),TermAppl("s136525297", List())), CGRef(SymbolicName("Var", "x136525840"),TermAppl("s136525297", List())), CGDecl(TermAppl("s136525297", List()),SymbolicName("Type", "x136525856")), CGRef(SymbolicName("Type", "x136525869"),TermAppl("s136525297", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x136525856"), Var("x136525871")))),Resolution(Map(Tuple2(SymbolicName("Var", "x136525658"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x136525840"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
 in
  getchar;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:13:41.917+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x136883702")), List(TermAppl("s136883671", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x136887699"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x136890141"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x136894371"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x136893219"))), TermAppl("Cons", List(TermAppl("Plus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x136899504"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x136899567"))), TermAppl("Nil", List()))))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x136897952"))), TermAppl("Var", List(Var("x136898352"))))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x136887863"))), TermAppl("Var", List(Var("x136886789"))))))),List(CDistinct(Declarations(TermAppl("s136883853", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s136883671", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s136883671", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s136883853", List()),Label('P'),TermAppl("s136883671", List())), CGRef(SymbolicName("Var", "x136886789"),TermAppl("s136883671", List())), CGRef(SymbolicName("Var", "x136887699"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136887863"),TermAppl("s136883671", List())), CGRef(SymbolicName("Var", "x136890141"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136893219"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136894371"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136897952"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136898352"),TermAppl("s136883853", List())), CGRef(SymbolicName("Var", "x136899504"),TermAppl("s136883853", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x136894371"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x136890141"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x136899504"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x136893219"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x136897952"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x136887699"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x136887863"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x136886789"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x136898352"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),if let
 in
  concat;
  size;
  exit;
  - (
    concat;
    (
      not;
      4
    ) + (not <> not)
  )
end then
  flush
else
  flush)
-----------------------------------
===================================
2016-12-15T12:14:10.13+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s137825756", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s137825774", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s137825756", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s137825756", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s137825774", List()),Label('P'),TermAppl("s137825756", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:14:42.102+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s138839516", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x138842018"))), TermAppl("Var", List(Var("x138842182"))))), TermAppl("Call", List(Var("x138839733"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s138839516", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s138839516", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s138839551", List()),Label('P'),TermAppl("s138839516", List())), CGDecl(TermAppl("s138839551", List()),ConcreteName("Loop", "", 138839555)), CGRef(SymbolicName("Var", "x138839733"),TermAppl("s138839551", List())), CGRef(SymbolicName("Var", "x138842018"),TermAppl("s138839516", List())), CGRef(SymbolicName("Var", "x138842182"),TermAppl("s138839516", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x138839733"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x138842018"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x138842182"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),while size <> ord do
  flush())
-----------------------------------
===================================
2016-12-15T12:14:58.423+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x139319327")), List(TermAppl("s139317173", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x139319058"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x139319376"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x139319351"), TermAppl("Tid", List(Var("x139319368"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x139319355"), TermAppl("Tid", List(Var("x139319406"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x139319380"), TermAppl("Tid", List(Var("x139319393"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x139319418"), TermAppl("Tid", List(Var("x139319431"))))), TermAppl("Nil", List()))))))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x139319028"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x139319325"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s139317191", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s139317173", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s139317173", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s139317191", List()),Label('P'),TermAppl("s139317173", List())), CGRef(SymbolicName("Var", "x139319028"),TermAppl("s139317191", List())), CGDecl(TermAppl("s139317191", List()),SymbolicName("Type", "x139319058")), CGRef(SymbolicName("Var", "x139319325"),TermAppl("s139317191", List())), NewScope(Var("s'")), CGDecl(TermAppl("s139317191", List()),SymbolicName("Type", "x139319351")), CGDecl(TermAppl("s139317191", List()),SymbolicName("Type", "x139319355")), CGRef(SymbolicName("Type", "x139319368"),TermAppl("s139317191", List())), CGRef(SymbolicName("Type", "x139319376"),TermAppl("s139317191", List())), CGDecl(TermAppl("s139317191", List()),SymbolicName("Type", "x139319380")), CGRef(SymbolicName("Type", "x139319393"),TermAppl("s139317191", List())), CGRef(SymbolicName("Type", "x139319406"),TermAppl("s139317191", List())), CGDecl(TermAppl("s139317191", List()),SymbolicName("Type", "x139319418")), CGRef(SymbolicName("Type", "x139319431"),TermAppl("s139317191", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x139319380"), Var("x139319395")), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x139319058"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s139319333", List())))), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x139319355"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x139319351"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x139319418"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x139319028"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x139319376"), SymbolicName("Type", "x139319351")), Tuple2(SymbolicName("Type", "x139319368"), SymbolicName("Type", "x139319355")), Tuple2(SymbolicName("Var", "x139319325"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x139319393"), SymbolicName("Type", "x139319380")), Tuple2(SymbolicName("Type", "x139319431"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x139319406"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type E = array of n3
  type n3 = n2
  type n2 = string
  type n1 = n1
  type n04 = int
 in
  print;
  flush
end)
-----------------------------------
===================================
2016-12-15T12:15:03.846+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s139463295", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x139463522"), TermAppl("Tid", List(Var("x139463535"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x139463748"), TermAppl("Tid", List(Var("x139463761"))))), TermAppl("Nil", List()))))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x139463572"), TermAppl("Var", List(Var("x139463731"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s139463313", List()), "All")), CDistinct(Declarations(TermAppl("s139463486", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s139463295", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s139463295", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s139463486", List()),Label('P'),TermAppl("s139463295", List())), CGDecl(TermAppl("s139463486", List()),SymbolicName("Type", "x139463522")), CGRef(SymbolicName("Type", "x139463535"),TermAppl("s139463486", List())), CGDirectEdge(TermAppl("s139463313", List()),Label('P'),TermAppl("s139463486", List())), CGDecl(TermAppl("s139463313", List()),SymbolicName("Var", "x139463572")), CGRef(SymbolicName("Var", "x139463731"),TermAppl("s139463486", List())), CGDecl(TermAppl("s139463486", List()),SymbolicName("Type", "x139463748")), CGRef(SymbolicName("Type", "x139463761"),TermAppl("s139463486", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(SymbolicName("Var", "x139463572"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x139463522"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x139463748"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x139463535"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x139463731"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Type", "x139463761"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type Z = string
  type y = int
  var Os_ := substring
 in
end)
-----------------------------------
===================================
2016-12-15T12:15:17.318+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s139818669", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Lt", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x139826770"))), TermAppl("Var", List(Var("x139827128"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x139827474"))), TermAppl("Cons", List(TermAppl("String", List(Var("x139827654"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x139827737"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x139828020"))), TermAppl("Cons", List(TermAppl("String", List(Var("x139831848"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x139830298"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x139831913"))))), TermAppl("Nil", List()))))))))))))))))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x139824179"))), TermAppl("Var", List(Var("x139822937"))))))), TermAppl("Int", List(Var("x139824242"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s139818669", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s139818669", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x139822937"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139824179"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139826770"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139827128"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139827474"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139828020"),TermAppl("s139818669", List())), CGRef(SymbolicName("Var", "x139830298"),TermAppl("s139818669", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x139827128"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x139827474"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x139826770"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x139824179"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x139830298"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x139828020"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x139822937"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),((concat > concat) * (
  substring;
  "\	
\";
  55;
  concat;
  "\	 	\";
  exit;
  - 6999
) < (exit > exit)) - 209)
-----------------------------------
===================================
2016-12-15T12:15:34.711+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s140351908", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Geq", List(TermAppl("Var", List(Var("x140359906"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x140360560"))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s140351908", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s140351908", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x140359906"),TermAppl("s140351908", List())), CGRef(SymbolicName("Var", "x140360560"),TermAppl("s140351908", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x140359906"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x140360560"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(nil & nil) <> (ord >= (
  size
)))
-----------------------------------
===================================
2016-12-15T12:15:40.552+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x140533221")), List(TermAppl("s140532512", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x140532936"))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x140533219"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s140532530", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s140532512", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s140532512", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s140532530", List()),Label('P'),TermAppl("s140532512", List())), CGRef(SymbolicName("Var", "x140533219"),TermAppl("s140532530", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x140533219"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
 in
  - 5;
  print
end)
-----------------------------------
===================================
2016-12-15T12:15:59.571+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s141137080", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x141143335"))), TermAppl("If", List(TermAppl("Lt", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x141147305"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x141145784"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x141146840"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141146777"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x141142561"))))))))),List(CDistinct(Declarations(TermAppl("s141145842", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s141137080", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s141137080", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x141142561"),TermAppl("s141137080", List())), CGRef(SymbolicName("Var", "x141143335"),TermAppl("s141137080", List())), CGRef(SymbolicName("Var", "x141145784"),TermAppl("s141137080", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s141145842", List()),Label('P'),TermAppl("s141137080", List())), CGRef(SymbolicName("Var", "x141146777"),TermAppl("s141137080", List())), CGRef(SymbolicName("Var", "x141147305"),TermAppl("s141145842", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x141145784"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x141147305"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x141142561"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x141143335"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x141146777"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),ord <> (if let
 in
  (
    not
  )
end < not then
  (
    64;
    size
  )
else
  ord))
-----------------------------------
===================================
2016-12-15T12:16:03.612+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s141261364", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x141263859"))), TermAppl("Var", List(Var("x141264030"))))), TermAppl("Call", List(Var("x141261581"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s141261364", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s141261364", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s141261399", List()),Label('P'),TermAppl("s141261364", List())), CGDecl(TermAppl("s141261399", List()),ConcreteName("Loop", "", 141261403)), CGRef(SymbolicName("Var", "x141261581"),TermAppl("s141261399", List())), CGRef(SymbolicName("Var", "x141263859"),TermAppl("s141261364", List())), CGRef(SymbolicName("Var", "x141264030"),TermAppl("s141261364", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x141261581"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x141263859"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x141264030"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),while getchar <> getchar do
  flush())
-----------------------------------
===================================
2016-12-15T12:16:19.376+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x141643313")), List(TermAppl("s141631150", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x141636398"), TermAppl("Var", List(Var("x141638009"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x141634544"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141636357"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141640723"))), TermAppl("Cons", List(TermAppl("String", List(Var("x141642963"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141643129"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141643311"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s141631168", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s141631150", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s141631150", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s141631168", List()),Label('P'),TermAppl("s141631150", List())), CGRef(SymbolicName("Var", "x141636357"),TermAppl("s141631168", List())), CGDecl(TermAppl("s141631168", List()),SymbolicName("Var", "x141636398")), CGRef(SymbolicName("Var", "x141638009"),TermAppl("s141631150", List())), CGRef(SymbolicName("Var", "x141640723"),TermAppl("s141631168", List())), CGRef(SymbolicName("Var", "x141643129"),TermAppl("s141631168", List())), CGRef(SymbolicName("Var", "x141643311"),TermAppl("s141631168", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x141636398"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x141636357"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x141643129"), SymbolicName("Var", "x141636398")), Tuple2(SymbolicName("Var", "x141640723"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x141638009"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x141643311"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  var n1 := print
 in
  nil;
  4;
  not;
  flush;
  "";
  n1;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:16:22.885+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s141760661", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Int", List(Var("x141763556"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x141761258"), TermAppl("Var", List(Var("x141767532"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x141761276"), TermAppl("String", List(Var("x141766967"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x141763493"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x141767032"))))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s141760843", List()), "All")), CDistinct(Declarations(TermAppl("s141761210", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s141760661", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s141760661", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s141761210", List()),Label('P'),TermAppl("s141760661", List())), CGDirectEdge(TermAppl("s141760843", List()),Label('P'),TermAppl("s141761210", List())), CGDecl(TermAppl("s141761210", List()),SymbolicName("Var", "x141761258")), CGDecl(TermAppl("s141760843", List()),SymbolicName("Var", "x141761276")), CGRef(SymbolicName("Var", "x141763493"),TermAppl("s141760843", List())), CGRef(SymbolicName("Var", "x141767532"),TermAppl("s141760661", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x141761276"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x141761258"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x141763493"), SymbolicName("Var", "x141761258")), Tuple2(SymbolicName("Var", "x141767532"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),6 * let
  var n1 := concat
  var F := "\n"
 in
  n1;
  - 4
end)
-----------------------------------
===================================
2016-12-15T12:16:27.123+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x141910209")), List(TermAppl("s141910199", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x141910368"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x141912966"))), TermAppl("Var", List(Var("x141914040"))))), TermAppl("String", List(Var("x141913874"))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s141910199", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s141910199", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x141910368"),TermAppl("s141910199", List())), CGRef(SymbolicName("Var", "x141912966"),TermAppl("s141910199", List())), CGRef(SymbolicName("Var", "x141914040"),TermAppl("s141910199", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x141910368"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x141912966"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x141914040"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),string[getchar >= getchar] of "\^S\^TF")
-----------------------------------
===================================
2016-12-15T12:16:29.554+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x142004690")), List(TermAppl("s142001703", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x142004160"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x142004324"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x142004506"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x142004688"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s142001721", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s142001703", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s142001703", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s142001721", List()),Label('P'),TermAppl("s142001703", List())), CGRef(SymbolicName("Var", "x142004160"),TermAppl("s142001721", List())), CGRef(SymbolicName("Var", "x142004324"),TermAppl("s142001721", List())), CGRef(SymbolicName("Var", "x142004506"),TermAppl("s142001721", List())), CGRef(SymbolicName("Var", "x142004688"),TermAppl("s142001721", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x142004160"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x142004324"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x142004506"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x142004688"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  exit;
  chr;
  size
end)
-----------------------------------
===================================
2016-12-15T12:16:31.827+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s142080405", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("And", List(TermAppl("Call", List(Var("x142087319"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x142085687"))))), TermAppl("And", List(TermAppl("Var", List(Var("x142087735"))), TermAppl("Var", List(Var("x142087262"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s142080405", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s142080405", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x142087262"),TermAppl("s142080405", List())), CGRef(SymbolicName("Var", "x142087319"),TermAppl("s142080405", List())), CGRef(SymbolicName("Var", "x142087735"),TermAppl("s142080405", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x142087262"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x142087319"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x142087735"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(getchar() & "") > (substring & substring))
-----------------------------------
===================================
2016-12-15T12:16:37.53+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s142250592", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x142256074"))), TermAppl("Var", List(Var("x142255438"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x142258051"))), TermAppl("Var", List(Var("x142257887"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s142250592", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s142250592", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x142255438"),TermAppl("s142250592", List())), CGRef(SymbolicName("Var", "x142256074"),TermAppl("s142250592", List())), CGRef(SymbolicName("Var", "x142257887"),TermAppl("s142250592", List())), CGRef(SymbolicName("Var", "x142258051"),TermAppl("s142250592", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x142255438"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x142256074"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x142257887"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x142258051"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(flush <> flush) <= (substring <= substring))
-----------------------------------
===================================
2016-12-15T12:17:13.643+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s143342304", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s143342322", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s143342304", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s143342304", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s143342322", List()),Label('P'),TermAppl("s143342304", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:17:20.895+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x143567155")), List(TermAppl("s143567124", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Call", List(Var("x143572477"), TermAppl("Cons", List(TermAppl("String", List(Var("x143575407"))), TermAppl("Nil", List()))))), TermAppl("Neq", List(TermAppl("String", List(Var("x143575229"))), TermAppl("String", List(Var("x143574761"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x143572420"))), TermAppl("Var", List(Var("x143575067"))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s143567124", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s143567124", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x143572420"),TermAppl("s143567124", List())), CGRef(SymbolicName("Var", "x143572477"),TermAppl("s143567124", List())), CGRef(SymbolicName("Var", "x143575067"),TermAppl("s143567124", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x143572420"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x143572477"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x143575067"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if size("") then
  "" <> ""
else
  ord <= ord)
-----------------------------------
===================================
2016-12-15T12:17:22.971+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s143637366", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x143641100"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x143641503"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x143640429"))))))),List(CResolve(SymbolicName("Var", "x143641503"),Var("x143641504")), CDistinct(Declarations(TermAppl("s143637548", List()), "All")), CTypeOf(Var("x143641504"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s143637366", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s143637366", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s143637548", List()),Label('P'),TermAppl("s143637366", List())), CGRef(SymbolicName("Var", "x143640429"),TermAppl("s143637366", List())), CGRef(SymbolicName("Var", "x143641503"),TermAppl("s143637548", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x143640429"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  20;
  substring
end <> substring)
-----------------------------------
===================================
2016-12-15T12:17:59.252+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s144708498", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s144708516", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s144708498", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s144708498", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s144708516", List()),Label('P'),TermAppl("s144708498", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:18:18.928+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x145330177")), List(TermAppl("s145319707", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x145323434"), TermAppl("Tid", List(Var("x145327976"))), TermAppl("String", List(Var("x145325024"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145323418"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145327742"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145327958"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145328153"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145328335"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145330339"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x145330175"))), TermAppl("Nil", List()))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s145319725", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s145319707", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s145319707", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s145319725", List()),Label('P'),TermAppl("s145319707", List())), CGRef(SymbolicName("Var", "x145323418"),TermAppl("s145319725", List())), CGDecl(TermAppl("s145319725", List()),SymbolicName("Var", "x145323434")), CGRef(SymbolicName("Var", "x145327742"),TermAppl("s145319725", List())), CGRef(SymbolicName("Var", "x145327958"),TermAppl("s145319725", List())), CGRef(SymbolicName("Type", "x145327976"),TermAppl("s145319707", List())), CGRef(SymbolicName("Var", "x145328153"),TermAppl("s145319725", List())), CGRef(SymbolicName("Var", "x145328335"),TermAppl("s145319725", List())), CGRef(SymbolicName("Var", "x145330175"),TermAppl("s145319725", List())), CGRef(SymbolicName("Var", "x145330339"),TermAppl("s145319725", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x145323434"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x145327742"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x145327958"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Type", "x145327976"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x145323418"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x145328335"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x145328153"), SymbolicName("Var", "x145323434")), Tuple2(SymbolicName("Var", "x145330339"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x145330175"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),let
  var n1 : string := ""
 in
  concat;
  ord;
  getchar;
  n1;
  ord;
  flush;
  print
end)
-----------------------------------
===================================
2016-12-15T12:18:20.075+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x145371870")), List(TermAppl("s145371839", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x145377609"))), TermAppl("Var", List(Var("x145376509"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Call", List(Var("x145377174"), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s145372657", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s145371839", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s145371839", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x145376509"),TermAppl("s145371839", List())), CGRef(SymbolicName("Var", "x145377174"),TermAppl("s145371839", List())), CGDirectEdge(TermAppl("s145372657", List()),Label('P'),TermAppl("s145371839", List())), CGRef(SymbolicName("Var", "x145377609"),TermAppl("s145371839", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x145376509"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x145377174"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x145377609"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if exit >= exit then
  let
   in
  end
else
  flush())
-----------------------------------
===================================
2016-12-15T12:18:35.663+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s145860730", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x145864505"))), TermAppl("Var", List(Var("x145863953"))))), TermAppl("Minus", List(TermAppl("Int", List(Var("x145864926"))), TermAppl("Call", List(Var("x145864562"), TermAppl("Cons", List(TermAppl("String", List(Var("x145865203"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s145860730", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s145860730", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x145863953"),TermAppl("s145860730", List())), CGRef(SymbolicName("Var", "x145864505"),TermAppl("s145860730", List())), CGRef(SymbolicName("Var", "x145864562"),TermAppl("s145860730", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x145863953"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x145864505"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x145864562"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(flush >= flush) * (9 - ord("\^O")))
-----------------------------------
===================================
2016-12-15T12:18:36.66+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s145891808", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s145891826", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s145891808", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s145891808", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s145891826", List()),Label('P'),TermAppl("s145891808", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:18:51.32+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s146330374", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s146330392", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s146330374", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s146330374", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s146330392", List()),Label('P'),TermAppl("s146330374", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:19:13.384+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s146947237", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Neq", List(TermAppl("If", List(TermAppl("Call", List(Var("x146953406"), TermAppl("Cons", List(TermAppl("String", List(Var("x146954009"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x146951749"))), TermAppl("Var", List(Var("x146953833"))))), TermAppl("Var", List(Var("x146953349"))))), TermAppl("Seq", List(TermAppl("Nil", List()))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s146947237", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s146947237", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x146951749"),TermAppl("s146947237", List())), CGRef(SymbolicName("Var", "x146953349"),TermAppl("s146947237", List())), CGRef(SymbolicName("Var", "x146953406"),TermAppl("s146947237", List())), CGRef(SymbolicName("Var", "x146953833"),TermAppl("s146947237", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x146951749"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x146953349"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x146953406"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x146953833"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),if (if ord("0") then
  size
else
  ord) <> size then
  (
  ))
-----------------------------------
===================================
2016-12-15T12:19:53.795+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s148079661", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x148081842"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s148079679", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s148079661", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s148079661", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s148079679", List()),Label('P'),TermAppl("s148079661", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  "\358\"";
  (
  )
end)
-----------------------------------
===================================
2016-12-15T12:19:58.023+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s148213027", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Geq", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x148220496"))), TermAppl("Var", List(Var("x148220138"))))), TermAppl("Int", List(Var("x148217568"))))), TermAppl("Leq", List(TermAppl("Int", List(Var("x148220559"))), TermAppl("Int", List(Var("x148215609"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s148213027", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s148213027", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x148220138"),TermAppl("s148213027", List())), CGRef(SymbolicName("Var", "x148220496"),TermAppl("s148213027", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x148220138"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x148220496"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),((size <= size) >= 6) / (42 <= 1))
-----------------------------------
===================================
2016-12-15T12:20:12.313+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x148628968")), List(TermAppl("s148628423", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("String", List(Var("x148628763"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x148628966"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s148628441", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s148628423", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s148628423", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s148628441", List()),Label('P'),TermAppl("s148628423", List())), CGRef(SymbolicName("Var", "x148628966"),TermAppl("s148628441", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x148628966"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  "";
  exit
end)
-----------------------------------
===================================
2016-12-15T12:20:45.843+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s149689920", List())), State(TermAppl("Mod", List(As(Var("x149689962"),TermAppl("For", List(TermAppl("Var", List(Var("x149689963"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x149694363"))), TermAppl("Cons", List(TermAppl("Neq", List(TermAppl("String", List(Var("x149696502"))), TermAppl("String", List(Var("x149696338"))))), TermAppl("Nil", List()))))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x149692671"))), TermAppl("Var", List(Var("x149693029"))))), As(Var("x149690133"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s149689920", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s149689920", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s149689960", List()),Label('P'),TermAppl("s149689920", List())), CGDecl(TermAppl("s149689960", List()),SymbolicName("Var", "x149689963")), CGDecl(TermAppl("s149689960", List()),SymbolicName("Loop", "n149689967")), CGRef(SymbolicName("Loop", "n149690134"),TermAppl("s149689960", List())), CGRef(SymbolicName("Var", "x149692671"),TermAppl("s149689920", List())), CGRef(SymbolicName("Var", "x149693029"),TermAppl("s149689920", List())), CGRef(SymbolicName("Var", "x149694363"),TermAppl("s149689920", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x149689963"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n149690134"), SymbolicName("Loop", "n149689967")), Tuple2(SymbolicName("Var", "x149692671"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x149693029"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x149694363"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for cl1A := (
  print;
  "" <> "\""
) to size > size do
  break)
-----------------------------------
===================================
2016-12-15T12:20:48.741+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s149778538", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x149778740"), TermAppl("Var", List(Var("x149778899"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s149778556", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s149778538", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s149778538", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s149778556", List()),Label('P'),TermAppl("s149778538", List())), CGDecl(TermAppl("s149778556", List()),SymbolicName("Var", "x149778740")), CGRef(SymbolicName("Var", "x149778899"),TermAppl("s149778538", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x149778740"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x149778899"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  var X := flush
 in
end)
-----------------------------------
===================================
2016-12-15T12:20:56.18+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s149971860", List())), State(TermAppl("Mod", List(TermAppl("Assign", List(TermAppl("Var", List(Var("x149972307"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x149972648"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s149971860", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s149971860", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x149972307"),TermAppl("s149971860", List())), CGRef(SymbolicName("Var", "x149972648"),TermAppl("s149971860", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x149972307"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x149972648"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),size := (
  ord
))
-----------------------------------
===================================
2016-12-15T12:20:56.967+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s149998848", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s149998866", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s149998848", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s149998848", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s149998866", List()),Label('P'),TermAppl("s149998848", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:20:57.847+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s150020967", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x150024409"))), TermAppl("Var", List(Var("x150024245"))))), TermAppl("Call", List(Var("x150021960"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s150020967", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s150020967", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x150021960"),TermAppl("s150020967", List())), CGRef(SymbolicName("Var", "x150024245"),TermAppl("s150020967", List())), CGRef(SymbolicName("Var", "x150024409"),TermAppl("s150020967", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x150021960"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x150024245"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x150024409"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if chr <= chr then
  flush())
-----------------------------------
===================================
2016-12-15T12:20:59.219+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x150067407")), List(TermAppl("s150066498", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x150066859"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150067041"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150067223"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150067405"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s150066516", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s150066498", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s150066498", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s150066516", List()),Label('P'),TermAppl("s150066498", List())), CGRef(SymbolicName("Var", "x150066859"),TermAppl("s150066516", List())), CGRef(SymbolicName("Var", "x150067041"),TermAppl("s150066516", List())), CGRef(SymbolicName("Var", "x150067223"),TermAppl("s150066516", List())), CGRef(SymbolicName("Var", "x150067405"),TermAppl("s150066516", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x150066859"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x150067041"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x150067223"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x150067405"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  not;
  getchar;
  flush
end)
-----------------------------------
===================================
2016-12-15T12:21:09.527+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x150413249")), List(TermAppl("s150408002", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x150408363"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150410641"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150413065"))), TermAppl("Cons", List(TermAppl("String", List(Var("x150412899"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x150413247"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s150408020", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s150408002", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s150408002", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s150408020", List()),Label('P'),TermAppl("s150408002", List())), CGRef(SymbolicName("Var", "x150408363"),TermAppl("s150408020", List())), CGRef(SymbolicName("Var", "x150410641"),TermAppl("s150408020", List())), CGRef(SymbolicName("Var", "x150413065"),TermAppl("s150408020", List())), CGRef(SymbolicName("Var", "x150413247"),TermAppl("s150408020", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x150408363"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x150410641"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x150413065"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x150413247"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  substring;
  substring;
  "";
  substring
end)
-----------------------------------
===================================
2016-12-15T12:21:52.82+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x151778947")), List(TermAppl("s151777016", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x151778976"), TermAppl("Tid", List(Var("x151778989"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x151778968"), TermAppl("Var", List(Var("x151779148"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x151778945"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s151777034", List()), "All")), CDistinct(Declarations(TermAppl("s151777189", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s151777016", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s151777016", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s151777189", List()),Label('P'),TermAppl("s151777016", List())), CGDirectEdge(TermAppl("s151777034", List()),Label('P'),TermAppl("s151777189", List())), CGRef(SymbolicName("Var", "x151778945"),TermAppl("s151777034", List())), CGDecl(TermAppl("s151777034", List()),SymbolicName("Var", "x151778968")), CGDecl(TermAppl("s151777189", List()),SymbolicName("Type", "x151778976")), CGRef(SymbolicName("Type", "x151778989"),TermAppl("s151777189", List())), CGRef(SymbolicName("Var", "x151779148"),TermAppl("s151777189", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x151778968"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x151778976"), Var("x151778991")), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x151778945"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x151778989"), SymbolicName("Type", "x151778976")), Tuple2(SymbolicName("Var", "x151779148"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  type n1 = n1
  var d := ord
 in
  not
end)
-----------------------------------
===================================
2016-12-15T12:21:54.329+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s151821323", List())), State(TermAppl("Mod", List(As(Var("x151821365"),TermAppl("For", List(TermAppl("Var", List(Var("x151821366"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x151825095"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x151825176"))), TermAppl("Nil", List()))))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x151824422"))), TermAppl("Var", List(Var("x151824749"))))), As(Var("x151824802"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s151821323", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s151821323", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s151821363", List()),Label('P'),TermAppl("s151821323", List())), CGDecl(TermAppl("s151821363", List()),SymbolicName("Var", "x151821366")), CGDecl(TermAppl("s151821363", List()),SymbolicName("Loop", "n151821370")), CGRef(SymbolicName("Var", "x151824422"),TermAppl("s151821323", List())), CGRef(SymbolicName("Var", "x151824749"),TermAppl("s151821323", List())), CGRef(SymbolicName("Loop", "n151824803"),TermAppl("s151821363", List())), CGRef(SymbolicName("Var", "x151825095"),TermAppl("s151821323", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x151821366"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x151824422"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x151824749"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n151824803"), SymbolicName("Loop", "n151821370")), Tuple2(SymbolicName("Var", "x151825095"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),for g := (
  getchar;
  48
) to size <> size do
  break)
-----------------------------------
===================================
2016-12-15T12:21:55.152+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s151850001", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x151856416"))), TermAppl("Var", List(Var("x151856718"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x151854847"))), TermAppl("Var", List(Var("x151856882"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s151850001", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s151850001", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x151854847"),TermAppl("s151850001", List())), CGRef(SymbolicName("Var", "x151856416"),TermAppl("s151850001", List())), CGRef(SymbolicName("Var", "x151856718"),TermAppl("s151850001", List())), CGRef(SymbolicName("Var", "x151856882"),TermAppl("s151850001", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x151854847"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x151856416"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x151856718"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x151856882"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(substring >= substring) = (getchar <> getchar))
-----------------------------------
===================================
2016-12-15T12:21:56.229+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s151887105", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Eq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x151896173"))), TermAppl("Var", List(Var("x151897027"))))), TermAppl("Int", List(Var("x151897090"))))), TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s151887105", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s151887105", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x151896173"),TermAppl("s151887105", List())), CGRef(SymbolicName("Var", "x151897027"),TermAppl("s151887105", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x151896173"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x151897027"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),((exit > exit) = 1) <> (nil & nil))
-----------------------------------
===================================
2016-12-15T12:22:10.738+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s152312656", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x152319071"))), TermAppl("Var", List(Var("x152319373"))))), TermAppl("And", List(TermAppl("Var", List(Var("x152317502"))), TermAppl("Var", List(Var("x152319537"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s152312656", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s152312656", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x152317502"),TermAppl("s152312656", List())), CGRef(SymbolicName("Var", "x152319071"),TermAppl("s152312656", List())), CGRef(SymbolicName("Var", "x152319373"),TermAppl("s152312656", List())), CGRef(SymbolicName("Var", "x152319537"),TermAppl("s152312656", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x152317502"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x152319071"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x152319373"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x152319537"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),(not <> not) >= (size & size))
-----------------------------------
===================================
2016-12-15T12:22:12.489+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s152377202", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s152377220", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s152377202", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s152377202", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s152377220", List()),Label('P'),TermAppl("s152377202", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:22:38.411+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s153151782", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x153161149"))), TermAppl("Var", List(Var("x153159278"))))), TermAppl("Minus", List(TermAppl("Or", List(TermAppl("Var", List(Var("x153160847"))), TermAppl("Var", List(Var("x153161313"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x153155200"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s153151782", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s153151782", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x153159278"),TermAppl("s153151782", List())), CGRef(SymbolicName("Var", "x153160847"),TermAppl("s153151782", List())), CGRef(SymbolicName("Var", "x153161149"),TermAppl("s153151782", List())), CGRef(SymbolicName("Var", "x153161313"),TermAppl("s153151782", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x153159278"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x153160847"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x153161149"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x153161313"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(getchar > getchar) < (exit | exit) - - 3)
-----------------------------------
===================================
2016-12-15T12:22:43.171+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s153307123", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Or", List(TermAppl("Int", List(Var("x153313351"))), TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))), TermAppl("Int", List(Var("x153310840"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s153307123", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s153307123", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),(22 | nil = nil) >= 133)
-----------------------------------
===================================
2016-12-15T12:22:46.075+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s153398967", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x153404831"))), TermAppl("Var", List(Var("x153404365"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x153402796"))), TermAppl("Var", List(Var("x153404667"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s153398967", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s153398967", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x153402796"),TermAppl("s153398967", List())), CGRef(SymbolicName("Var", "x153404365"),TermAppl("s153398967", List())), CGRef(SymbolicName("Var", "x153404667"),TermAppl("s153398967", List())), CGRef(SymbolicName("Var", "x153404831"),TermAppl("s153398967", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x153402796"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x153404365"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x153404667"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x153404831"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(ord <> ord) / (concat <= concat))
-----------------------------------
===================================
2016-12-15T12:22:52.489+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x153571553")), List(TermAppl("s153571522", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Leq", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x153585398"), TermAppl("Int", List(Var("x153586796"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x153589724"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x153580425"))))), TermAppl("Var", List(Var("x153577103"))), TermAppl("If", List(TermAppl("Uminus", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x153589076"))), TermAppl("Var", List(Var("x153589542"))))))), TermAppl("Var", List(Var("x153585375"))), TermAppl("Var", List(Var("x153589378"))))))))),List(CResolve(SymbolicName("Var", "x153589724"),Var("x153589725")), CDistinct(Declarations(TermAppl("s153572340", List()), "All")), CTypeOf(Var("x153589725"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s153571522", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s153571522", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s153572340", List()),Label('P'),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153577103"),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153580425"),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153585375"),TermAppl("s153571522", List())), CGDecl(TermAppl("s153572340", List()),SymbolicName("Var", "x153585398")), CGRef(SymbolicName("Var", "x153589076"),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153589378"),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153589542"),TermAppl("s153571522", List())), CGRef(SymbolicName("Var", "x153589724"),TermAppl("s153572340", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x153585398"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x153585375"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x153589378"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x153580425"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x153589542"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x153577103"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x153589076"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),if let
  var q := 54
 in
  nil;
  substring
end <= substring then
  size
else
  if - (getchar <= getchar) then
    ord
  else
    size)
-----------------------------------
===================================
2016-12-15T12:23:17.982+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s154383816", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x154390533"))), TermAppl("Var", List(Var("x154390231"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x154388662"))), TermAppl("Var", List(Var("x154390697"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s154383816", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s154383816", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x154388662"),TermAppl("s154383816", List())), CGRef(SymbolicName("Var", "x154390231"),TermAppl("s154383816", List())), CGRef(SymbolicName("Var", "x154390533"),TermAppl("s154383816", List())), CGRef(SymbolicName("Var", "x154390697"),TermAppl("s154383816", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x154388662"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x154390231"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x154390533"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x154390697"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(size <= size) <> (getchar = getchar))
-----------------------------------
===================================
2016-12-15T12:23:27.356+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s154676658", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x154684117"))), TermAppl("Var", List(Var("x154683953"))))), TermAppl("And", List(TermAppl("Var", List(Var("x154682140"))), TermAppl("Var", List(Var("x154681504"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s154676658", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s154676658", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x154681504"),TermAppl("s154676658", List())), CGRef(SymbolicName("Var", "x154682140"),TermAppl("s154676658", List())), CGRef(SymbolicName("Var", "x154683953"),TermAppl("s154676658", List())), CGRef(SymbolicName("Var", "x154684117"),TermAppl("s154676658", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x154681504"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x154682140"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x154683953"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x154684117"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),(concat > concat) <= (substring & substring))
-----------------------------------
===================================
2016-12-15T12:23:27.377+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x154684852")), List(TermAppl("s154684125", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x154684486"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x154684850"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s154684143", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s154684125", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s154684125", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s154684143", List()),Label('P'),TermAppl("s154684125", List())), CGRef(SymbolicName("Var", "x154684486"),TermAppl("s154684143", List())), CGRef(SymbolicName("Var", "x154684850"),TermAppl("s154684143", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x154684486"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x154684850"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  print;
  nil;
  substring
end)
-----------------------------------
===================================
2016-12-15T12:23:34.702+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x154920372")), List(TermAppl("s154909665", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x154918058"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x154915816"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x154921837"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x154913102"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x154922338"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x154920370"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s154909683", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s154909665", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s154909665", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s154909683", List()),Label('P'),TermAppl("s154909665", List())), CGRef(SymbolicName("Var", "x154913102"),TermAppl("s154909683", List())), CGRef(SymbolicName("Var", "x154915816"),TermAppl("s154909683", List())), CGRef(SymbolicName("Var", "x154918058"),TermAppl("s154909683", List())), CGRef(SymbolicName("Var", "x154920370"),TermAppl("s154909683", List())), CGRef(SymbolicName("Var", "x154922338"),TermAppl("s154909683", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x154920370"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x154913102"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x154922338"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x154918058"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x154915816"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  size;
  3;
  concat;
  exit;
  ord
end)
-----------------------------------
===================================
2016-12-15T12:24:03.339+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s155813798", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s155813816", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s155813798", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s155813798", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s155813816", List()),Label('P'),TermAppl("s155813798", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:24:06.998+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s155978718", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x155978920"), TermAppl("String", List(Var("x155979077"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s155978736", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s155978718", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s155978718", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s155978736", List()),Label('P'),TermAppl("s155978718", List())), CGDecl(TermAppl("s155978736", List()),SymbolicName("Var", "x155978920"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x155978920"), TermAppl("STRING", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
  var q := "\\\""
 in
end)
-----------------------------------
===================================
2016-12-15T12:24:07.007+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s155979105", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s155979123", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s155979105", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s155979105", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s155979123", List()),Label('P'),TermAppl("s155979105", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:24:19.924+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s156494021", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x156498883"))))), TermAppl("Minus", List(TermAppl("Geq", List(TermAppl("Call", List(Var("x156499375"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x156498818"))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x156499746"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s156494021", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s156494021", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x156499375"),TermAppl("s156494021", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x156499375"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),- 3 * ((getchar() >= "") - - 677))
-----------------------------------
===================================
2016-12-15T12:24:22.952+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x156613277")), List(TermAppl("s156601214", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x156613305"), TermAppl("Tid", List(Var("x156613318"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x156609941"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x156611599"))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x156613275"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s156601232", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s156601214", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s156601214", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s156601232", List()),Label('P'),TermAppl("s156601214", List())), CGRef(SymbolicName("Var", "x156609941"),TermAppl("s156601232", List())), CGRef(SymbolicName("Var", "x156611599"),TermAppl("s156601232", List())), CGRef(SymbolicName("Var", "x156613275"),TermAppl("s156601232", List())), CGDecl(TermAppl("s156601232", List()),SymbolicName("Type", "x156613305")), CGRef(SymbolicName("Type", "x156613318"),TermAppl("s156601232", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x156613305"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x156609941"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x156611599"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x156613275"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x156613318"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type s = int
 in
  exit;
  (
    size
  );
  flush
end)
-----------------------------------
===================================
2016-12-15T12:24:25.176+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s156692265", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s156692283", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s156692265", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s156692265", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s156692283", List()),Label('P'),TermAppl("s156692265", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:24:31.39+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s156900017", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s156900035", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s156900017", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s156900017", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s156900035", List()),Label('P'),TermAppl("s156900017", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:24:33.116+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s156950933", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("If", List(TermAppl("Or", List(TermAppl("Var", List(Var("x156958259"))), TermAppl("Var", List(Var("x156959001"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x156960139"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x156960321"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x156956414"))))), TermAppl("Var", List(Var("x156959575"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s156950933", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s156950933", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x156956414"),TermAppl("s156950933", List())), CGRef(SymbolicName("Var", "x156958259"),TermAppl("s156950933", List())), CGRef(SymbolicName("Var", "x156959001"),TermAppl("s156950933", List())), CGRef(SymbolicName("Var", "x156959575"),TermAppl("s156950933", List())), CGRef(SymbolicName("Var", "x156960139"),TermAppl("s156950933", List())), CGRef(SymbolicName("Var", "x156960321"),TermAppl("s156950933", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x156959001"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x156956414"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x156958259"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x156959575"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x156960321"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x156960139"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(if getchar | getchar then
  (
    ord;
    (
      ord
    )
  )
else
  size) <= size)
-----------------------------------
===================================
2016-12-15T12:24:37.462+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s157127422", List())), State(TermAppl("Mod", List(As(Var("x157127464"),TermAppl("For", List(TermAppl("Var", List(Var("x157127465"))), TermAppl("Int", List(Var("x157128197"))), TermAppl("Int", List(Var("x157128555"))), TermAppl("Seq", List(TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s157127422", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s157127422", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s157127462", List()),Label('P'),TermAppl("s157127422", List())), CGDecl(TermAppl("s157127462", List()),SymbolicName("Var", "x157127465")), CGDecl(TermAppl("s157127462", List()),SymbolicName("Loop", "n157127469"))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x157127465"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),for Y_ := 87 to 7 do
  (
  ))
-----------------------------------
===================================
2016-12-15T12:24:38.855+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x157173134")), List(TermAppl("s157173124", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x157173293"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x157175424"), TermAppl("String", List(Var("x157178765"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x157178931"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x157178131"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x157181209"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x157184576"))), TermAppl("Cons", List(TermAppl("And", List(TermAppl("Var", List(Var("x157184012"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x157184758"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))))))))), TermAppl("String", List(Var("x157175363"))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CDistinct(Declarations(TermAppl("s157173310", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s157173124", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s157173124", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x157173293"),TermAppl("s157173124", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s157173310", List()),Label('P'),TermAppl("s157173124", List())), CGDecl(TermAppl("s157173310", List()),SymbolicName("Var", "x157175424")), CGRef(SymbolicName("Var", "x157178131"),TermAppl("s157173310", List())), CGRef(SymbolicName("Var", "x157178931"),TermAppl("s157173310", List())), CGRef(SymbolicName("Var", "x157181209"),TermAppl("s157173310", List())), CGRef(SymbolicName("Var", "x157184012"),TermAppl("s157173310", List())), CGRef(SymbolicName("Var", "x157184576"),TermAppl("s157173310", List())), CGRef(SymbolicName("Var", "x157184758"),TermAppl("s157173310", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x157175424"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x157178131"), SymbolicName("Var", "x157175424")), Tuple2(SymbolicName("Var", "x157184012"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x157184758"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x157181209"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x157173293"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x157178931"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x157184576"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),string[let
  var n1 := ""
 in
  chr;
  n1;
  nil;
  not;
  getchar;
  flush & (
    flush
  )
end] of "")
-----------------------------------
===================================
2016-12-15T12:25:06.984+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s158205375", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Eq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x158212906"))))), TermAppl("Nil", List()))))), TermAppl("And", List(TermAppl("Var", List(Var("x158209643"))), TermAppl("Var", List(Var("x158210497"))))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x158212467"))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x158213264"))))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s158205375", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s158205375", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x158209643"),TermAppl("s158205375", List())), CGRef(SymbolicName("Var", "x158210497"),TermAppl("s158205375", List())), CGRef(SymbolicName("Var", "x158212467"),TermAppl("s158205375", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x158209643"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x158210497"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x158212467"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),((
  - 9
) = (exit & exit)) - (
  not;
  - 61
))
-----------------------------------
===================================
2016-12-15T12:25:13.662+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s158472548", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x158481121"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x158477796"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x158483393"))), TermAppl("Var", List(Var("x158483557"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Assign", List(TermAppl("Var", List(Var("x158480287"))), TermAppl("Var", List(Var("x158479360"))))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s158472730", List()), "All")), CSubtype(TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List()))),TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s158472548", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s158472548", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s158472730", List()),Label('P'),TermAppl("s158472548", List())), CGRef(SymbolicName("Var", "x158477796"),TermAppl("s158472730", List())), CGRef(SymbolicName("Var", "x158479360"),TermAppl("s158472548", List())), CGRef(SymbolicName("Var", "x158480287"),TermAppl("s158472548", List())), CGRef(SymbolicName("Var", "x158483393"),TermAppl("s158472730", List())), CGRef(SymbolicName("Var", "x158483557"),TermAppl("s158472730", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x158480287"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x158483557"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x158479360"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x158477796"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x158483393"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if let
 in
  9;
  concat;
  (
    chr <= chr
  )
end then
  (
    flush := flush
  ))
-----------------------------------
===================================
2016-12-15T12:25:17.755+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s158639365", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Lt", List(TermAppl("String", List(Var("x158642805"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x158642987"))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x158640358"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s158639365", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s158639365", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x158640358"),TermAppl("s158639365", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x158640358"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if "" < (
  ""
) then
  flush())
-----------------------------------
===================================
2016-12-15T12:25:39.676+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s159445283", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x159449603"))), TermAppl("Var", List(Var("x159450423"))))), TermAppl("Assign", List(TermAppl("Var", List(Var("x159450028"))), TermAppl("Var", List(Var("x159450587"))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List()))),TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s159445283", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s159445283", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x159449603"),TermAppl("s159445283", List())), CGRef(SymbolicName("Var", "x159450028"),TermAppl("s159445283", List())), CGRef(SymbolicName("Var", "x159450423"),TermAppl("s159445283", List())), CGRef(SymbolicName("Var", "x159450587"),TermAppl("s159445283", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x159449603"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x159450028"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x159450423"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x159450587"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if exit < exit then
  flush := flush)
-----------------------------------
===================================
2016-12-15T12:25:44.242+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s159599401", List())), State(TermAppl("Mod", List(As(Var("x159599443"),TermAppl("For", List(TermAppl("Var", List(Var("x159599444"))), TermAppl("And", List(TermAppl("Var", List(Var("x159602089"))), TermAppl("Var", List(Var("x159602881"))))), TermAppl("Int", List(Var("x159602152"))), TermAppl("Call", List(Var("x159602938"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s159599401", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s159599401", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s159599441", List()),Label('P'),TermAppl("s159599401", List())), CGDecl(TermAppl("s159599441", List()),SymbolicName("Var", "x159599444")), CGDecl(TermAppl("s159599441", List()),SymbolicName("Loop", "n159599448")), CGRef(SymbolicName("Var", "x159602089"),TermAppl("s159599401", List())), CGRef(SymbolicName("Var", "x159602881"),TermAppl("s159599401", List())), CGRef(SymbolicName("Var", "x159602938"),TermAppl("s159599441", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x159599444"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x159602089"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x159602881"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x159602938"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for a_ := getchar & getchar to 637 do
  flush())
-----------------------------------
===================================
2016-12-15T12:25:54.616+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x160014427")), List(TermAppl("s160014417", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x160020558"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x160020717"))), TermAppl("Var", List(Var("x160020239"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x160020549"))), TermAppl("Var", List(Var("x160019092"))))))))),List(CResolve(SymbolicName("Var", "x160020717"),Var("x160020718")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List())), CTypeOf(Var("x160020718"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s160014417", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s160014417", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x160019092"),TermAppl("s160014417", List())), CGRef(SymbolicName("Var", "x160020239"),TermAppl("s160014417", List())), CGRef(SymbolicName("Var", "x160020549"),TermAppl("s160014417", List())), CGRef(SymbolicName("Type", "x160020558"),TermAppl("s160014417", List())), CGRef(SymbolicName("Var", "x160020717"),TermAppl("s160014417", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x160019092"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x160020239"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x160020549"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Type", "x160020558"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int[exit = exit] of exit = exit)
-----------------------------------
===================================
2016-12-15T12:25:55.787+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s160068305", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Lt", List(TermAppl("Call", List(Var("x160074781"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x160074722"))))), TermAppl("Leq", List(TermAppl("Call", List(Var("x160075085"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x160073149"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s160068305", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s160068305", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x160074781"),TermAppl("s160068305", List())), CGRef(SymbolicName("Var", "x160075085"),TermAppl("s160068305", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x160074781"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x160075085"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar() < "") >= (getchar() <= ""))
-----------------------------------
===================================
2016-12-15T12:26:10.54+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s160665384", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Int", List(Var("x160674238"))), TermAppl("Minus", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x160673817"))), TermAppl("Var", List(Var("x160673321"))))), TermAppl("And", List(TermAppl("Var", List(Var("x160674175"))), TermAppl("Var", List(Var("x160671364"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s160665384", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s160665384", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x160671364"),TermAppl("s160665384", List())), CGRef(SymbolicName("Var", "x160673321"),TermAppl("s160665384", List())), CGRef(SymbolicName("Var", "x160673817"),TermAppl("s160665384", List())), CGRef(SymbolicName("Var", "x160674175"),TermAppl("s160665384", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x160671364"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x160673321"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x160673817"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x160674175"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),98 | (getchar <= getchar) - (getchar & getchar))
-----------------------------------
===================================
2016-12-15T12:26:19.52+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s161021771", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x161021991"), TermAppl("Var", List(Var("x161022150"))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s161021789", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s161021771", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161021771", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s161021789", List()),Label('P'),TermAppl("s161021771", List())), CGDecl(TermAppl("s161021789", List()),SymbolicName("Var", "x161021991")), CGRef(SymbolicName("Var", "x161022150"),TermAppl("s161021771", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x161021991"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x161022150"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
  var P := getchar
 in
end)
-----------------------------------
===================================
2016-12-15T12:26:25.08+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s161261631", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s161261649", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s161261631", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161261631", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s161261649", List()),Label('P'),TermAppl("s161261631", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:26:39.635+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x161783731")), List(TermAppl("s161782671", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("FunDec", List(Var("x161783753"), TermAppl("Nil", List()), TermAppl("Tid", List(Var("x161783778"))), TermAppl("Int", List(Var("x161783836"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161783050"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161783729"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s161782689", List()), "All")), CDistinct(Declarations(TermAppl("s161783750", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s161782671", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161782671", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s161782689", List()),Label('P'),TermAppl("s161782671", List())), CGRef(SymbolicName("Var", "x161783050"),TermAppl("s161782689", List())), CGRef(SymbolicName("Var", "x161783729"),TermAppl("s161782689", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s161783750", List()),Label('P'),TermAppl("s161782689", List())), CGDecl(TermAppl("s161782689", List()),SymbolicName("Var", "x161783753")), CGRef(SymbolicName("Type", "x161783778"),TermAppl("s161782671", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x161783753"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("INT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x161783050"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x161783729"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Type", "x161783778"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  function u() : int =
    5
 in
  concat;
  getchar
end)
-----------------------------------
===================================
2016-12-15T12:26:40.358+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x161813896")), List(TermAppl("s161809010", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x161813645"), TermAppl("Tid", List(Var("x161813912"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x161813916"), TermAppl("Tid", List(Var("x161813929"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161810865"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161813636"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161813894"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s161809028", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s161809010", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161809010", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s161809028", List()),Label('P'),TermAppl("s161809010", List())), CGRef(SymbolicName("Var", "x161810865"),TermAppl("s161809028", List())), CGRef(SymbolicName("Var", "x161813636"),TermAppl("s161809028", List())), CGDecl(TermAppl("s161809028", List()),SymbolicName("Type", "x161813645")), CGRef(SymbolicName("Var", "x161813894"),TermAppl("s161809028", List())), CGRef(SymbolicName("Type", "x161813912"),TermAppl("s161809028", List())), CGDecl(TermAppl("s161809028", List()),SymbolicName("Type", "x161813916")), CGRef(SymbolicName("Type", "x161813929"),TermAppl("s161809028", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Type", "x161813645"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x161813916"), Var("x161813931")))),Resolution(Map(Tuple2(SymbolicName("Var", "x161813894"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x161813636"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Type", "x161813912"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x161810865"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x161813929"), SymbolicName("Type", "x161813916")))),SubtypeRelation(List()),List())),let
  type p = int
  type n1 = n1
 in
  flush;
  concat;
  print
end)
-----------------------------------
===================================
2016-12-15T12:26:40.37+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s161814108", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s161814126", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s161814108", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161814108", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s161814126", List()),Label('P'),TermAppl("s161814108", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:26:40.672+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s161818974", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x161829117"))), TermAppl("Var", List(Var("x161829281"))))), TermAppl("If", List(TermAppl("Int", List(Var("x161826293"))), TermAppl("Int", List(Var("x161826845"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x161825484"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x161829463"))), TermAppl("Cons", List(TermAppl("String", List(Var("x161829643"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x161829827"))), TermAppl("Nil", List()))))))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s161818974", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s161818974", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x161825484"),TermAppl("s161818974", List())), CGRef(SymbolicName("Var", "x161829117"),TermAppl("s161818974", List())), CGRef(SymbolicName("Var", "x161829281"),TermAppl("s161818974", List())), CGRef(SymbolicName("Var", "x161829463"),TermAppl("s161818974", List())), CGRef(SymbolicName("Var", "x161829827"),TermAppl("s161818974", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x161829827"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x161829117"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x161829281"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x161825484"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x161829463"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),substring >= substring | (if 6 then
  83
else
  exit >= (
    not;
    "\560";
    exit
  )))
-----------------------------------
===================================
2016-12-15T12:26:52.955+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s162285272", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Eq", List(TermAppl("Call", List(Var("x162289534"), TermAppl("Nil", List()))), TermAppl("While", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Or", List(TermAppl("Var", List(Var("x162297859"))), TermAppl("Var", List(Var("x162300429"))))), TermAppl("Nil", List()))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x162300265"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x162299963"))), TermAppl("Cons", List(As(Var("x162300500"),TermAppl("Break", List())), TermAppl("Nil", List()))))))))))))))))), TermAppl("Call", List(Var("x162290249"), TermAppl("Cons", List(TermAppl("String", List(Var("x162294674"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s162285272", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s162285272", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s162287284", List()),Label('P'),TermAppl("s162285272", List())), CGDecl(TermAppl("s162287284", List()),ConcreteName("Loop", "", 162287288)), CGRef(SymbolicName("Var", "x162289534"),TermAppl("s162285272", List())), CGRef(SymbolicName("Var", "x162290249"),TermAppl("s162285272", List())), CGRef(SymbolicName("Var", "x162297859"),TermAppl("s162285272", List())), CGRef(SymbolicName("Var", "x162299963"),TermAppl("s162287284", List())), CGRef(SymbolicName("Var", "x162300265"),TermAppl("s162287284", List())), CGRef(SymbolicName("Var", "x162300429"),TermAppl("s162285272", List())), CGRef(SymbolicName("Loop", "n162300501"),TermAppl("s162287284", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n162300501"), ConcreteName("Loop", "", 162287288)), Tuple2(SymbolicName("Var", "x162297859"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x162289534"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x162300429"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x162300265"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x162290249"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x162299963"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),flush() = (while (
  print | print
) do
  (
    nil;
    size;
    nil;
    not;
    break
  )) | ord("\""))
-----------------------------------
===================================
2016-12-15T12:27:00.056+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s162536729", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s162536747", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s162536729", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s162536729", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s162536747", List()),Label('P'),TermAppl("s162536729", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:27:00.374+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s162543341", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x162548530"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x162546288"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x162548775"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s162543359", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s162543341", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s162543341", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s162543359", List()),Label('P'),TermAppl("s162543341", List())), CGRef(SymbolicName("Var", "x162546288"),TermAppl("s162543359", List())), CGRef(SymbolicName("Var", "x162548530"),TermAppl("s162543359", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x162546288"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x162548530"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  nil;
  not;
  2
end)
-----------------------------------
===================================
2016-12-15T12:27:18.942+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x163239796")), List(TermAppl("s163239765", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x163246253"))), TermAppl("Var", List(Var("x163245423"))))), TermAppl("Or", List(TermAppl("Var", List(Var("x163248872"))), TermAppl("Var", List(Var("x163247934"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x163250849"))), TermAppl("Var", List(Var("x163250685"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s163239765", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s163239765", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x163245423"),TermAppl("s163239765", List())), CGRef(SymbolicName("Var", "x163246253"),TermAppl("s163239765", List())), CGRef(SymbolicName("Var", "x163247934"),TermAppl("s163239765", List())), CGRef(SymbolicName("Var", "x163248872"),TermAppl("s163239765", List())), CGRef(SymbolicName("Var", "x163250685"),TermAppl("s163239765", List())), CGRef(SymbolicName("Var", "x163250849"),TermAppl("s163239765", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x163246253"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x163248872"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x163247934"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x163250685"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x163250849"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x163245423"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if chr > chr then
  ord | ord
else
  exit <> exit)
-----------------------------------
===================================
2016-12-15T12:27:34.674+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s163866490", List())), State(TermAppl("Mod", List(TermAppl("Gt", List(TermAppl("Leq", List(TermAppl("Int", List(Var("x163872294"))), TermAppl("Gt", List(TermAppl("NilExp", List()), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))), TermAppl("Int", List(Var("x163875163"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s163866490", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s163866490", List()),ConcreteName("Var", "exit", -1))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),(0 <= (nil > (
  nil
))) > 5)
-----------------------------------
===================================
2016-12-15T12:27:48.221+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x164408368")), List(TermAppl("s164408337", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Or", List(TermAppl("Var", List(Var("x164414311"))), TermAppl("Var", List(Var("x164413219"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Call", List(Var("x164413902"), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s164408519", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s164408337", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s164408337", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x164413219"),TermAppl("s164408337", List())), CGRef(SymbolicName("Var", "x164413902"),TermAppl("s164408337", List())), CGRef(SymbolicName("Var", "x164414311"),TermAppl("s164408337", List())), CGDirectEdge(TermAppl("s164408519", List()),Label('P'),TermAppl("s164408337", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x164413219"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x164413902"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x164414311"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if exit | exit then
  let
   in
  end
else
  flush())
-----------------------------------
===================================
2016-12-15T12:28:04.941+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s165084464", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Divide", List(TermAppl("Geq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x165096922"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x165094662"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x165098563"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x165099602"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x165099438"))), TermAppl("Nil", List()))))))))))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x165091802"))))), TermAppl("Geq", List(TermAppl("String", List(Var("x165087601"))), TermAppl("Call", List(Var("x165087660"), TermAppl("Cons", List(TermAppl("Int", List(Var("x165088613"))), TermAppl("Nil", List()))))))))), TermAppl("Uminus", List(TermAppl("Int", List(Var("x165089523"))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s165084464", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s165084464", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x165087660"),TermAppl("s165084464", List())), CGRef(SymbolicName("Var", "x165091802"),TermAppl("s165084464", List())), CGRef(SymbolicName("Var", "x165094662"),TermAppl("s165084464", List())), CGRef(SymbolicName("Var", "x165096922"),TermAppl("s165084464", List())), CGRef(SymbolicName("Var", "x165099438"),TermAppl("s165084464", List())), CGRef(SymbolicName("Var", "x165099602"),TermAppl("s165084464", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x165096922"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x165087660"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x165099602"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x165091802"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x165094662"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x165099438"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),((
  print;
  (
    substring;
    3;
    getchar;
    substring
  )
) >= substring) / ("\"" >= chr(95818)) - - 08)
-----------------------------------
===================================
2016-12-15T12:28:09.095+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s165270283", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x165276482"))), TermAppl("If", List(TermAppl("Int", List(Var("x165272545"))), TermAppl("Var", List(Var("x165275628"))), TermAppl("Var", List(Var("x165276124"))))))), TermAppl("Int", List(Var("x165276545"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s165270283", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s165270283", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x165275628"),TermAppl("s165270283", List())), CGRef(SymbolicName("Var", "x165276124"),TermAppl("s165270283", List())), CGRef(SymbolicName("Var", "x165276482"),TermAppl("s165270283", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x165275628"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x165276124"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x165276482"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),(ord > (if 7 then
  ord
else
  ord)) * 37)
-----------------------------------
===================================
2016-12-15T12:28:10.164+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s165316801", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x165324880"))), TermAppl("Leq", List(TermAppl("Times", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x165323877"))), TermAppl("Var", List(Var("x165323089"))))), TermAppl("Call", List(Var("x165319057"), TermAppl("Cons", List(TermAppl("String", List(Var("x165324815"))), TermAppl("Nil", List()))))))), TermAppl("Int", List(Var("x165325238"))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s165316801", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s165316801", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x165319057"),TermAppl("s165316801", List())), CGRef(SymbolicName("Var", "x165323089"),TermAppl("s165316801", List())), CGRef(SymbolicName("Var", "x165323877"),TermAppl("s165316801", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x165319057"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x165323089"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x165323877"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),8 - ((size = ord) * ord("\t\t") <= 002))
-----------------------------------
===================================
2016-12-15T12:28:25.733+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s165898743", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s165898761", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s165898743", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s165898743", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s165898761", List()),Label('P'),TermAppl("s165898743", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:28:34.595+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s166241164", List())), State(TermAppl("Mod", List(As(Var("x166241206"),TermAppl("For", List(TermAppl("Var", List(Var("x166241207"))), TermAppl("Or", List(TermAppl("Var", List(Var("x166244218"))), TermAppl("Var", List(Var("x166244382"))))), TermAppl("Int", List(Var("x166241946"))), TermAppl("Call", List(Var("x166241381"), TermAppl("Nil", List())))))))),List(CResolve(SymbolicName("Var", "x166244382"),Var("x166244383")), CTypeOf(Var("x166244383"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s166241164", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s166241164", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s166241204", List()),Label('P'),TermAppl("s166241164", List())), CGDecl(TermAppl("s166241204", List()),SymbolicName("Var", "x166241207")), CGDecl(TermAppl("s166241204", List()),SymbolicName("Loop", "n166241211")), CGRef(SymbolicName("Var", "x166241381"),TermAppl("s166241204", List())), CGRef(SymbolicName("Var", "x166244218"),TermAppl("s166241164", List())), CGRef(SymbolicName("Var", "x166244382"),TermAppl("s166241164", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x166241207"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x166241381"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x166244218"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),for U5_h := substring | substring to 68 do
  flush())
-----------------------------------
===================================
2016-12-15T12:28:43.222+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s166589991", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Plus", List(TermAppl("Uminus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x166597828"))), TermAppl("Var", List(Var("x166597664"))))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x166595027"))), TermAppl("Var", List(Var("x166595687"))))))), TermAppl("Int", List(Var("x166592579"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s166589991", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s166589991", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x166595027"),TermAppl("s166589991", List())), CGRef(SymbolicName("Var", "x166595687"),TermAppl("s166589991", List())), CGRef(SymbolicName("Var", "x166597664"),TermAppl("s166589991", List())), CGRef(SymbolicName("Var", "x166597828"),TermAppl("s166589991", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x166595027"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x166595687"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x166597664"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x166597828"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),- (getchar < getchar) + (not = not) <= 0)
-----------------------------------
===================================
2016-12-15T12:28:45.557+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s166695467", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s166695485", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s166695467", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s166695467", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s166695485", List()),Label('P'),TermAppl("s166695467", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T12:28:46.174+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s166716266", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x166719494"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x166719330"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x166718912"))))))),List(CDistinct(Declarations(TermAppl("s166716448", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s166716266", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s166716266", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s166716448", List()),Label('P'),TermAppl("s166716266", List())), CGRef(SymbolicName("Var", "x166718912"),TermAppl("s166716266", List())), CGRef(SymbolicName("Var", "x166719330"),TermAppl("s166716448", List())), CGRef(SymbolicName("Var", "x166719494"),TermAppl("s166716448", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x166718912"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x166719330"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x166719494"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
 in
  substring;
  size
end & ord)
-----------------------------------
===================================
2016-12-15T12:28:56.719+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x167067312")), List(TermAppl("s167066585", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x167066946"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x167067128"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x167067310"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s167066603", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s167066585", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s167066585", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s167066603", List()),Label('P'),TermAppl("s167066585", List())), CGRef(SymbolicName("Var", "x167066946"),TermAppl("s167066603", List())), CGRef(SymbolicName("Var", "x167067128"),TermAppl("s167066603", List())), CGRef(SymbolicName("Var", "x167067310"),TermAppl("s167066603", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x167066946"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x167067128"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x167067310"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  print;
  not
end)
-----------------------------------
===================================
2016-12-15T12:28:57.175+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s167084304", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x167087630"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x167087976"))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))), TermAppl("Call", List(Var("x167085121"), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s167084486", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s167084304", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s167084304", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s167084486", List()),Label('P'),TermAppl("s167084304", List())), CGRef(SymbolicName("Var", "x167085121"),TermAppl("s167084304", List())), CGRef(SymbolicName("Var", "x167087630"),TermAppl("s167084486", List())), CGRef(SymbolicName("Var", "x167087976"),TermAppl("s167084486", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x167085121"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x167087630"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x167087976"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),if let
 in
  nil;
  not < (
    not
  )
end then
  flush())
-----------------------------------
===================================
2016-12-15T12:29:07.452+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s167425826", List())), State(TermAppl("Mod", List(As(Var("x167425868"),TermAppl("For", List(TermAppl("Var", List(Var("x167425869"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x167430865"))), TermAppl("Var", List(Var("x167431519"))))), TermAppl("Uminus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x167433332"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x167433678"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x167438688"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x167438852"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x167439034"))), TermAppl("Nil", List()))))))))))))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List())))))))),List(CDistinct(Declarations(TermAppl("s167426529", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s167425826", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s167425826", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s167425866", List()),Label('P'),TermAppl("s167425826", List())), CGDecl(TermAppl("s167425866", List()),SymbolicName("Var", "x167425869")), CGDecl(TermAppl("s167425866", List()),SymbolicName("Loop", "n167425873")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s167426529", List()),Label('P'),TermAppl("s167425866", List())), CGRef(SymbolicName("Var", "x167430865"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167431519"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167433332"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167433678"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167438688"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167438852"),TermAppl("s167425826", List())), CGRef(SymbolicName("Var", "x167439034"),TermAppl("s167425826", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x167425869"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x167438688"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x167439034"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x167438852"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x167430865"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x167433332"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x167433678"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x167431519"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),for B_rw := size <> size to - (getchar = (
  chr;
  nil;
  size;
  ord;
  getchar
)) do
  let
   in
  end)
-----------------------------------
===================================
2016-12-15T14:42:51.954+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s101", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Or", List(TermAppl("Var", List(Var("x4128"))), TermAppl("Var", List(Var("x3492"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s101", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3492"),TermAppl("s101", List())), CGRef(SymbolicName("Var", "x4128"),TermAppl("s101", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3492"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x4128"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:43:23.753+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s574694", List())), State(TermAppl("Mod", List(TermAppl("Or", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x578367"), TermAppl("Var", List(Var("x578526"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x578708"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x578344"))))))),List(CDistinct(Declarations(TermAppl("s574876", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s574694", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s574694", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s574876", List()),Label('P'),TermAppl("s574694", List())), CGRef(SymbolicName("Var", "x578344"),TermAppl("s574694", List())), CGDecl(TermAppl("s574876", List()),SymbolicName("Var", "x578367")), CGRef(SymbolicName("Var", "x578526"),TermAppl("s574694", List())), CGRef(SymbolicName("Var", "x578708"),TermAppl("s574876", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x578367"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x578344"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x578526"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x578708"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:43:26.414+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s641205", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Call", List(Var("x642152"), TermAppl("Cons", List(TermAppl("Int", List(Var("x642336"))), TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x641422"), TermAppl("Cons", List(TermAppl("String", List(Var("x642093"))), TermAppl("Nil", List()))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s641205", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s641205", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s641240", List()),Label('P'),TermAppl("s641205", List())), CGDecl(TermAppl("s641240", List()),ConcreteName("Loop", "", 641244)), CGRef(SymbolicName("Var", "x641422"),TermAppl("s641240", List())), CGRef(SymbolicName("Var", "x642152"),TermAppl("s641205", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x641422"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x642152"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:43:48.082+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s1197932", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("FunDecs", List(TermAppl("Conss", List(TermAppl("FunDec", List(Var("x1198157"), TermAppl("Nil", List()), TermAppl("Tid", List(Var("x1198174"))), TermAppl("Call", List(Var("x1198289"), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x1198229"), TermAppl("Var", List(Var("x1198795"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s1197950", List()), "All")), CDistinct(Declarations(TermAppl("s1198105", List()), "All")), CDistinct(Declarations(TermAppl("s1198154", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1197932", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1197932", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s1198105", List()),Label('P'),TermAppl("s1197932", List())), NewScope(Var("s_fun")), CGDirectEdge(TermAppl("s1198154", List()),Label('P'),TermAppl("s1198105", List())), CGDecl(TermAppl("s1198105", List()),SymbolicName("Var", "x1198157")), CGRef(SymbolicName("Type", "x1198174"),TermAppl("s1197932", List())), CGDirectEdge(TermAppl("s1197950", List()),Label('P'),TermAppl("s1198105", List())), CGDecl(TermAppl("s1197950", List()),SymbolicName("Var", "x1198229")), CGRef(SymbolicName("Var", "x1198289"),TermAppl("s1198154", List())), CGRef(SymbolicName("Var", "x1198795"),TermAppl("s1198105", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x1198157"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("INT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x1198229"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x1198174"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x1198289"), SymbolicName("Var", "x1198157")), Tuple2(SymbolicName("Var", "x1198795"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:43:52.744+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s1322041", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Divide", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x1334058"))), TermAppl("If", List(TermAppl("Eq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Var", List(Var("x1342870"))), TermAppl("Var", List(Var("x1336606"))))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x1342374"))), TermAppl("Var", List(Var("x1339507"))))))), TermAppl("And", List(TermAppl("Int", List(Var("x1328488"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x1341740"))), TermAppl("Var", List(Var("x1345207"))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1322041", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1322041", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1334058"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1336606"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1339507"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1341740"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1342374"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1342870"),TermAppl("s1322041", List())), CGRef(SymbolicName("Var", "x1345207"),TermAppl("s1322041", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1341740"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x1336606"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x1339507"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x1334058"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x1342870"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x1342374"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x1345207"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:44:08.645+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x1772945")), List(TermAppl("s1772914", List())), State(TermAppl("Mod", List(TermAppl("If", List(TermAppl("Int", List(Var("x1778416"))), TermAppl("Var", List(Var("x1778819"))), TermAppl("If", List(TermAppl("Int", List(Var("x1777286"))), TermAppl("Var", List(Var("x1777223"))), TermAppl("Var", List(Var("x1778353"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s1772914", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1772914", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x1777223"),TermAppl("s1772914", List())), CGRef(SymbolicName("Var", "x1778353"),TermAppl("s1772914", List())), CGRef(SymbolicName("Var", "x1778819"),TermAppl("s1772914", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1777223"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x1778353"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x1778819"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),)
-----------------------------------
===================================
2016-12-15T14:46:25.013+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s240751", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s240769", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s240751", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s240751", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s240769", List()),Label('P'),TermAppl("s240751", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:46:36.743+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x447358")), List(TermAppl("s446565", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x447079"), TermAppl("Tid", List(Var("x447374"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x447378"), TermAppl("Tid", List(Var("x447412"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x447032"), TermAppl("Tid", List(Var("x447049"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x447382"), TermAppl("Tid", List(Var("x447425"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x447386"), TermAppl("Tid", List(Var("x447399"))))), TermAppl("Nil", List()))))))))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x447015"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x447356"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s446583", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s446565", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s446565", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s446583", List()),Label('P'),TermAppl("s446565", List())), CGRef(SymbolicName("Var", "x447015"),TermAppl("s446583", List())), CGDecl(TermAppl("s446583", List()),SymbolicName("Type", "x447032")), CGRef(SymbolicName("Type", "x447049"),TermAppl("s446583", List())), CGDecl(TermAppl("s446583", List()),SymbolicName("Type", "x447079")), CGRef(SymbolicName("Var", "x447356"),TermAppl("s446583", List())), CGRef(SymbolicName("Type", "x447374"),TermAppl("s446583", List())), CGDecl(TermAppl("s446583", List()),SymbolicName("Type", "x447378")), CGDecl(TermAppl("s446583", List()),SymbolicName("Type", "x447382")), CGDecl(TermAppl("s446583", List()),SymbolicName("Type", "x447386")), CGRef(SymbolicName("Type", "x447399"),TermAppl("s446583", List())), CGRef(SymbolicName("Type", "x447412"),TermAppl("s446583", List())), CGRef(SymbolicName("Type", "x447425"),TermAppl("s446583", List()))),TypeEnv(Map(Binding(SymbolicName("Type", "x447378"), TermAppl("INT", List())), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x447079"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x447032"), TermAppl("STRING", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x447386"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x447382"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x447412"), SymbolicName("Type", "x447079")), Tuple2(SymbolicName("Type", "x447425"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x447356"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x447015"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Type", "x447374"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x447399"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x447049"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type n1 = int
  type m = n1
  type fo = string
  type y = string
  type S_ = int
 in
  print;
  exit
end)
-----------------------------------
===================================
2016-12-15T14:46:44.404+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s606719", List())), State(TermAppl("Mod", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x610369"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x610435"), TermAppl("Tid", List(Var("x610866"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x611098"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x611115"))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x611089"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x610848"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s606901", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s606719", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s606719", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s606901", List()),Label('P'),TermAppl("s606719", List())), CGRef(SymbolicName("Var", "x610369"),TermAppl("s606719", List())), CGDecl(TermAppl("s606901", List()),SymbolicName("Type", "x610435")), CGRef(SymbolicName("Var", "x610848"),TermAppl("s606901", List())), CGRef(SymbolicName("Type", "x610866"),TermAppl("s606901", List())), CGRef(SymbolicName("Var", "x611089"),TermAppl("s606901", List())), CGDecl(TermAppl("s606901", List()),SymbolicName("Type", "x611098")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x611115"),TermAppl("s606901", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x611098"), TermAppl("ARRAY", List(TermAppl("ARRAY", List(Var("x611117"), TermAppl("s611101", List()))), TermAppl("s611101", List())))), Binding(SymbolicName("Type", "x610435"), Var("x610868")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x611115"), SymbolicName("Type", "x611098")), Tuple2(SymbolicName("Type", "x610866"), SymbolicName("Type", "x610435")), Tuple2(SymbolicName("Var", "x610369"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x611089"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x610848"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not >= let
  type n1 = n1
  type n2 = array of n2
 in
  ord;
  not
end)
-----------------------------------
===================================
2016-12-15T14:47:16.455+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("STRING", List())), List(TermAppl("s1371188", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373645"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1373809"))), TermAppl("Cons", List(TermAppl("String", List(Var("x1373989"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1374173"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x1374355"))), TermAppl("Cons", List(TermAppl("String", List(Var("x1374535"))), TermAppl("Nil", List()))))))))))))))))),List(CDistinct(Declarations(TermAppl("s1371206", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1371188", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1371188", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1371206", List()),Label('P'),TermAppl("s1371188", List())), CGRef(SymbolicName("Var", "x1373645"),TermAppl("s1371206", List())), CGRef(SymbolicName("Var", "x1373809"),TermAppl("s1371206", List())), CGRef(SymbolicName("Var", "x1374173"),TermAppl("s1371206", List())), CGRef(SymbolicName("Var", "x1374355"),TermAppl("s1371206", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1373645"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x1373809"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x1374173"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x1374355"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  chr;
  "\\";
  flush;
  getchar;
  ">\""
end)
-----------------------------------
===================================
2016-12-15T14:47:35.332+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s1741276", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x1741478"), TermAppl("Var", List(Var("x1741637"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s1741294", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s1741276", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s1741276", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s1741294", List()),Label('P'),TermAppl("s1741276", List())), CGDecl(TermAppl("s1741294", List()),SymbolicName("Var", "x1741478")), CGRef(SymbolicName("Var", "x1741637"),TermAppl("s1741276", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x1741478"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x1741637"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  var Y_K := ord
 in
  nil
end)
-----------------------------------
===================================
2016-12-15T14:48:10.921+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s2359152", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s2359170", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2359152", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2359152", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s2359170", List()),Label('P'),TermAppl("s2359152", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:48:30.346+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s2708885", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Minus", List(TermAppl("And", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x2719215"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2719379"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2719561"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2720731"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x2720794"))), TermAppl("Nil", List()))))))))))))), TermAppl("Int", List(Var("x2716436"))))), TermAppl("Int", List(Var("x2714387"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x2713494"))), TermAppl("Var", List(Var("x2714324"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s2708885", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2708885", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x2713494"),TermAppl("s2708885", List())), CGRef(SymbolicName("Var", "x2714324"),TermAppl("s2708885", List())), CGRef(SymbolicName("Var", "x2719215"),TermAppl("s2708885", List())), CGRef(SymbolicName("Var", "x2719379"),TermAppl("s2708885", List())), CGRef(SymbolicName("Var", "x2719561"),TermAppl("s2708885", List())), CGRef(SymbolicName("Var", "x2720731"),TermAppl("s2708885", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2719379"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x2719561"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x2719215"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x2714324"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2713494"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2720731"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),(((
  flush;
  ord;
  flush;
  flush;
  8
) & 5) - 0) * (getchar <= getchar))
-----------------------------------
===================================
2016-12-15T14:48:33.904+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x2787342")), List(TermAppl("s2780891", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x2784579"), TermAppl("Tid", List(Var("x2789634"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x2784557"), TermAppl("Int", List(Var("x2789692"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2782820"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2784534"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2789616"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x2787340"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s2780909", List()), "All")), CDistinct(Declarations(TermAppl("s2781071", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s2780891", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s2780891", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s2781071", List()),Label('P'),TermAppl("s2780891", List())), CGDirectEdge(TermAppl("s2780909", List()),Label('P'),TermAppl("s2781071", List())), CGRef(SymbolicName("Var", "x2782820"),TermAppl("s2780909", List())), CGRef(SymbolicName("Var", "x2784534"),TermAppl("s2780909", List())), CGDecl(TermAppl("s2780909", List()),SymbolicName("Var", "x2784557")), CGDecl(TermAppl("s2781071", List()),SymbolicName("Type", "x2784579")), CGRef(SymbolicName("Var", "x2787340"),TermAppl("s2780909", List())), CGRef(SymbolicName("Var", "x2789616"),TermAppl("s2780909", List())), CGRef(SymbolicName("Type", "x2789634"),TermAppl("s2781071", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x2784557"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x2784579"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x2784534"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x2782820"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x2789634"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x2787340"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x2789616"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  type h = int
  var p := 4
 in
  ord;
  flush;
  ord;
  getchar
end)
-----------------------------------
===================================
2016-12-15T14:48:47.32+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x3058152")), List(TermAppl("s3050355", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x3055544"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3057968"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3053302"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3057804"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3058150"))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s3050373", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3050355", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3050355", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3050373", List()),Label('P'),TermAppl("s3050355", List())), CGRef(SymbolicName("Var", "x3053302"),TermAppl("s3050373", List())), CGRef(SymbolicName("Var", "x3055544"),TermAppl("s3050373", List())), CGRef(SymbolicName("Var", "x3057804"),TermAppl("s3050373", List())), CGRef(SymbolicName("Var", "x3057968"),TermAppl("s3050373", List())), CGRef(SymbolicName("Var", "x3058150"),TermAppl("s3050373", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3053302"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x3057804"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3058150"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x3057968"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x3055544"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  not;
  not;
  chr;
  substring
end)
-----------------------------------
===================================
2016-12-15T14:48:52.853+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s3190372", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x3190574"), TermAppl("Var", List(Var("x3191223"))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x3191429"), TermAppl("Var", List(Var("x3191588"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3190390", List()), "All")), CDistinct(Declarations(TermAppl("s3190552", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3190372", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3190372", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s3190552", List()),Label('P'),TermAppl("s3190372", List())), CGDecl(TermAppl("s3190552", List()),SymbolicName("Var", "x3190574")), CGRef(SymbolicName("Var", "x3191223"),TermAppl("s3190372", List())), CGDirectEdge(TermAppl("s3190390", List()),Label('P'),TermAppl("s3190552", List())), CGDecl(TermAppl("s3190390", List()),SymbolicName("Var", "x3191429")), CGRef(SymbolicName("Var", "x3191588"),TermAppl("s3190552", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3190574"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3191429"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3191223"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x3191588"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),let
  var aw_ := chr
  var n15 := flush
 in
  nil
end)
-----------------------------------
===================================
2016-12-15T14:49:01.102+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3352833", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Int", List(Var("x3358619"))), TermAppl("Eq", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x3363189"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x3363509"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x3360284"))))), TermAppl("Lt", List(TermAppl("Var", List(Var("x3362261"))), TermAppl("Var", List(Var("x3363673"))))))))))),List(CResolve(SymbolicName("Var", "x3363673"),Var("x3363674")), CTypeOf(Var("x3363674"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s3352833", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3352833", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3360284"),TermAppl("s3352833", List())), CGRef(SymbolicName("Var", "x3362261"),TermAppl("s3352833", List())), CGRef(SymbolicName("Var", "x3363189"),TermAppl("s3352833", List())), CGRef(SymbolicName("Var", "x3363509"),TermAppl("s3352833", List())), CGRef(SymbolicName("Var", "x3363673"),TermAppl("s3352833", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3360284"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x3362261"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x3363189"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x3363509"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),32 <> (((
  concat;
  substring
) > substring) = (ord < ord)))
-----------------------------------
===================================
2016-12-15T14:49:14.786+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3652467", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("If", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Var", List(Var("x3660429"))), TermAppl("If", List(TermAppl("Int", List(Var("x3664713"))), TermAppl("Var", List(Var("x3664274"))), TermAppl("Var", List(Var("x3663916"))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x3664650"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s3660451", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3652467", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3652467", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x3660429"),TermAppl("s3652467", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3660451", List()),Label('P'),TermAppl("s3652467", List())), CGRef(SymbolicName("Var", "x3663916"),TermAppl("s3652467", List())), CGRef(SymbolicName("Var", "x3664274"),TermAppl("s3652467", List())), CGRef(SymbolicName("Var", "x3664650"),TermAppl("s3660451", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3660429"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x3663916"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x3664274"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x3664650"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(if nil <= nil then
  getchar
else
  if 292 then
    getchar
  else
    getchar) = let
 in
  nil;
  getchar
end)
-----------------------------------
===================================
2016-12-15T14:49:27.967+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s3916200", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x3918723"), TermAppl("Var", List(Var("x3919698"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x3919534"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x3918700"))))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s3916218", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s3916200", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s3916200", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s3916218", List()),Label('P'),TermAppl("s3916200", List())), CGRef(SymbolicName("Var", "x3918700"),TermAppl("s3916218", List())), CGDecl(TermAppl("s3916218", List()),SymbolicName("Var", "x3918723")), CGRef(SymbolicName("Var", "x3919534"),TermAppl("s3916218", List())), CGRef(SymbolicName("Var", "x3919698"),TermAppl("s3916200", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x3918723"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x3918700"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x3919534"), SymbolicName("Var", "x3918723")), Tuple2(SymbolicName("Var", "x3919698"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
  var n1 := concat
 in
  (
    n1
  ) > concat
end)
-----------------------------------
===================================
2016-12-15T14:49:40.234+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s4180120", List())), State(TermAppl("Mod", List(TermAppl("Neq", List(TermAppl("Plus", List(TermAppl("Eq", List(TermAppl("Var", List(Var("x4184714"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x4186720"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4187648"))), TermAppl("Nil", List()))))))))), TermAppl("Uminus", List(TermAppl("Uminus", List(TermAppl("Int", List(Var("x4188069"))))))))), TermAppl("Gt", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x4190679"), TermAppl("Var", List(Var("x4191310"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4191474"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4192420"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x4192584"))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x4190455"))))))))),List(CDistinct(Declarations(TermAppl("s4190477", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s4180120", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4180120", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4184714"),TermAppl("s4180120", List())), CGRef(SymbolicName("Var", "x4186720"),TermAppl("s4180120", List())), CGRef(SymbolicName("Var", "x4187648"),TermAppl("s4180120", List())), CGRef(SymbolicName("Var", "x4190455"),TermAppl("s4180120", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s4190477", List()),Label('P'),TermAppl("s4180120", List())), CGDecl(TermAppl("s4190477", List()),SymbolicName("Var", "x4190679")), CGRef(SymbolicName("Var", "x4191310"),TermAppl("s4180120", List())), CGRef(SymbolicName("Var", "x4191474"),TermAppl("s4190477", List())), CGRef(SymbolicName("Var", "x4192420"),TermAppl("s4190477", List())), CGRef(SymbolicName("Var", "x4192584"),TermAppl("s4190477", List()))),TypeEnv(Map(Binding(SymbolicName("Var", "x4190679"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4186720"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4192584"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x4184714"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4187648"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4191310"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x4191474"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x4190455"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x4192420"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),(not = (
  not;
  not
)) + - - 79363 <> (let
  var o := chr
 in
  not;
  substring;
  ord
end > ord))
-----------------------------------
===================================
2016-12-15T14:50:00.605+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s4620519", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Neq", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x4629150"))), TermAppl("Var", List(Var("x4628684"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x4627003"))), TermAppl("Var", List(Var("x4626173"))))))), TermAppl("Int", List(Var("x4628747"))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s4620519", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s4620519", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x4626173"),TermAppl("s4620519", List())), CGRef(SymbolicName("Var", "x4627003"),TermAppl("s4620519", List())), CGRef(SymbolicName("Var", "x4628684"),TermAppl("s4620519", List())), CGRef(SymbolicName("Var", "x4629150"),TermAppl("s4620519", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x4626173"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x4627003"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x4628684"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x4629150"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),((chr > chr) <> (print > print)) / 3)
-----------------------------------
===================================
2016-12-15T14:50:42.523+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s5771155", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s5771173", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5771155", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5771155", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s5771173", List()),Label('P'),TermAppl("s5771155", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:50:43.661+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s5811615", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x5813697"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s5811633", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s5811615", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s5811615", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s5811633", List()),Label('P'),TermAppl("s5811615", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  3;
  (
  )
end)
-----------------------------------
===================================
2016-12-15T14:50:56.054+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6238175")), List(TermAppl("s6238165", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x6242411"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x6242402"))), TermAppl("Var", List(Var("x6244695"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x6243975"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x6244859"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6245041"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6245223"))), TermAppl("Nil", List()))))))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s6238165", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6238165", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6242402"),TermAppl("s6238165", List())), CGRef(SymbolicName("Type", "x6242411"),TermAppl("s6238165", List())), CGRef(SymbolicName("Var", "x6243975"),TermAppl("s6238165", List())), CGRef(SymbolicName("Var", "x6244695"),TermAppl("s6238165", List())), CGRef(SymbolicName("Var", "x6244859"),TermAppl("s6238165", List())), CGRef(SymbolicName("Var", "x6245041"),TermAppl("s6238165", List())), CGRef(SymbolicName("Var", "x6245223"),TermAppl("s6238165", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6244859"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x6244695"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x6242402"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x6245041"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x6245223"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x6243975"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x6242411"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int[not >= not] of flush > (
  chr;
  chr;
  flush
))
-----------------------------------
===================================
2016-12-15T14:51:01.14+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x6386615")), List(TermAppl("s6381988", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x6384445"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6384609"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6386449"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x6386613"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s6382006", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s6381988", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6381988", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s6382006", List()),Label('P'),TermAppl("s6381988", List())), CGRef(SymbolicName("Var", "x6384445"),TermAppl("s6382006", List())), CGRef(SymbolicName("Var", "x6384609"),TermAppl("s6382006", List())), CGRef(SymbolicName("Var", "x6386449"),TermAppl("s6382006", List())), CGRef(SymbolicName("Var", "x6386613"),TermAppl("s6382006", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6384445"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x6384609"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x6386449"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x6386613"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  ord;
  print;
  flush;
  exit
end)
-----------------------------------
===================================
2016-12-15T14:51:16.677+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s6862886", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Int", List(Var("x6867217"))), TermAppl("Or", List(TermAppl("Call", List(Var("x6868065"), TermAppl("Cons", List(TermAppl("String", List(Var("x6868348"))), TermAppl("Nil", List()))))), TermAppl("Or", List(TermAppl("Var", List(Var("x6867154"))), TermAppl("Var", List(Var("x6868008"))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s6862886", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s6862886", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x6867154"),TermAppl("s6862886", List())), CGRef(SymbolicName("Var", "x6868008"),TermAppl("s6862886", List())), CGRef(SymbolicName("Var", "x6868065"),TermAppl("s6862886", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x6867154"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x6868008"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x6868065"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),34 * (size("\\") | (print | print)))
-----------------------------------
===================================
2016-12-15T14:51:25.231+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s7107008", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Minus", List(TermAppl("Call", List(Var("x7117248"), TermAppl("Cons", List(TermAppl("Int", List(Var("x7119121"))), TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x7112155"), TermAppl("Cons", List(TermAppl("String", List(Var("x7118642"))), TermAppl("Nil", List()))))))), TermAppl("Plus", List(TermAppl("Uminus", List(TermAppl("Uminus", List(TermAppl("Neq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x7113836"))), TermAppl("Var", List(Var("x7111602"))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List())), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s7107008", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7107008", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x7111602"),TermAppl("s7107008", List())), CGRef(SymbolicName("Var", "x7112155"),TermAppl("s7107008", List())), CGRef(SymbolicName("Var", "x7113836"),TermAppl("s7107008", List())), CGRef(SymbolicName("Var", "x7117248"),TermAppl("s7107008", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x7111602"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x7112155"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x7113836"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x7117248"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),not(7317) - ord("") <= - - (nil <> nil) + (size <= size))
-----------------------------------
===================================
2016-12-15T14:51:40.826+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("NIL", List())), List(TermAppl("s7451427", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s7451445", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s7451427", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7451427", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s7451445", List()),Label('P'),TermAppl("s7451427", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  nil;
  nil
end)
-----------------------------------
===================================
2016-12-15T14:51:46.455+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s7587599", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s7587617", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s7587599", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7587599", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s7587617", List()),Label('P'),TermAppl("s7587599", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:51:56.785+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s7852007", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s7852025", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s7852007", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s7852007", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s7852025", List()),Label('P'),TermAppl("s7852007", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:52:12.748+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x8136330")), List(TermAppl("s8134473", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x8136351"), TermAppl("Var", List(Var("x8136510"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x8136328"))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s8134491", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s8134473", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s8134473", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s8134491", List()),Label('P'),TermAppl("s8134473", List())), CGRef(SymbolicName("Var", "x8136328"),TermAppl("s8134491", List())), CGDecl(TermAppl("s8134491", List()),SymbolicName("Var", "x8136351")), CGRef(SymbolicName("Var", "x8136510"),TermAppl("s8134473", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x8136351"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x8136328"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x8136510"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),let
  var A := substring
 in
  getchar
end)
-----------------------------------
===================================
2016-12-15T14:52:55.173+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s9402272", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("Call", List(Var("x9408059"), TermAppl("Cons", List(TermAppl("Int", List(Var("x9415544"))), TermAppl("Nil", List()))))), As(Var("x9402478"),TermAppl("For", List(TermAppl("Var", List(Var("x9402479"))), TermAppl("Lt", List(TermAppl("Var", List(Var("x9415462"))), TermAppl("Var", List(Var("x9415030"))))), TermAppl("Uminus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x9413217"))), TermAppl("Var", List(Var("x9412581"))))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List())))))))))),List(CDistinct(Declarations(TermAppl("s9405635", List()), "All")), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s9402272", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9402272", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s9402476", List()),Label('P'),TermAppl("s9402272", List())), CGDecl(TermAppl("s9402476", List()),SymbolicName("Var", "x9402479")), CGDecl(TermAppl("s9402476", List()),SymbolicName("Loop", "n9402483")), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x9408059"),TermAppl("s9402272", List())), CGRef(SymbolicName("Var", "x9412581"),TermAppl("s9402272", List())), CGRef(SymbolicName("Var", "x9413217"),TermAppl("s9402272", List())), CGRef(SymbolicName("Var", "x9415030"),TermAppl("s9402272", List())), CGRef(SymbolicName("Var", "x9415462"),TermAppl("s9402272", List())), CGDirectEdge(TermAppl("s9405635", List()),Label('P'),TermAppl("s9402476", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x9402479"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9415030"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x9412581"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x9413217"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x9408059"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x9415462"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),exit(355) = (for F := flush < flush to - (print < print) do
  let
   in
  end))
-----------------------------------
===================================
2016-12-15T14:53:16.194+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s9914448", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Eq", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x9917326"))), TermAppl("Nil", List()))))), TermAppl("Var", List(Var("x9917125"))))), TermAppl("Seq", List(TermAppl("Nil", List()))))))),List(CResolve(SymbolicName("Var", "x9917326"),Var("x9917327")), CDistinct(Declarations(TermAppl("s9915170", List()), "All")), CTypeOf(Var("x9917327"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s9914448", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s9914448", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s9914483", List()),Label('P'),TermAppl("s9914448", List())), CGDecl(TermAppl("s9914483", List()),ConcreteName("Loop", "", 9914487)), NewScope(Var("s_body")), CGRef(SymbolicName("Var", "x9917125"),TermAppl("s9914448", List())), CGDirectEdge(TermAppl("s9915170", List()),Label('P'),TermAppl("s9914448", List())), CGRef(SymbolicName("Var", "x9917326"),TermAppl("s9915170", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x9917125"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),while let
 in
  chr
end = chr do
  (
  ))
-----------------------------------
===================================
2016-12-15T14:53:46.424+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x10763391")), List(TermAppl("s10763381", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x10763958"))), TermAppl("And", List(TermAppl("String", List(Var("x10767236"))), TermAppl("String", List(Var("x10766154"))))), TermAppl("Int", List(Var("x10766833"))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s10763381", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10763381", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x10763958"),TermAppl("s10763381", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x10763958"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),int["" & "\	\"] of 92)
-----------------------------------
===================================
2016-12-15T14:53:46.6+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s10774046", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s10774064", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s10774046", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s10774046", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s10774064", List()),Label('P'),TermAppl("s10774046", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:53:55.819+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s11011233", List())), State(TermAppl("Mod", List(TermAppl("Eq", List(TermAppl("IfThen", List(TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x11018833"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x11020573"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x11021515"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x11016778"))))), TermAppl("Call", List(Var("x11020630"), TermAppl("Cons", List(TermAppl("Int", List(Var("x11021225"))), TermAppl("Nil", List()))))))), TermAppl("Seq", List(TermAppl("Nil", List()))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s11011233", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11011233", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11016778"),TermAppl("s11011233", List())), CGRef(SymbolicName("Var", "x11018833"),TermAppl("s11011233", List())), CGRef(SymbolicName("Var", "x11020573"),TermAppl("s11011233", List())), CGRef(SymbolicName("Var", "x11020630"),TermAppl("s11011233", List())), CGRef(SymbolicName("Var", "x11021515"),TermAppl("s11011233", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11020573"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x11018833"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x11016778"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x11021515"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x11020630"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),if (
  concat;
  not;
  (
    exit
  )
) > exit then
  exit(8991) = (
))
-----------------------------------
===================================
2016-12-15T14:54:29.788+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s11871494", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x11879454"))), TermAppl("If", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x11880360"))), TermAppl("Var", List(Var("x11877486"))))), TermAppl("Var", List(Var("x11879894"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x11880542"))), TermAppl("Nil", List()))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s11871494", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s11871494", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x11877486"),TermAppl("s11871494", List())), CGRef(SymbolicName("Var", "x11879454"),TermAppl("s11871494", List())), CGRef(SymbolicName("Var", "x11879894"),TermAppl("s11871494", List())), CGRef(SymbolicName("Var", "x11880360"),TermAppl("s11871494", List())), CGRef(SymbolicName("Var", "x11880542"),TermAppl("s11871494", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x11880542"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x11880360"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x11879894"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x11879454"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x11877486"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),size <= (if getchar < getchar then
  size
else
  (
    size
  )))
-----------------------------------
===================================
2016-12-15T14:54:48.564+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s12398758", List())), State(TermAppl("Mod", List(TermAppl("Assign", List(TermAppl("Var", List(Var("x12399205"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x12401368"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x12401204"))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List()))),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s12398758", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s12398758", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x12399205"),TermAppl("s12398758", List())), CGRef(SymbolicName("Var", "x12401204"),TermAppl("s12398758", List())), CGRef(SymbolicName("Var", "x12401368"),TermAppl("s12398758", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x12399205"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x12401204"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x12401368"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),exit := (
  concat;
  exit
))
-----------------------------------
===================================
2016-12-15T14:55:30.266+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s13585336", List())), State(TermAppl("Mod", List(TermAppl("Times", List(TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x13593936"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x13593772"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x13594718"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x13597928"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x13596996"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))))))))), TermAppl("Leq", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s13585336", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s13585336", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x13593772"),TermAppl("s13585336", List())), CGRef(SymbolicName("Var", "x13593936"),TermAppl("s13585336", List())), CGRef(SymbolicName("Var", "x13594718"),TermAppl("s13585336", List())), CGRef(SymbolicName("Var", "x13596996"),TermAppl("s13585336", List())), CGRef(SymbolicName("Var", "x13597928"),TermAppl("s13585336", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x13594718"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x13593772"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x13593936"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x13596996"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x13597928"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),(nil <= (
  getchar;
  size;
  (
    chr;
    (
      not;
      substring;
      nil
    )
  )
)) * (nil <= nil))
-----------------------------------
===================================
2016-12-15T14:55:45.716+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14097965")), List(TermAppl("s14081010", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x14085072"), TermAppl("Var", List(Var("x14086175"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14085013"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14083355"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14088907"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14091149"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14098127"))), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x14096141"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14097963"))), TermAppl("Nil", List()))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s14081028", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s14081010", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14081010", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s14081028", List()),Label('P'),TermAppl("s14081010", List())), CGRef(SymbolicName("Var", "x14083355"),TermAppl("s14081028", List())), CGRef(SymbolicName("Var", "x14085013"),TermAppl("s14081028", List())), CGDecl(TermAppl("s14081028", List()),SymbolicName("Var", "x14085072")), CGRef(SymbolicName("Var", "x14086175"),TermAppl("s14081010", List())), CGRef(SymbolicName("Var", "x14088907"),TermAppl("s14081028", List())), CGRef(SymbolicName("Var", "x14091149"),TermAppl("s14081028", List())), CGRef(SymbolicName("Var", "x14096141"),TermAppl("s14081028", List())), CGRef(SymbolicName("Var", "x14097963"),TermAppl("s14081028", List())), CGRef(SymbolicName("Var", "x14098127"),TermAppl("s14081028", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x14085072"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x14098127"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x14088907"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x14091149"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x14085013"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x14096141"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x14083355"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x14086175"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x14097963"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
  var z_r1 := ord
 in
  exit;
  size;
  print;
  concat;
  ord;
  nil;
  concat;
  chr
end)
-----------------------------------
===================================
2016-12-15T14:55:54.123+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x14385061")), List(TermAppl("s14379996", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x14382453"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x14384376"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x14385059"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s14380014", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s14379996", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14379996", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s14380014", List()),Label('P'),TermAppl("s14379996", List())), CGRef(SymbolicName("Var", "x14382453"),TermAppl("s14380014", List())), CGRef(SymbolicName("Var", "x14385059"),TermAppl("s14380014", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14382453"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x14385059"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  size;
  0;
  not
end)
-----------------------------------
===================================
2016-12-15T14:55:55.372+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s14422102", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Leq", List(TermAppl("Var", List(Var("x14424604"))), TermAppl("Var", List(Var("x14424768"))))), TermAppl("Call", List(Var("x14422319"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14422102", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14422102", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s14422137", List()),Label('P'),TermAppl("s14422102", List())), CGDecl(TermAppl("s14422137", List()),ConcreteName("Loop", "", 14422141)), CGRef(SymbolicName("Var", "x14422319"),TermAppl("s14422137", List())), CGRef(SymbolicName("Var", "x14424604"),TermAppl("s14422102", List())), CGRef(SymbolicName("Var", "x14424768"),TermAppl("s14422102", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x14422319"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x14424604"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x14424768"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),while size <= ord do
  flush())
-----------------------------------
===================================
2016-12-15T14:56:00.145+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s14555371", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s14555389", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s14555371", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14555371", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s14555389", List()),Label('P'),TermAppl("s14555371", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:56:04.246+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s14659479", List())), State(TermAppl("Mod", List(As(Var("x14659521"),TermAppl("For", List(TermAppl("Var", List(Var("x14659522"))), TermAppl("Or", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Int", List(Var("x14660612"))), As(Var("x14659692"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s14659479", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s14659479", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s14659519", List()),Label('P'),TermAppl("s14659479", List())), CGDecl(TermAppl("s14659519", List()),SymbolicName("Var", "x14659522")), CGDecl(TermAppl("s14659519", List()),SymbolicName("Loop", "n14659526")), CGRef(SymbolicName("Loop", "n14659693"),TermAppl("s14659519", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x14659522"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Loop", "n14659693"), SymbolicName("Loop", "n14659526")))),SubtypeRelation(List()),List())),for x := nil | nil to 0180 do
  break)
-----------------------------------
===================================
2016-12-15T14:56:38.978+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x15603643")), List(TermAppl("s15600858", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x15603839"), TermAppl("Tid", List(Var("x15603852"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x15603823"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x15603641"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s15600876", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s15600858", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s15600858", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s15600876", List()),Label('P'),TermAppl("s15600858", List())), CGRef(SymbolicName("Var", "x15603641"),TermAppl("s15600876", List())), CGRef(SymbolicName("Var", "x15603823"),TermAppl("s15600876", List())), CGDecl(TermAppl("s15600876", List()),SymbolicName("Type", "x15603839")), CGRef(SymbolicName("Type", "x15603852"),TermAppl("s15600876", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x15603839"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x15603641"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x15603823"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Type", "x15603852"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type Y = string
 in
  ord;
  size
end)
-----------------------------------
===================================
2016-12-15T14:57:28.243+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17040779", List())), State(TermAppl("Mod", List(As(Var("x17040821"),TermAppl("For", List(TermAppl("Var", List(Var("x17040822"))), TermAppl("Int", List(Var("x17041554"))), TermAppl("Call", List(Var("x17042796"), TermAppl("Cons", List(TermAppl("Int", List(Var("x17042980"))), TermAppl("Nil", List()))))), TermAppl("Assign", List(TermAppl("Var", List(Var("x17042744"))), TermAppl("Var", List(Var("x17042499")))))))))),List(CSubtype(TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List()))),TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s17040779", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17040779", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s17040819", List()),Label('P'),TermAppl("s17040779", List())), CGDecl(TermAppl("s17040819", List()),SymbolicName("Var", "x17040822")), CGDecl(TermAppl("s17040819", List()),SymbolicName("Loop", "n17040826")), CGRef(SymbolicName("Var", "x17042499"),TermAppl("s17040819", List())), CGRef(SymbolicName("Var", "x17042744"),TermAppl("s17040819", List())), CGRef(SymbolicName("Var", "x17042796"),TermAppl("s17040779", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x17040822"), TermAppl("INT", List())), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17042499"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17042744"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17042796"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),for u := 5 to not(011674) do
  getchar := getchar)
-----------------------------------
===================================
2016-12-15T14:57:41.15+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17460150", List())), State(TermAppl("Mod", List(As(Var("x17460192"),TermAppl("For", List(TermAppl("Var", List(Var("x17460193"))), TermAppl("Int", List(Var("x17460932"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x17461755"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17464033"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17464197"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17467627"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17466475"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x17467690"))), TermAppl("Nil", List()))))))))))))))), TermAppl("Nil", List()))))), TermAppl("Call", List(Var("x17460367"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17460150", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17460150", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s17460190", List()),Label('P'),TermAppl("s17460150", List())), CGDecl(TermAppl("s17460190", List()),SymbolicName("Var", "x17460193")), CGDecl(TermAppl("s17460190", List()),SymbolicName("Loop", "n17460197")), CGRef(SymbolicName("Var", "x17460367"),TermAppl("s17460190", List())), CGRef(SymbolicName("Var", "x17461755"),TermAppl("s17460150", List())), CGRef(SymbolicName("Var", "x17464033"),TermAppl("s17460150", List())), CGRef(SymbolicName("Var", "x17464197"),TermAppl("s17460150", List())), CGRef(SymbolicName("Var", "x17466475"),TermAppl("s17460150", List())), CGRef(SymbolicName("Var", "x17467627"),TermAppl("s17460150", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x17460193"), TermAppl("INT", List())), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17464197"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x17464033"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17460367"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17466475"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17461755"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x17467627"), ConcreteName("Var", "substring", -1)))),SubtypeRelation(List()),List())),for o := 6 to (
  (
    getchar;
    flush;
    ord;
    substring;
    getchar;
    1
  )
) do
  flush())
-----------------------------------
===================================
2016-12-15T14:57:44.357+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s17562533", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Neq", List(TermAppl("Var", List(Var("x17570262"))), TermAppl("Var", List(Var("x17569386"))))), TermAppl("Neq", List(TermAppl("Var", List(Var("x17567817"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x17571172"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x17571336"))), TermAppl("Nil", List()))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17562533", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17562533", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x17567817"),TermAppl("s17562533", List())), CGRef(SymbolicName("Var", "x17569386"),TermAppl("s17562533", List())), CGRef(SymbolicName("Var", "x17570262"),TermAppl("s17562533", List())), CGRef(SymbolicName("Var", "x17571172"),TermAppl("s17562533", List())), CGRef(SymbolicName("Var", "x17571336"),TermAppl("s17562533", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17567817"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17571172"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17570262"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x17571336"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x17569386"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print <> print & flush <> (
  flush;
  flush
))
-----------------------------------
===================================
2016-12-15T14:58:00.107+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s17996362", List())), State(TermAppl("Mod", List(As(Var("x17996404"),TermAppl("For", List(TermAppl("Var", List(Var("x17996405"))), TermAppl("Int", List(Var("x17997520"))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x18000281"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18000117"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x18000362"))), TermAppl("Nil", List()))))))))), TermAppl("Call", List(Var("x17996579"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s17996362", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s17996362", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s17996402", List()),Label('P'),TermAppl("s17996362", List())), CGDecl(TermAppl("s17996402", List()),SymbolicName("Var", "x17996405")), CGDecl(TermAppl("s17996402", List()),SymbolicName("Loop", "n17996409")), CGRef(SymbolicName("Var", "x17996579"),TermAppl("s17996402", List())), CGRef(SymbolicName("Var", "x18000117"),TermAppl("s17996362", List())), CGRef(SymbolicName("Var", "x18000281"),TermAppl("s17996362", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x17996405"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x17996579"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x18000117"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x18000281"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for Y := 60 to (
  print;
  flush;
  810
) do
  flush())
-----------------------------------
===================================
2016-12-15T14:58:07.915+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x18266057")), List(TermAppl("s18260018", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x18260256"), TermAppl("Var", List(Var("x18265891"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18262963"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18265255"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18266055"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s18260036", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18260018", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18260018", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s18260036", List()),Label('P'),TermAppl("s18260018", List())), CGDecl(TermAppl("s18260036", List()),SymbolicName("Var", "x18260256")), CGRef(SymbolicName("Var", "x18262963"),TermAppl("s18260036", List())), CGRef(SymbolicName("Var", "x18265255"),TermAppl("s18260036", List())), CGRef(SymbolicName("Var", "x18265891"),TermAppl("s18260018", List())), CGRef(SymbolicName("Var", "x18266055"),TermAppl("s18260036", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x18260256"), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x18262963"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x18265255"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x18265891"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x18266055"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  var yL7TX := getchar
 in
  getchar;
  size;
  size
end)
-----------------------------------
===================================
2016-12-15T14:58:15.477+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s18401516", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s18401534", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s18401516", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18401516", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s18401534", List()),Label('P'),TermAppl("s18401516", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:58:23.247+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s18636375", List())), State(TermAppl("Mod", List(As(Var("x18636417"),TermAppl("For", List(TermAppl("Var", List(Var("x18636418"))), TermAppl("Or", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x18641881"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18644925"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18644015"))), TermAppl("Cons", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x18645271"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x18639126"))))), TermAppl("Leq", List(TermAppl("Var", List(Var("x18640997"))), TermAppl("Var", List(Var("x18641717"))))), As(Var("x18636588"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18636375", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18636375", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s18636415", List()),Label('P'),TermAppl("s18636375", List())), CGDecl(TermAppl("s18636415", List()),SymbolicName("Var", "x18636418")), CGDecl(TermAppl("s18636415", List()),SymbolicName("Loop", "n18636422")), CGRef(SymbolicName("Loop", "n18636589"),TermAppl("s18636415", List())), CGRef(SymbolicName("Var", "x18639126"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18640997"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18641717"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18641881"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18644015"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18644925"),TermAppl("s18636375", List())), CGRef(SymbolicName("Var", "x18645271"),TermAppl("s18636375", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x18636418"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18645271"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x18641717"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x18644925"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Loop", "n18636589"), SymbolicName("Loop", "n18636422")), Tuple2(SymbolicName("Var", "x18641881"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x18640997"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x18639126"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x18644015"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for P__upd := (
  flush;
  ord;
  print;
  (
    flush
  )
) | flush to concat <= concat do
  break)
-----------------------------------
===================================
2016-12-15T14:58:30.806+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s18865091", List())), State(TermAppl("Mod", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x18878556"))), TermAppl("If", List(TermAppl("Minus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("String", List(Var("x18874148"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18877806"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x18883513"))), TermAppl("Cons", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x18881735"))), TermAppl("Var", List(Var("x18882949"))))), TermAppl("Nil", List()))))))))))), TermAppl("Uminus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x18883695"))), TermAppl("Cons", List(TermAppl("Int", List(Var("x18883776"))), TermAppl("Nil", List()))))))))))), TermAppl("Var", List(Var("x18876702"))), TermAppl("Var", List(Var("x18883349"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s18865091", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s18865091", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x18876702"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18877806"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18878556"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18881735"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18882949"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18883349"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18883513"),TermAppl("s18865091", List())), CGRef(SymbolicName("Var", "x18883695"),TermAppl("s18865091", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x18877806"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x18878556"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x18883349"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x18883513"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x18883695"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x18881735"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x18882949"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x18876702"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),ord < (if (
  "\			 \\814\
 \";
  getchar;
  substring;
  size > ord
) - - (
  chr;
  6
) then
  ord
else
  ord))
-----------------------------------
===================================
2016-12-15T14:58:56.367+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s19656324", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Or", List(TermAppl("Call", List(Var("x19661369"), TermAppl("Cons", List(TermAppl("String", List(Var("x19669658"))), TermAppl("Nil", List()))))), TermAppl("Neq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x19672358"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x19672947"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x19672776"))), TermAppl("Nil", List()))))))))), TermAppl("Var", List(Var("x19661276"))))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x19664275"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x19666612"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s19656324", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19656324", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x19661276"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19661369"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19664275"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19666612"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19672358"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19672776"),TermAppl("s19656324", List())), CGRef(SymbolicName("Var", "x19672947"),TermAppl("s19656324", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19672776"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x19664275"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x19672358"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x19672947"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x19666612"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x19661369"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x19661276"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),if size("") | (
  concat;
  size;
  print
) <> print then
  (
    ord;
    flush()
  ))
-----------------------------------
===================================
2016-12-15T14:59:00.94+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s19791046", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x19791664"))), TermAppl("Nil", List()))))), TermAppl("Int", List(Var("x19792022"))))))),List(CDistinct(Declarations(TermAppl("s19791228", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s19791046", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19791046", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s19791228", List()),Label('P'),TermAppl("s19791046", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  2
end - 326)
-----------------------------------
===================================
2016-12-15T14:59:06.21+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x19930044")), List(TermAppl("s19927533", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x19932010"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x19931846"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x19930042"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s19927551", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s19927533", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19927533", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s19927551", List()),Label('P'),TermAppl("s19927533", List())), CGRef(SymbolicName("Var", "x19930042"),TermAppl("s19927551", List())), CGRef(SymbolicName("Var", "x19931846"),TermAppl("s19927551", List())), CGRef(SymbolicName("Var", "x19932010"),TermAppl("s19927551", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x19930042"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x19931846"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x19932010"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),let
 in
  chr;
  exit;
  chr
end)
-----------------------------------
===================================
2016-12-15T14:59:06.218+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s19932018", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s19932036", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s19932018", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s19932018", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s19932036", List()),Label('P'),TermAppl("s19932018", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T14:59:10.38+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20047938", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Times", List(TermAppl("Or", List(TermAppl("Var", List(Var("x20052287"))), TermAppl("Var", List(Var("x20052451"))))), TermAppl("Int", List(Var("x20049071"))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x20058149"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20054729"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20061262"))), TermAppl("Cons", List(TermAppl("Geq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x20062026"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20061862"))), TermAppl("Nil", List()))))))), TermAppl("Var", List(Var("x20060352"))))), TermAppl("Nil", List()))))))))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20047938", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20047938", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20052287"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20052451"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20054729"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20058149"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20060352"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20061262"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20061862"),TermAppl("s20047938", List())), CGRef(SymbolicName("Var", "x20062026"),TermAppl("s20047938", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20061262"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x20058149"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20062026"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x20054729"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x20060352"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x20052287"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x20061862"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x20052451"), ConcreteName("Var", "not", -1)))),SubtypeRelation(List()),List())),(not | not) * 29 / (
  getchar;
  substring;
  not;
  (
    ord;
    print
  ) >= print
))
-----------------------------------
===================================
2016-12-15T14:59:14.143+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20193945")), List(TermAppl("s20193935", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x20194512"))), TermAppl("And", List(TermAppl("Var", List(Var("x20198464"))), TermAppl("Var", List(Var("x20198822"))))), TermAppl("Uminus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x20200799"))), TermAppl("Var", List(Var("x20200963"))))))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s20193935", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20193935", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x20194512"),TermAppl("s20193935", List())), CGRef(SymbolicName("Var", "x20198464"),TermAppl("s20193935", List())), CGRef(SymbolicName("Var", "x20198822"),TermAppl("s20193935", List())), CGRef(SymbolicName("Var", "x20200799"),TermAppl("s20193935", List())), CGRef(SymbolicName("Var", "x20200963"),TermAppl("s20193935", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20200799"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x20194512"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x20198822"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x20198464"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x20200963"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),int[not & not] of - (flush > flush))
-----------------------------------
===================================
2016-12-15T14:59:16.162+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20265041", List())), State(TermAppl("Mod", List(TermAppl("Divide", List(TermAppl("Or", List(TermAppl("Var", List(Var("x20268432"))), TermAppl("Var", List(Var("x20270787"))))), TermAppl("Gt", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Int", List(Var("x20270384"))), TermAppl("Nil", List()))))), TermAppl("Int", List(Var("x20269526"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20265041", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20265041", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20268432"),TermAppl("s20265041", List())), CGRef(SymbolicName("Var", "x20270787"),TermAppl("s20265041", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20268432"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20270787"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),(getchar | getchar) / ((
  20
) > 6))
-----------------------------------
===================================
2016-12-15T14:59:20.823+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x20395753")), List(TermAppl("s20391308", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x20393765"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20395587"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20395751"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s20391326", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s20391308", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20391308", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s20391326", List()),Label('P'),TermAppl("s20391308", List())), CGRef(SymbolicName("Var", "x20393765"),TermAppl("s20391326", List())), CGRef(SymbolicName("Var", "x20395587"),TermAppl("s20391326", List())), CGRef(SymbolicName("Var", "x20395751"),TermAppl("s20391326", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20393765"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20395587"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x20395751"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),let
 in
  getchar;
  getchar;
  getchar
end)
-----------------------------------
===================================
2016-12-15T14:59:21.251+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20404293", List())), State(TermAppl("Mod", List(TermAppl("Plus", List(TermAppl("And", List(TermAppl("Var", List(Var("x20411629"))), TermAppl("Var", List(Var("x20411931"))))), TermAppl("Times", List(TermAppl("Int", List(Var("x20406340"))), TermAppl("Geq", List(TermAppl("Var", List(Var("x20412095"))), TermAppl("Var", List(Var("x20410060"))))))))))),List(CResolve(SymbolicName("Var", "x20412095"),Var("x20412096")), CTypeOf(Var("x20412096"),TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List()))))),List(NewScope(Var("s")), CGDecl(TermAppl("s20404293", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20404293", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20410060"),TermAppl("s20404293", List())), CGRef(SymbolicName("Var", "x20411629"),TermAppl("s20404293", List())), CGRef(SymbolicName("Var", "x20411931"),TermAppl("s20404293", List())), CGRef(SymbolicName("Var", "x20412095"),TermAppl("s20404293", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20410060"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x20411629"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x20411931"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(chr & chr) + 5 * (print >= print))
-----------------------------------
===================================
2016-12-15T14:59:31.191+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20708607", List())), State(TermAppl("Mod", List(TermAppl("Minus", List(TermAppl("Gt", List(TermAppl("Var", List(Var("x20714005"))), TermAppl("Var", List(Var("x20714307"))))), TermAppl("Eq", List(TermAppl("Var", List(Var("x20714471"))), TermAppl("Var", List(Var("x20712436"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s20708607", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20708607", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x20712436"),TermAppl("s20708607", List())), CGRef(SymbolicName("Var", "x20714005"),TermAppl("s20708607", List())), CGRef(SymbolicName("Var", "x20714307"),TermAppl("s20708607", List())), CGRef(SymbolicName("Var", "x20714471"),TermAppl("s20708607", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20712436"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x20714005"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x20714307"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x20714471"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),(flush > flush) - (chr = chr))
-----------------------------------
===================================
2016-12-15T14:59:39.827+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s20949184", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("String", List(Var("x20959112"))), TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x20951199"), TermAppl("Var", List(Var("x20955728"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20953924"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x20959278"))), TermAppl("Cons", List(TermAppl("String", List(Var("x20958476"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x20959353"), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))))))),List(CDistinct(Declarations(TermAppl("s20949366", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s20949184", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s20949184", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s20949366", List()),Label('P'),TermAppl("s20949184", List())), CGDecl(TermAppl("s20949366", List()),SymbolicName("Var", "x20951199")), CGRef(SymbolicName("Var", "x20953924"),TermAppl("s20949366", List())), CGRef(SymbolicName("Var", "x20955728"),TermAppl("s20949184", List())), CGRef(SymbolicName("Var", "x20959278"),TermAppl("s20949366", List())), CGRef(SymbolicName("Var", "x20959353"),TermAppl("s20949366", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x20951199"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x20953924"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x20955728"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x20959278"), SymbolicName("Var", "x20951199")), Tuple2(SymbolicName("Var", "x20959353"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),"\n" <= let
  var n1 := exit
 in
  flush;
  n1;
  "";
  getchar()
end)
-----------------------------------
===================================
2016-12-15T14:59:41.568+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s21004334", List())), State(TermAppl("Mod", List(TermAppl("While", List(TermAppl("Or", List(TermAppl("Var", List(Var("x21007380"))), TermAppl("Var", List(Var("x21008234"))))), TermAppl("While", List(TermAppl("Int", List(Var("x21008297"))), As(Var("x21007433"),TermAppl("Break", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s21004334", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s21004334", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s21004369", List()),Label('P'),TermAppl("s21004334", List())), CGDecl(TermAppl("s21004369", List()),ConcreteName("Loop", "", 21004373)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s21004533", List()),Label('P'),TermAppl("s21004369", List())), CGDecl(TermAppl("s21004533", List()),ConcreteName("Loop", "", 21004537)), CGRef(SymbolicName("Var", "x21007380"),TermAppl("s21004334", List())), CGRef(SymbolicName("Loop", "n21007434"),TermAppl("s21004533", List())), CGRef(SymbolicName("Var", "x21008234"),TermAppl("s21004334", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x21007380"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Loop", "n21007434"), ConcreteName("Loop", "", 21004537)), Tuple2(SymbolicName("Var", "x21008234"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),while flush | flush do
  while 9415 do
    break)
-----------------------------------
===================================
2016-12-15T15:00:15.38+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22020171")), List(TermAppl("s22020161", List())), State(TermAppl("Mod", List(TermAppl("Array", List(TermAppl("Tid", List(Var("x22020738"))), TermAppl("And", List(TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("String", List(Var("x22023007"))))))),List(CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s22020161", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22020161", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Type", "x22020738"),TermAppl("s22020161", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x22020738"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),string[nil & nil] of "")
-----------------------------------
===================================
2016-12-15T15:00:28.329+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x22460502")), List(TermAppl("s22459121", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x22459341"), TermAppl("Var", List(Var("x22459972"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22460136"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22460318"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x22460500"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s22459139", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s22459121", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22459121", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s22459139", List()),Label('P'),TermAppl("s22459121", List())), CGDecl(TermAppl("s22459139", List()),SymbolicName("Var", "x22459341")), CGRef(SymbolicName("Var", "x22459972"),TermAppl("s22459121", List())), CGRef(SymbolicName("Var", "x22460136"),TermAppl("s22459139", List())), CGRef(SymbolicName("Var", "x22460318"),TermAppl("s22459139", List())), CGRef(SymbolicName("Var", "x22460500"),TermAppl("s22459139", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x22459341"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x22459972"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x22460136"), SymbolicName("Var", "x22459341")), Tuple2(SymbolicName("Var", "x22460318"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x22460500"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
  var n1 := ord
 in
  n1;
  size;
  size
end)
-----------------------------------
===================================
2016-12-15T15:00:28.439+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s22464304", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x22464572"), TermAppl("Tid", List(Var("x22464593"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x22464580"), TermAppl("Tid", List(Var("x22464630"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x22464634"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x22464676"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x22464642"), TermAppl("Tid", List(Var("x22464672"))))), TermAppl("Nil", List()))))))))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x22464600"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x22464617"))))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s22464322", List()), "All")), CDistinct(Declarations(TermAppl("s22464502", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s22464304", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22464304", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s22464502", List()),Label('P'),TermAppl("s22464304", List())), CGDirectEdge(TermAppl("s22464322", List()),Label('P'),TermAppl("s22464502", List())), CGDecl(TermAppl("s22464502", List()),SymbolicName("Type", "x22464572")), CGDecl(TermAppl("s22464502", List()),SymbolicName("Type", "x22464580")), CGRef(SymbolicName("Type", "x22464593"),TermAppl("s22464502", List())), CGDecl(TermAppl("s22464322", List()),SymbolicName("Type", "x22464600")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x22464617"),TermAppl("s22464322", List())), CGRef(SymbolicName("Type", "x22464630"),TermAppl("s22464502", List())), CGDecl(TermAppl("s22464502", List()),SymbolicName("Type", "x22464634")), CGDecl(TermAppl("s22464502", List()),SymbolicName("Type", "x22464642")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x22464672"),TermAppl("s22464502", List())), CGRef(SymbolicName("Type", "x22464676"),TermAppl("s22464502", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x22464580"), Var("x22464632")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x22464572"), TermAppl("INT", List())), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x22464634"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s22464645", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x22464642"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s22464645", List())))), Binding(SymbolicName("Type", "x22464600"), TermAppl("ARRAY", List(TermAppl("INT", List()), TermAppl("s22464603", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x22464630"), SymbolicName("Type", "x22464580")), Tuple2(SymbolicName("Type", "x22464676"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x22464617"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x22464593"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Type", "x22464672"), SymbolicName("Type", "x22464634")))),SubtypeRelation(List()),List())),let
  type c = int
  type n2 = n2
  type n1 = array of string
  type Z_ = n1
  type w = array of int
 in
end)
-----------------------------------
===================================
2016-12-15T15:00:36.567+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s22689520", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s22689538", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s22689520", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22689520", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s22689538", List()),Label('P'),TermAppl("s22689520", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T15:00:43.813+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s22916028", List())), State(TermAppl("Mod", List(TermAppl("And", List(TermAppl("Geq", List(TermAppl("Var", List(Var("x22923347"))), TermAppl("Var", List(Var("x22921312"))))), TermAppl("Gt", List(TermAppl("Var", List(Var("x22922881"))), TermAppl("Var", List(Var("x22923183"))))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s22916028", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s22916028", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x22921312"),TermAppl("s22916028", List())), CGRef(SymbolicName("Var", "x22922881"),TermAppl("s22916028", List())), CGRef(SymbolicName("Var", "x22923183"),TermAppl("s22916028", List())), CGRef(SymbolicName("Var", "x22923347"),TermAppl("s22916028", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x22921312"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x22922881"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x22923183"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x22923347"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),print >= print & substring > substring)
-----------------------------------
===================================
2016-12-15T15:00:50.832+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s23137532", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s23137550", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s23137532", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23137532", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s23137550", List()),Label('P'),TermAppl("s23137532", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T15:00:58.636+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x23374883")), List(TermAppl("s23372007", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x23376569"), TermAppl("Tid", List(Var("x23376582"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x23376860"), TermAppl("Tid", List(Var("x23376894"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x23376864"), TermAppl("Tid", List(Var("x23376877"))))), TermAppl("Nil", List()))))))))), TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x23376604"), TermAppl("Var", List(Var("x23376851"))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("String", List(Var("x23376555"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x23374881"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s23372025", List()), "All")), CDistinct(Declarations(TermAppl("s23372223", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s23372007", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23372007", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s23372223", List()),Label('P'),TermAppl("s23372007", List())), CGDirectEdge(TermAppl("s23372025", List()),Label('P'),TermAppl("s23372223", List())), CGRef(SymbolicName("Var", "x23374881"),TermAppl("s23372025", List())), CGDecl(TermAppl("s23372223", List()),SymbolicName("Type", "x23376569")), CGRef(SymbolicName("Type", "x23376582"),TermAppl("s23372223", List())), CGDecl(TermAppl("s23372025", List()),SymbolicName("Var", "x23376604")), CGRef(SymbolicName("Var", "x23376851"),TermAppl("s23372223", List())), CGDecl(TermAppl("s23372223", List()),SymbolicName("Type", "x23376860")), CGDecl(TermAppl("s23372223", List()),SymbolicName("Type", "x23376864")), CGRef(SymbolicName("Type", "x23376877"),TermAppl("s23372223", List())), CGRef(SymbolicName("Type", "x23376894"),TermAppl("s23372223", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x23376569"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x23376860"), Var("x23376896")), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x23376864"), TermAppl("INT", List())), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x23376604"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x23376894"), SymbolicName("Type", "x23376860")), Tuple2(SymbolicName("Type", "x23376582"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x23376877"), ConcreteName("Type", "int", -1)), Tuple2(SymbolicName("Var", "x23376851"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x23374881"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
  type T5 = string
  type n1 = n1
  type q = int
  var cMa := not
 in
  "\\";
  ord
end)
-----------------------------------
===================================
2016-12-15T15:01:05.091+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s23554294", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Minus", List(TermAppl("Int", List(Var("x23555784"))), TermAppl("Int", List(Var("x23556142"))))), TermAppl("Call", List(Var("x23555226"), TermAppl("Nil", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s23554294", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23554294", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x23555226"),TermAppl("s23554294", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x23555226"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),if 30 - 2 then
  flush())
-----------------------------------
===================================
2016-12-15T15:01:12.106+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s23790205", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x23790633"), TermAppl("Tid", List(Var("x23790646"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x23790658"), TermAppl("Tid", List(Var("x23790671"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s23790223", List()), "All")), CDistinct(Declarations(TermAppl("s23790424", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s23790205", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s23790205", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s23790223", List()),Label('P'),TermAppl("s23790205", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s23790424", List()),Label('P'),TermAppl("s23790223", List())), CGDecl(TermAppl("s23790424", List()),SymbolicName("Type", "x23790633")), CGRef(SymbolicName("Type", "x23790646"),TermAppl("s23790424", List())), CGDecl(TermAppl("s23790424", List()),SymbolicName("Type", "x23790658")), CGRef(SymbolicName("Type", "x23790671"),TermAppl("s23790424", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x23790658"), Var("x23790673")), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x23790633"), Var("x23790648")))),Resolution(Map(Tuple2(SymbolicName("Type", "x23790646"), SymbolicName("Type", "x23790633")), Tuple2(SymbolicName("Type", "x23790671"), SymbolicName("Type", "x23790658")))),SubtypeRelation(List()),List())),let
 in
  let
    type n2 = n2
    type n1 = n1
   in
  end
end)
-----------------------------------
===================================
2016-12-15T15:01:49.025+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x24917192")), List(TermAppl("s24904156", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDec", List(Var("x24904351"), TermAppl("Tid", List(Var("x24904389"))), TermAppl("String", List(Var("x24905018"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24905184"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24910358"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24910194"))), TermAppl("Cons", List(TermAppl("String", List(Var("x24907950"))), TermAppl("Cons", List(TermAppl("String", List(Var("x24913124"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24917354"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24915368"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x24917190"))), TermAppl("Nil", List()))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s24904174", List()), "All")), CSubtype(TermAppl("STRING", List()),TermAppl("STRING", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s24904156", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s24904156", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s24904174", List()),Label('P'),TermAppl("s24904156", List())), CGDecl(TermAppl("s24904174", List()),SymbolicName("Var", "x24904351")), CGRef(SymbolicName("Type", "x24904389"),TermAppl("s24904156", List())), CGRef(SymbolicName("Var", "x24905184"),TermAppl("s24904174", List())), CGRef(SymbolicName("Var", "x24910194"),TermAppl("s24904174", List())), CGRef(SymbolicName("Var", "x24910358"),TermAppl("s24904174", List())), CGRef(SymbolicName("Var", "x24915368"),TermAppl("s24904174", List())), CGRef(SymbolicName("Var", "x24917190"),TermAppl("s24904174", List())), CGRef(SymbolicName("Var", "x24917354"),TermAppl("s24904174", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x24904351"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x24904389"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Var", "x24915368"), SymbolicName("Var", "x24904351")), Tuple2(SymbolicName("Var", "x24917354"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x24917190"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x24910358"), SymbolicName("Var", "x24904351")), Tuple2(SymbolicName("Var", "x24905184"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x24910194"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
  var n1 : string := ""
 in
  exit;
  n1;
  concat;
  "\"\\\
\\nh";
  "";
  substring;
  n1;
  ord
end)
-----------------------------------
===================================
2016-12-15T15:01:56.678+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25164784")), List(TermAppl("s25159283", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x25164962"), TermAppl("Tid", List(Var("x25164975"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25164946"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25162504"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25164782"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s25159301", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s25159283", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25159283", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s25159301", List()),Label('P'),TermAppl("s25159283", List())), CGRef(SymbolicName("Var", "x25162504"),TermAppl("s25159301", List())), CGRef(SymbolicName("Var", "x25164782"),TermAppl("s25159301", List())), CGRef(SymbolicName("Var", "x25164946"),TermAppl("s25159301", List())), CGDecl(TermAppl("s25159301", List()),SymbolicName("Type", "x25164962")), CGRef(SymbolicName("Type", "x25164975"),TermAppl("s25159301", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x25164962"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25162504"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Var", "x25164782"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x25164946"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Type", "x25164975"), ConcreteName("Type", "string", -1)))),SubtypeRelation(List()),List())),let
  type Z9w = string
 in
  flush;
  not;
  size
end)
-----------------------------------
===================================
2016-12-15T15:02:00.133+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s25262419", List())), State(TermAppl("Mod", List(As(Var("x25262461"),TermAppl("For", List(TermAppl("Var", List(Var("x25262462"))), TermAppl("Int", List(Var("x25264000"))), TermAppl("Eq", List(TermAppl("Var", List(Var("x25266386"))), TermAppl("Var", List(Var("x25266550"))))), TermAppl("Call", List(Var("x25263157"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25262419", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25262419", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s25262459", List()),Label('P'),TermAppl("s25262419", List())), CGDecl(TermAppl("s25262459", List()),SymbolicName("Var", "x25262462")), CGDecl(TermAppl("s25262459", List()),SymbolicName("Loop", "n25262466")), CGRef(SymbolicName("Var", "x25263157"),TermAppl("s25262459", List())), CGRef(SymbolicName("Var", "x25266386"),TermAppl("s25262419", List())), CGRef(SymbolicName("Var", "x25266550"),TermAppl("s25262419", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Var", "x25262462"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25263157"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x25266386"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x25266550"), ConcreteName("Var", "getchar", -1)))),SubtypeRelation(List()),List())),for PGw__ := 2 to getchar = getchar do
  flush())
-----------------------------------
===================================
2016-12-15T15:02:10.904+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s25613802", List())), State(TermAppl("Mod", List(As(Var("x25613844"),TermAppl("For", List(TermAppl("Var", List(Var("x25613845"))), TermAppl("Uminus", List(TermAppl("Lt", List(TermAppl("Call", List(Var("x25619186"), TermAppl("Nil", List()))), TermAppl("String", List(Var("x25616928"))))))), TermAppl("Leq", List(TermAppl("String", List(Var("x25618805"))), TermAppl("String", List(Var("x25619109"))))), TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Call", List(Var("x25619513"), TermAppl("Nil", List()))), TermAppl("Nil", List())))))))))),List(CDistinct(Declarations(TermAppl("s25613984", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s25613802", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25613802", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s25613842", List()),Label('P'),TermAppl("s25613802", List())), CGDecl(TermAppl("s25613842", List()),SymbolicName("Var", "x25613845")), CGDecl(TermAppl("s25613842", List()),SymbolicName("Loop", "n25613849")), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s25613984", List()),Label('P'),TermAppl("s25613842", List())), CGRef(SymbolicName("Var", "x25619186"),TermAppl("s25613802", List())), CGRef(SymbolicName("Var", "x25619513"),TermAppl("s25613984", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(SymbolicName("Var", "x25613845"), TermAppl("INT", List())), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25619186"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x25619513"), ConcreteName("Var", "flush", -1)))),SubtypeRelation(List()),List())),for z := - (getchar() < "") to "" <= "" do
  let
   in
    flush()
  end)
-----------------------------------
===================================
2016-12-15T15:02:20.579+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s25941192", List())), State(TermAppl("Mod", List(As(Var("x25941234"),TermAppl("For", List(TermAppl("Var", List(Var("x25941235"))), TermAppl("Neq", List(TermAppl("Var", List(Var("x25944741"))), TermAppl("Var", List(Var("x25943880"))))), TermAppl("Int", List(Var("x25944804"))), TermAppl("Call", List(Var("x25943937"), TermAppl("Nil", List())))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s25941192", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25941192", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s25941232", List()),Label('P'),TermAppl("s25941192", List())), CGDecl(TermAppl("s25941232", List()),SymbolicName("Var", "x25941235")), CGDecl(TermAppl("s25941232", List()),SymbolicName("Loop", "n25941239")), CGRef(SymbolicName("Var", "x25943880"),TermAppl("s25941192", List())), CGRef(SymbolicName("Var", "x25943937"),TermAppl("s25941232", List())), CGRef(SymbolicName("Var", "x25944741"),TermAppl("s25941192", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x25941235"), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25943880"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x25943937"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x25944741"), ConcreteName("Var", "print", -1)))),SubtypeRelation(List()),List())),for Ik := print <> print to 2 do
  flush())
-----------------------------------
===================================
2016-12-15T15:02:21.164+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x25965043")), List(TermAppl("s25962238", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x25964695"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25964859"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x25965041"))), TermAppl("Nil", List()))))))))))),List(CDistinct(Declarations(TermAppl("s25962256", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s25962238", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s25962238", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s25962256", List()),Label('P'),TermAppl("s25962238", List())), CGRef(SymbolicName("Var", "x25964695"),TermAppl("s25962256", List())), CGRef(SymbolicName("Var", "x25964859"),TermAppl("s25962256", List())), CGRef(SymbolicName("Var", "x25965041"),TermAppl("s25962256", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x25964695"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x25964859"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x25965041"), ConcreteName("Var", "size", -1)))),SubtypeRelation(List()),List())),let
 in
  concat;
  chr;
  size
end)
-----------------------------------
===================================
2016-12-15T15:02:35.052+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s26458002", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s26458020", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26458002", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26458002", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26458020", List()),Label('P'),TermAppl("s26458002", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T15:02:40.729+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26653920")), List(TermAppl("s26649293", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Int", List(Var("x26651413"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x26653754"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x26653918"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s26649311", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26649293", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26649293", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26649311", List()),Label('P'),TermAppl("s26649293", List())), CGRef(SymbolicName("Var", "x26653754"),TermAppl("s26649311", List())), CGRef(SymbolicName("Var", "x26653918"),TermAppl("s26649311", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26653754"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x26653918"), ConcreteName("Var", "ord", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  70735224740;
  size;
  ord
end)
-----------------------------------
===================================
2016-12-15T15:02:42.391+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x26709361")), List(TermAppl("s26707340", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x26709523"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x26709359"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s26707358", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26707340", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26707340", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26707358", List()),Label('P'),TermAppl("s26707340", List())), CGRef(SymbolicName("Var", "x26709359"),TermAppl("s26707358", List())), CGRef(SymbolicName("Var", "x26709523"),TermAppl("s26707358", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x26709359"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x26709523"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
 in
  exit;
  flush
end)
-----------------------------------
===================================
2016-12-15T15:02:47.797+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s26870019", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s26870037", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26870019", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26870019", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26870037", List()),Label('P'),TermAppl("s26870019", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T15:02:49.889+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s26909248", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x26909483"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x26909508"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x26909491"), TermAppl("Tid", List(Var("x26909538"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x26909512"), TermAppl("Tid", List(Var("x26909525"))))), TermAppl("Nil", List()))))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s26909266", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s26909248", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s26909248", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s26909266", List()),Label('P'),TermAppl("s26909248", List())), CGDecl(TermAppl("s26909266", List()),SymbolicName("Type", "x26909483")), CGDecl(TermAppl("s26909266", List()),SymbolicName("Type", "x26909491")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x26909508"),TermAppl("s26909266", List())), CGDecl(TermAppl("s26909266", List()),SymbolicName("Type", "x26909512")), CGRef(SymbolicName("Type", "x26909525"),TermAppl("s26909266", List())), CGRef(SymbolicName("Type", "x26909538"),TermAppl("s26909266", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(SymbolicName("Type", "x26909512"), TermAppl("STRING", List())), Binding(SymbolicName("Type", "x26909491"), TermAppl("INT", List())), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x26909483"), TermAppl("ARRAY", List(TermAppl("STRING", List()), TermAppl("s26909494", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Type", "x26909508"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x26909525"), ConcreteName("Type", "string", -1)), Tuple2(SymbolicName("Type", "x26909538"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type BQZ = array of string
  type Q = int
  type G = string
 in
end)
-----------------------------------
===================================
2016-12-15T15:02:58.518+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s27200009", List())), State(TermAppl("Mod", List(TermAppl("IfThen", List(TermAppl("Eq", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x27203633"))), TermAppl("Cons", List(TermAppl("Call", List(Var("x27203708"), TermAppl("Cons", List(TermAppl("Int", List(Var("x27203892"))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))))), TermAppl("String", List(Var("x27203285"))))), TermAppl("Call", List(Var("x27201002"), TermAppl("Nil", List()))))))),List(CSubtype(TermAppl("INT", List()),TermAppl("INT", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s27200009", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27200009", List()),ConcreteName("Var", "exit", -1)), CGRef(SymbolicName("Var", "x27201002"),TermAppl("s27200009", List())), CGRef(SymbolicName("Var", "x27203633"),TermAppl("s27200009", List())), CGRef(SymbolicName("Var", "x27203708"),TermAppl("s27200009", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27201002"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x27203633"), ConcreteName("Var", "chr", -1)), Tuple2(SymbolicName("Var", "x27203708"), ConcreteName("Var", "chr", -1)))),SubtypeRelation(List()),List())),if (
  chr;
  chr(9)
) = "_" then
  flush())
-----------------------------------
===================================
2016-12-15T15:03:12.993+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27584572")), List(TermAppl("s27577379", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x27577599"), TermAppl("Var", List(Var("x27580488"))))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27579834"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27584734"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27582748"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x27584570"))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s27577397", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27577379", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27577379", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27577397", List()),Label('P'),TermAppl("s27577379", List())), CGDecl(TermAppl("s27577397", List()),SymbolicName("Var", "x27577599")), CGRef(SymbolicName("Var", "x27579834"),TermAppl("s27577397", List())), CGRef(SymbolicName("Var", "x27580488"),TermAppl("s27577379", List())), CGRef(SymbolicName("Var", "x27582748"),TermAppl("s27577397", List())), CGRef(SymbolicName("Var", "x27584570"),TermAppl("s27577397", List())), CGRef(SymbolicName("Var", "x27584734"),TermAppl("s27577397", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Var", "x27577599"), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))))),Resolution(Map(Tuple2(SymbolicName("Var", "x27584734"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x27584570"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x27579834"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x27582748"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x27580488"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),let
  var m := exit
 in
  substring;
  print;
  flush;
  exit
end)
-----------------------------------
===================================
2016-12-15T15:03:13.599+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s27603725", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s27603743", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27603725", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27603725", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27603743", List()),Label('P'),TermAppl("s27603725", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
end)
-----------------------------------
===================================
2016-12-15T15:03:16.5+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s27681139", List())), State(TermAppl("Mod", List(As(Var("x27681181"),TermAppl("For", List(TermAppl("Var", List(Var("x27681182"))), TermAppl("Leq", List(TermAppl("Var", List(Var("x27683827"))), TermAppl("Var", List(Var("x27684348"))))), TermAppl("Times", List(TermAppl("Int", List(Var("x27688145"))), TermAppl("Gt", List(TermAppl("Var", List(Var("x27687203"))), TermAppl("Var", List(Var("x27687724"))))))), As(Var("x27687777"),TermAppl("Break", List()))))))),List(),List(NewScope(Var("s")), CGDecl(TermAppl("s27681139", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27681139", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_for")), CGDirectEdge(TermAppl("s27681179", List()),Label('P'),TermAppl("s27681139", List())), CGDecl(TermAppl("s27681179", List()),SymbolicName("Var", "x27681182")), CGDecl(TermAppl("s27681179", List()),SymbolicName("Loop", "n27681186")), CGRef(SymbolicName("Var", "x27683827"),TermAppl("s27681139", List())), CGRef(SymbolicName("Var", "x27684348"),TermAppl("s27681139", List())), CGRef(SymbolicName("Var", "x27687203"),TermAppl("s27681139", List())), CGRef(SymbolicName("Var", "x27687724"),TermAppl("s27681139", List())), CGRef(SymbolicName("Loop", "n27687778"),TermAppl("s27681179", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(SymbolicName("Var", "x27681182"), TermAppl("INT", List())), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x27684348"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x27687203"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x27683827"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Loop", "n27687778"), SymbolicName("Loop", "n27681186")), Tuple2(SymbolicName("Var", "x27687724"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),for g6 := size <= ord to 6 * (concat > concat) do
  break)
-----------------------------------
===================================
2016-12-15T15:03:17.153+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x27710908")), List(TermAppl("s27710676", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("If", List(TermAppl("Int", List(Var("x27713139"))), TermAppl("NilExp", List()), TermAppl("NilExp", List()))), TermAppl("Nil", List()))))))),List(CDistinct(Declarations(TermAppl("s27710694", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27710676", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27710676", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27710694", List()),Label('P'),TermAppl("s27710676", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map()),SubtypeRelation(List()),List())),let
 in
  if 87 then
    nil
  else
    nil
end)
-----------------------------------
===================================
2016-12-15T15:03:24.134+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("UNIT", List())), List(TermAppl("s27836887", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x27837139"), TermAppl("ArrayTy", List(TermAppl("Tid", List(Var("x27837156"))))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x27837122"), TermAppl("Tid", List(Var("x27837135"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CResolve(SymbolicName("Type", "x27837156"),Var("x27837157")), CDistinct(Declarations(TermAppl("s27836905", List()), "All")), CTypeOf(Var("x27837157"),Var("x27837158"))),List(NewScope(Var("s")), CGDecl(TermAppl("s27836887", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s27836887", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s27836905", List()),Label('P'),TermAppl("s27836887", List())), CGDecl(TermAppl("s27836905", List()),SymbolicName("Type", "x27837122")), CGRef(SymbolicName("Type", "x27837135"),TermAppl("s27836905", List())), CGDecl(TermAppl("s27836905", List()),SymbolicName("Type", "x27837139")), NewScope(Var("s'")), CGRef(SymbolicName("Type", "x27837156"),TermAppl("s27836905", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(SymbolicName("Type", "x27837122"), TermAppl("INT", List())), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x27837139"), TermAppl("ARRAY", List(Var("x27837158"), TermAppl("s27837142", List())))))),Resolution(Map(Tuple2(SymbolicName("Type", "x27837135"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  type n1 = array of n1
  type IW = int
 in
end)
-----------------------------------
===================================
2016-12-15T15:03:58.237+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(TermAppl("INT", List())), List(TermAppl("s28652260", List())), State(TermAppl("Mod", List(TermAppl("Leq", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x28659608"))), TermAppl("Var", List(Var("x28659973"))))), TermAppl("Leq", List(TermAppl("While", List(TermAppl("Uminus", List(TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x28666354"))), TermAppl("Cons", List(TermAppl("Or", List(TermAppl("Var", List(Var("x28665444"))), TermAppl("Var", List(Var("x28666518"))))), TermAppl("Nil", List()))))))))), TermAppl("Call", List(Var("x28655971"), TermAppl("Nil", List()))))), TermAppl("Seq", List(TermAppl("Cons", List(TermAppl("Var", List(Var("x28661125"))), TermAppl("Cons", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Nil", List()))), TermAppl("Nil", List()))))))))))))),List(CDistinct(Declarations(TermAppl("s28661492", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s28652260", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s28652260", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s'")), CGDirectEdge(TermAppl("s28654272", List()),Label('P'),TermAppl("s28652260", List())), CGDecl(TermAppl("s28654272", List()),ConcreteName("Loop", "", 28654276)), CGRef(SymbolicName("Var", "x28655971"),TermAppl("s28654272", List())), CGRef(SymbolicName("Var", "x28659608"),TermAppl("s28652260", List())), CGRef(SymbolicName("Var", "x28659973"),TermAppl("s28652260", List())), CGRef(SymbolicName("Var", "x28661125"),TermAppl("s28652260", List())), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s28661492", List()),Label('P'),TermAppl("s28652260", List())), CGRef(SymbolicName("Var", "x28665444"),TermAppl("s28652260", List())), CGRef(SymbolicName("Var", "x28666354"),TermAppl("s28652260", List())), CGRef(SymbolicName("Var", "x28666518"),TermAppl("s28652260", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x28665444"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x28655971"), ConcreteName("Var", "flush", -1)), Tuple2(SymbolicName("Var", "x28666354"), ConcreteName("Var", "ord", -1)), Tuple2(SymbolicName("Var", "x28659973"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x28659608"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x28666518"), ConcreteName("Var", "size", -1)), Tuple2(SymbolicName("Var", "x28661125"), ConcreteName("Var", "exit", -1)))),SubtypeRelation(List()),List())),(size < size) <= ((while - (
  ord;
  ord | size
) do
  flush()) <= (
  exit;
  let
   in
  end
)))
-----------------------------------
===================================
2016-12-15T15:04:11.565+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29050200")), List(TermAppl("s29047868", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Cons", List(TermAppl("VarDecNoType", List(Var("x29048433"), TermAppl("String", List(Var("x29050748"))))), TermAppl("Cons", List(TermAppl("TypeDecs", List(TermAppl("Conss", List(TermAppl("TypeDec", List(Var("x29052062"), TermAppl("Tid", List(Var("x29052075"))))), TermAppl("Cons", List(TermAppl("TypeDec", List(Var("x29052041"), TermAppl("Tid", List(Var("x29052054"))))), TermAppl("Nil", List()))))))), TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Uminus", List(TermAppl("Lt", List(TermAppl("Var", List(Var("x29051848"))), TermAppl("Var", List(Var("x29052032"))))))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29050198"))), TermAppl("Nil", List()))))))))),List(CDistinct(Declarations(TermAppl("s29047886", List()), "All")), CDistinct(Declarations(TermAppl("s29048041", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s29047868", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29047868", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), NewScope(Var("s_dec")), CGDirectEdge(TermAppl("s29048041", List()),Label('P'),TermAppl("s29047868", List())), CGDirectEdge(TermAppl("s29047886", List()),Label('P'),TermAppl("s29048041", List())), CGDecl(TermAppl("s29048041", List()),SymbolicName("Var", "x29048433")), CGRef(SymbolicName("Var", "x29050198"),TermAppl("s29047886", List())), CGRef(SymbolicName("Var", "x29051848"),TermAppl("s29047886", List())), CGRef(SymbolicName("Var", "x29052032"),TermAppl("s29047886", List())), CGDecl(TermAppl("s29047886", List()),SymbolicName("Type", "x29052041")), CGRef(SymbolicName("Type", "x29052054"),TermAppl("s29047886", List())), CGDecl(TermAppl("s29047886", List()),SymbolicName("Type", "x29052062")), CGRef(SymbolicName("Type", "x29052075"),TermAppl("s29047886", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())), Binding(SymbolicName("Type", "x29052041"), TermAppl("INT", List())), Binding(SymbolicName("Type", "x29052062"), Var("x29052077")), Binding(SymbolicName("Var", "x29048433"), TermAppl("STRING", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29051848"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x29052032"), ConcreteName("Var", "print", -1)), Tuple2(SymbolicName("Var", "x29050198"), ConcreteName("Var", "not", -1)), Tuple2(SymbolicName("Type", "x29052075"), SymbolicName("Type", "x29052062")), Tuple2(SymbolicName("Type", "x29052054"), ConcreteName("Type", "int", -1)))),SubtypeRelation(List()),List())),let
  var E8_ := "\t\
\\t\n\n"
  type n1 = n1
  type o_NZ = int
 in
  - (print < print);
  not
end)
-----------------------------------
===================================
2016-12-15T15:04:18.511+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), Some(Var("x29254167")), List(TermAppl("s29238188", List())), State(TermAppl("Mod", List(TermAppl("Let", List(TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("NilExp", List()), TermAppl("Cons", List(TermAppl("Var", List(Var("x29240827"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29245347"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29243087"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29245511"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29247789"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29254329"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29250049"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29252361"))), TermAppl("Cons", List(TermAppl("Var", List(Var("x29254165"))), TermAppl("Nil", List()))))))))))))))))))))))))),List(CDistinct(Declarations(TermAppl("s29238206", List()), "All"))),List(NewScope(Var("s")), CGDecl(TermAppl("s29238188", List()),ConcreteName("Type", "int", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Type", "string", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "print", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "flush", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "getchar", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "ord", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "chr", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "size", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "substring", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "concat", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "not", -1)), CGDecl(TermAppl("s29238188", List()),ConcreteName("Var", "exit", -1)), NewScope(Var("s_body")), CGDirectEdge(TermAppl("s29238206", List()),Label('P'),TermAppl("s29238188", List())), CGRef(SymbolicName("Var", "x29240827"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29243087"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29245347"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29245511"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29247789"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29250049"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29252361"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29254165"),TermAppl("s29238206", List())), CGRef(SymbolicName("Var", "x29254329"),TermAppl("s29238206", List()))),TypeEnv(Map(Binding(ConcreteName("Var", "concat", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "size", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "print", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "ord", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "chr", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("STRING", List())))), Binding(ConcreteName("Type", "string", -1), TermAppl("STRING", List())), Binding(ConcreteName("Var", "substring", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Cons", List(TermAppl("STRING", List()), TermAppl("Nil", List()))))))), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "not", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("INT", List())))), Binding(ConcreteName("Var", "exit", -1), TermAppl("FUN", List(TermAppl("Cons", List(TermAppl("INT", List()), TermAppl("Nil", List()))), TermAppl("UNIT", List())))), Binding(ConcreteName("Var", "getchar", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("STRING", List())))), Binding(ConcreteName("Var", "flush", -1), TermAppl("FUN", List(TermAppl("Nil", List()), TermAppl("UNIT", List())))), Binding(ConcreteName("Type", "int", -1), TermAppl("INT", List())))),Resolution(Map(Tuple2(SymbolicName("Var", "x29254329"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x29245347"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x29245511"), ConcreteName("Var", "getchar", -1)), Tuple2(SymbolicName("Var", "x29240827"), ConcreteName("Var", "concat", -1)), Tuple2(SymbolicName("Var", "x29252361"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29250049"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x29243087"), ConcreteName("Var", "substring", -1)), Tuple2(SymbolicName("Var", "x29247789"), ConcreteName("Var", "exit", -1)), Tuple2(SymbolicName("Var", "x29254165"), ConcreteName("Var", "concat", -1)))),SubtypeRelation(List()),List())),let
 in
  nil;
  concat;
  concat;
  substring;
  getchar;
  exit;
  exit;
  exit;
  substring;
  concat
end)
-----------------------------------
===================================
2016-12-15T15:05:08.138+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s52862", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x52867"), Var("x52868"), TermAppl("Print", List(TermAppl("Int", List(Var("x52912"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s52862", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s52862", List()),SymbolicName("Class", "x52867"))),TypeEnv(Map(Binding(SymbolicName("Class", "x52867"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class b_ {
  public static void main (String[] wE) {
    System.out.println(3);
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:08.236+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s53050", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x53059"), Var("x53060"), TermAppl("Print", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Length", List(TermAppl("NewArray", List(TermAppl("Int", List(Var("x53747"))))))))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x53090"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("BoolType", List()), Var("x53269"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s53050", List()), "Class")), CDistinct(Declarations(TermAppl("s53088", List()), "Var")), CDistinct(Declarations(TermAppl("s53088", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s53050", List()),SymbolicName("Class", "x53059")), CGDecl(TermAppl("s53050", List()),SymbolicName("Class", "x53090")), CGAssoc(SymbolicName("Class", "x53090"),TermAppl("s53088", List())), CGDecl(TermAppl("s53088", List()),ConcreteName("Implicit", "this", 53095)), CGDirectEdge(TermAppl("s53088", List()),Label('P'),TermAppl("s53050", List())), NewScope(Var("cs")), CGDecl(TermAppl("s53088", List()),SymbolicName("Var", "x53269"))),TypeEnv(Map(Binding(SymbolicName("Class", "x53059"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x53090"), TermAppl("TClass", List(SymbolicName("Class", "x53090")))), Binding(ConcreteName("Implicit", "this", 53095), TermAppl("TClass", List(SymbolicName("Class", "x53090")))), Binding(SymbolicName("Var", "x53269"), TermAppl("TBool", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] g) {
    System.out.println(new int[new int[27].length].length);
    }
}

class n2 {
  boolean H;

})
-----------------------------------
===================================
2016-12-15T15:05:08.449+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s58520", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x58529"), Var("x58530"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s58520", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s58520", List()),SymbolicName("Class", "x58529"))),TypeEnv(Map(Binding(SymbolicName("Class", "x58529"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class h8 {
  public static void main (String[] q) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:12.534+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s112456", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x112465"), Var("x112466"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s112456", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s112456", List()),SymbolicName("Class", "x112465"))),TypeEnv(Map(Binding(SymbolicName("Class", "x112465"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n5 {
  public static void main (String[] Q) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:13.791+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s145154", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x145163"), Var("x145164"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s145154", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s145154", List()),SymbolicName("Class", "x145163"))),TypeEnv(Map(Binding(SymbolicName("Class", "x145163"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class o {
  public static void main (String[] WC) {
    while(true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:15.895+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s199771", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x199780"), Var("x199781"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s199771", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s199771", List()),SymbolicName("Class", "x199780"))),TypeEnv(Map(Binding(SymbolicName("Class", "x199780"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class e {
  public static void main (String[] E) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:16.273+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s213038", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x213043"), Var("x213044"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s213038", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s213038", List()),SymbolicName("Class", "x213043"))),TypeEnv(Map(Binding(SymbolicName("Class", "x213043"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class T3 {
  public static void main (String[] p_) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:18.569+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s266968", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x266973"), Var("x266974"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s266968", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s266968", List()),SymbolicName("Class", "x266973"))),TypeEnv(Map(Binding(SymbolicName("Class", "x266973"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n {
  public static void main (String[] m) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:18.656+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s267010", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x267015"), Var("x267016"), TermAppl("While", List(TermAppl("And", List(TermAppl("True", List()), TermAppl("Not", List(TermAppl("And", List(TermAppl("True", List()), TermAppl("True", List()))))))), TermAppl("Print", List(TermAppl("Int", List(Var("x269519"))))))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x267050"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x268739"))), TermAppl("Nil", List()))), TermAppl("Nil", List()))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s267010", List()), "Class")), CDistinct(Declarations(TermAppl("s267048", List()), "Var")), CDistinct(Declarations(TermAppl("s267048", List()), "Method"))),List(NewScope(Var("s")), CGDecl(TermAppl("s267010", List()),SymbolicName("Class", "x267015")), CGDecl(TermAppl("s267010", List()),SymbolicName("Class", "x267050")), CGAssoc(SymbolicName("Class", "x267050"),TermAppl("s267048", List())), CGDecl(TermAppl("s267048", List()),ConcreteName("Implicit", "this", 267055)), CGDirectEdge(TermAppl("s267048", List()),Label('P'),TermAppl("s267010", List())), NewScope(Var("cs")), CGDecl(TermAppl("s267048", List()),SymbolicName("Var", "x268739"))),TypeEnv(Map(Binding(SymbolicName("Class", "x267015"), TermAppl("TMainClass", List())), Binding(SymbolicName("Class", "x267050"), TermAppl("TClass", List(SymbolicName("Class", "x267050")))), Binding(ConcreteName("Implicit", "this", 267055), TermAppl("TClass", List(SymbolicName("Class", "x267050")))), Binding(SymbolicName("Var", "x268739"), TermAppl("TIntArray", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class n1 {
  public static void main (String[] u_) {
    while(true && !(true && true)) System.out.println(492);
    }
}

class n2 {
  int[] t_;

})
-----------------------------------
===================================
2016-12-15T15:05:22.047+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s380986", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x380995"), Var("x380996"), TermAppl("Print", List(TermAppl("Int", List(Var("x381036"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s380986", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s380986", List()),SymbolicName("Class", "x380995"))),TypeEnv(Map(Binding(SymbolicName("Class", "x380995"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class i {
  public static void main (String[] B) {
    System.out.println(5);
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:22.062+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s381304", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x381313"), Var("x381314"), TermAppl("Print", List(TermAppl("Int", List(Var("x381354"))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s381304", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s381304", List()),SymbolicName("Class", "x381313"))),TypeEnv(Map(Binding(SymbolicName("Class", "x381313"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class o {
  public static void main (String[] U7N) {
    System.out.println(6);
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:22.708+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s402662", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x402667"), Var("x402668"), TermAppl("While", List(TermAppl("True", List()), TermAppl("Block", List(TermAppl("Nil", List()))))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s402662", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s402662", List()),SymbolicName("Class", "x402667"))),TypeEnv(Map(Binding(SymbolicName("Class", "x402667"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class W {
  public static void main (String[] i) {
    while(true) {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:28.064+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s583645", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x583654"), Var("x583655"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s583645", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s583645", List()),SymbolicName("Class", "x583654"))),TypeEnv(Map(Binding(SymbolicName("Class", "x583654"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class K {
  public static void main (String[] J) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:28.583+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s599064", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x599069"), Var("x599070"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s599064", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s599064", List()),SymbolicName("Class", "x599069"))),TypeEnv(Map(Binding(SymbolicName("Class", "x599069"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class A5 {
  public static void main (String[] Jh) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T15:05:31.523+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s680553", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x680558"), Var("x680559"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Nil", List()))),List(CDistinct(Declarations(TermAppl("s680553", List()), "Class"))),List(NewScope(Var("s")), CGDecl(TermAppl("s680553", List()),SymbolicName("Class", "x680558"))),TypeEnv(Map(Binding(SymbolicName("Class", "x680558"), TermAppl("TMainClass", List())))),Resolution(Map()),SubtypeRelation(List()),List())),class o {
  public static void main (String[] ed7) {
    {
    }
    }
}
)
-----------------------------------
===================================
2016-12-15T16:46:40.715+01:00[Europe/Amsterdam]
-----------------------------------
GenerationResult(Rule("Init", SortVar("y"), None, List(TermAppl("s101", List())), State(TermAppl("Program", List(TermAppl("MainClass", List(Var("x106"), Var("x107"), TermAppl("Block", List(TermAppl("Nil", List()))))), TermAppl("Cons", List(TermAppl("Class", List(Var("x115"), TermAppl("NoParent", List()), TermAppl("Cons", List(TermAppl("Field", List(TermAppl("IntArrayType", List()), Var("x1223"))), TermAppl("Nil", List()))), TermAppl("Cons", List(TermAppl("Method", List(TermAppl("IntType", List()), Var("x159"), TermAppl("Nil", List()), TermAppl("Nil", List()), TermAppl("Cons", List(TermAppl("ArrayAssign", List(TermAppl("VarRef", List(Var("x1553"))), TermAppl("Int", List(Var("x1577"))), TermAppl("Int", List(Var("x1281"))))), TermAppl("Nil", List()))), TermAppl("Int", List(Var("x1057"))))), TermAppl("Nil", List()))))), TermAppl("Nil", List()))))),List(CDistinct(Declarations(TermAppl("s101", List()), "Class")), CDistinct(Declarations(TermAppl("s113", List()), "Var")), CDistinct(Declarations(TermAppl("s113", List()), "Method")), CDistinct(Declarations(TermAppl("s156", List()), "Var")), CSubtype(TermAppl("TInt", List()),TermAppl("TInt", List()))),List(NewScope(Var("s")), CGDecl(TermAppl("s101", List()),SymbolicName("Class", "x106")), CGDecl(TermAppl("s101", List()),SymbolicName("Class", "x115")), CGAssoc(SymbolicName("Class", "x115"),TermAppl("s113", List())), CGDecl(TermAppl("s113", List()),ConcreteName("Implicit", "this", 120)), CGDirectEdge(TermAppl("s113", List()),Label('P'),TermAppl("s101", List())), NewScope(Var("cs")), CGDecl(TermAppl("s113", List()),SymbolicName("Method", "x159")), CGDirectEdge(TermAppl("s156", List()),Label('P'),TermAppl("s113", List())), NewScope(Var("as")), NewScope(Var("ms")), CGDecl(TermAppl("s113", List()),SymbolicName("Var", "x1223")), CGRef(SymbolicName("Var", "x1553"),TermAppl("s156", List()))),TypeEnv(Map(Binding(SymbolicName("Class", "x106"), TermAppl("TMainClass", List())), Binding(SymbolicName("Method", "x159"), TermAppl("TMethod", List(TermAppl("TInt", List()), TermAppl("Nil", List())))), Binding(SymbolicName("Class", "x115"), TermAppl("TClass", List(SymbolicName("Class", "x115")))), Binding(SymbolicName("Var", "x1223"), TermAppl("TIntArray", List())), Binding(ConcreteName("Implicit", "this", 120), TermAppl("TClass", List(SymbolicName("Class", "x115")))))),Resolution(Map(Tuple2(SymbolicName("Var", "x1553"), SymbolicName("Var", "x1223")))),SubtypeRelation(List()),List())),class n2 {
  public static void main (String[] K) {
    {
    }
    }
}

class n3 {
  int[] n1;

  public int s() {
  
    n1[975221] = 8;
    return 93;
  }
})
-----------------------------------
